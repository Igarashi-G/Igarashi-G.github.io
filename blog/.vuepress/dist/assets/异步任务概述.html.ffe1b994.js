import{_ as l}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as u,c as k,b as a,w as t,a as s,d as n,f as c,r as e}from"./app.69d5dce7.js";const r="/assets/\u4EFFcelery\u6A21\u578B.ba402212.png",d={},v=s("h1",{id:"\u5F02\u6B65\u4EFB\u52A1\u96CF\u5F62",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u5F02\u6B65\u4EFB\u52A1\u96CF\u5F62","aria-hidden":"true"},"#"),n(" \u5F02\u6B65\u4EFB\u52A1\u96CF\u5F62")],-1),b=n(" **\u9020\u8F6E\u5B50\uFF1A** \u4F7F\u7528 `etcd` \u4F5C\u4E3A\u4E2D\u95F4\u4EF6\uFF0C\u81EA\u884C\u6784\u5EFA\u4E00\u5957\u5F02\u6B65\u4EFB\u52A1 "),m=c('<p>\u53C2\u8003\uFF1A</p><ul><li><ol><li><a href="/back_end/python/base/%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/%E5%BC%82%E6%AD%A5%E6%A6%82%E8%BF%B0">\u5F02\u6B65\u6982\u8FF0</a></li></ol></li><li><ol start="2"><li><a href="/back_end/python/base/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/%E5%BC%82%E6%AD%A5%E5%B9%B6%E5%8F%91%E5%BA%93asyncio">\u5F02\u6B65\u7F16\u7A0B</a></li></ol></li></ul><h2 id="\u624B\u52A8\u5B9E\u73B0\u5F02\u6B65\u4EFB\u52A1-\u4EFF-celery-\u6A21\u578B" tabindex="-1"><a class="header-anchor" href="#\u624B\u52A8\u5B9E\u73B0\u5F02\u6B65\u4EFB\u52A1-\u4EFF-celery-\u6A21\u578B" aria-hidden="true">#</a> \u624B\u52A8\u5B9E\u73B0\u5F02\u6B65\u4EFB\u52A1\uFF08\u4EFF Celery \u6A21\u578B\uFF09</h2><p>\u521A\u597D\u6700\u8FD1\u9879\u76EE\u9700\u6C42\uFF1A\u5B9E\u73B0\u4E00\u4E2A\u57FA\u4E8E <code>etcd</code> \u7684 <code>aio_task</code> \u4FBF\u4ECE\u96F6\u5F00\u59CB\u9020\u4E2A\u8F6E\u5B50</p><h4 id="\u5F02\u6B65\u4EFB\u52A1\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u4EFB\u52A1\u961F\u5217" aria-hidden="true">#</a> \u5F02\u6B65\u4EFB\u52A1\u961F\u5217\uFF1A</h4><p>\u7528\u6765\u51CF\u7F13\u9AD8\u5E76\u53D1\uFF0C\u5C06\u4EFB\u52A1\u5199\u5165\u961F\u5217\uFF0C\u901A\u8FC7\u4E00\u5B9A\u987A\u5E8F\u5F02\u6B65\u6267\u884C\uFF0C\u56E0\u6B64\u9700\u8981\u4EFB\u52A1\u961F\u5217\u4F5C\u4E3A\u7BA1\u9053</p><blockquote><p>\u76EE\u7684\u662F\u4E3A\u4E86\uFF1A</p><ol><li>\u6709\u7A7A\u4F59\u8D44\u6E90\u65F6\u6267\u884C</li><li>\u6307\u5B9A\u65F6\u95F4\u6267\u884C</li><li>\u4F7F\u7528\u540E\u53F0\u4EFB\u52A1\u8FDB\u7A0B\u6267\u884C</li></ol></blockquote><h4 id="celery-\u6A21\u578B\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#celery-\u6A21\u578B\u6982\u5FF5" aria-hidden="true">#</a> celery \u6A21\u578B\u6982\u5FF5\uFF1A</h4><h5 id="_1-task-\u751F\u4EA7\u8005" tabindex="-1"><a class="header-anchor" href="#_1-task-\u751F\u4EA7\u8005" aria-hidden="true">#</a> 1.Task(<code>\u751F\u4EA7\u8005</code>)</h5><p>\u8017\u65F6\u4EFB\u52A1\uFF0C\u6BD4\u5982\u683C\u76D8\u3001\u91CD\u542F\u3001\u5927\u6279\u91CF\u53D1\u77ED\u4FE1\u7B49\u3002web \u4E0D\u53EF\u80FD\u7ACB\u5373\u6536\u5230\u8BF7\u6C42\uFF0C<code>\u540C\u6B65</code>\u4F1A\u5361\u6B7B web \u6B7B\u7B49\uFF0C<code>\u5F02\u6B65</code>\u4F1A\u5360\u7528\u6D4F\u89C8\u5668\u8BF7\u6C42\u8D44\u6E90\u5361\u6B7B/\u4E22\u5931\u54CD\u5E94\uFF0C\u56E0\u6B64\u9700\u8981\u5F02\u6B65\u4EFB\u52A1\uFF0C\u7ACB\u5373\u8FD4\u56DE task_id \u548C\u6210\u529F</p><h5 id="_2-worker-\u6D88\u8D39\u8005" tabindex="-1"><a class="header-anchor" href="#_2-worker-\u6D88\u8D39\u8005" aria-hidden="true">#</a> 2.Worker(<code>\u6D88\u8D39\u8005</code>)</h5><p>\u5728\u540E\u53F0\u5904\u7406 Task \u7684\u5BF9\u8C61</p><h5 id="_3-broker-\u6D88\u606F\u4E2D\u95F4\u4EF6" tabindex="-1"><a class="header-anchor" href="#_3-broker-\u6D88\u606F\u4E2D\u95F4\u4EF6" aria-hidden="true">#</a> 3.Broker\uFF08<code>\u6D88\u606F\u4E2D\u95F4\u4EF6</code>\uFF09</h5><p>\u672C\u8D28\u662F<code>\u961F\u5217</code>\uFF0CTask \u4F1A\u628A\u4EFB\u52A1\u4EA4\u7ED9 Broker \u6392\u961F\uFF0CBroker \u6765\u5B9A\u6267\u884C\u5E8F\u5217\uFF0CWorker \u518D\u4ECE\u961F\u5217\u91CC\u9762\u53D6\u4EFB\u52A1\u6267\u884C</p><h5 id="_4-beat-\u8C03\u5EA6\u8005" tabindex="-1"><a class="header-anchor" href="#_4-beat-\u8C03\u5EA6\u8005" aria-hidden="true">#</a> 4.Beat(<code>\u8C03\u5EA6\u8005</code>)</h5><p>\u5B9A\u65F6\u4EFB\u52A1\u8C03\u5EA6\u5668\uFF0C\u6839\u636E\u6307\u5B9A\u7684\u65F6\u95F4\uFF0C\u5411 Broker \u4E2D\u6DFB\u52A0\u6570\u636E\uFF0C\u7136\u540E\u7B49\u5F85 Worker \u53BB\u5904\u7406</p><h5 id="_5-backend" tabindex="-1"><a class="header-anchor" href="#_5-backend" aria-hidden="true">#</a> 5.Backend</h5>',17),_=n("\u4FDD\u5B58 Worker \u6267\u884C\u7ED3\u679C\u7684\u5BF9\u8C61\uFF0C\u6BCF\u4E2A Task \u90FD\u4F1A\u6709\u8FD4\u56DE\u503C\uFF0C\u8FD9\u4E9B\u8FD4\u56DE\u503C\u5C31\u5728 Backend \u4E2D \u6BD4\u5982"),y=n("success"),w=n("pedding"),f=n("failed"),g=n(" \u8FD9\u7C7B\u72B6\u6001"),h=s("img",{src:r},null,-1),q=n("\u5176\u5B9E\u5C31\u662F\u4E00\u4E2A\u4EFB\u52A1**\u5E8F\u5217\u5316\u5B58\u50A8**\u4E0E**\u53CD\u5E8F\u5217\u5316\u83B7\u53D6**\u7684\u8FC7\u7A0B"),B=s("h4",{id:"_1-broker-\u7C7B",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-broker-\u7C7B","aria-hidden":"true"},"#"),n(" 1.Broker \u7C7B")],-1),x=n("\u6D88\u606F\u4E2D\u95F4\u4EF6\uFF0C\u5373\uFF1A"),E=n("\u961F\u5217(Queue)"),T=n(" \uFF0C\u5E94\u5728\u6B64\u7C7B\u5B58 "),D=s("code",null,"\u4EFB\u52A1",-1),I=n(" \u5E76\u5B9A\u4E49\u961F\u5217 "),N=s("code",null,"\u4F18\u5148\u7EA7",-1),F=n(" \u7B49\u89C4\u5219."),C=s("p",null,[n("\u8FD9\u91CC\u4F7F\u7528\u4E86 "),s("a",{href:"/data-base/etcd/etcd"},"etcd"),n(" \u6784\u5EFA\uFF1A"),s("a",{href:"/data-base/etcd/aioetcd3#%E7%AE%80%E5%8D%95%E5%B0%81%E8%A3%85"},"db \u6E90\u7801")],-1),O={href:"http://borker.py",target:"_blank",rel:"noopener noreferrer"},A=n("borker.py"),j=c(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> json
<span class="token keyword">from</span> typing <span class="token keyword">import</span> List<span class="token punctuation">,</span> Optional

<span class="token keyword">from</span> aioetcd3<span class="token punctuation">.</span><span class="token builtin">help</span> <span class="token keyword">import</span> range_prefix

<span class="token keyword">from</span> dashboard <span class="token keyword">import</span> database
<span class="token keyword">from</span> dashboard<span class="token punctuation">.</span>db_model<span class="token punctuation">.</span>task <span class="token keyword">import</span> TaskInDB
<span class="token keyword">from</span> rook<span class="token punctuation">.</span>util <span class="token keyword">import</span> get_now_time


<span class="token keyword">class</span> <span class="token class-name">Broker</span><span class="token punctuation">:</span>
    DB_CONFIG_KEY <span class="token operator">=</span> <span class="token string">&quot;/ufs/monitor/task&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>db_connection <span class="token operator">=</span> database<span class="token punctuation">.</span>get_db<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">enqueue</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> task_id<span class="token punctuation">,</span> task_in_db<span class="token punctuation">:</span> TaskInDB<span class="token punctuation">,</span> ttl<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        \u5C06\u4EFB\u52A1\u5199\u5165\u961F\u5217\u4E2D
        :param task_id:
        :param task_in_db:
        :param ttl:
        :return:
        &quot;&quot;&quot;</span>
        <span class="token comment"># TODO: \u5B9A\u4E49\u961F\u5217\u4F18\u5148\u7EA7</span>
        task_key <span class="token operator">=</span> <span class="token string">&quot;{}/{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>DB_CONFIG_KEY<span class="token punctuation">,</span> task_id<span class="token punctuation">)</span>
        db_value <span class="token operator">=</span> task_in_db<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">await</span> self<span class="token punctuation">.</span>db_connection<span class="token punctuation">.</span>put<span class="token punctuation">(</span>task_key<span class="token punctuation">,</span> db_value<span class="token punctuation">,</span> timeout<span class="token operator">=</span>ttl<span class="token punctuation">)</span>
        <span class="token keyword">return</span> task_in_db

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">dequeue</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> task_id<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Optional<span class="token punctuation">[</span>TaskInDB<span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        \u53BB\u4EFB\u52A1\u961F\u5217\u4E2D\u53D6\u4EFB\u52A1
        :param task_id:
        :return:
        &quot;&quot;&quot;</span>
        task_key <span class="token operator">=</span> <span class="token string">&quot;{}/{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>DB_CONFIG_KEY<span class="token punctuation">,</span> task_id<span class="token punctuation">)</span>
        task_info <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>db_connection<span class="token punctuation">.</span>get<span class="token punctuation">(</span>task_key<span class="token punctuation">)</span>
        <span class="token keyword">if</span> task_info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            task_in_db <span class="token operator">=</span> TaskInDB<span class="token punctuation">(</span><span class="token operator">**</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>task_info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> task_in_db
        <span class="token keyword">return</span> <span class="token boolean">None</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> task_id<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        \u66F4\u65B0\u961F\u5217\u4E2D\u6307\u5B9A\u7684\u4EFB\u52A1
        :param task_id:
        :param kwargs:
        :return:
        &quot;&quot;&quot;</span>
        task_in_db <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>dequeue<span class="token punctuation">(</span>task_id<span class="token punctuation">)</span>
        <span class="token keyword">if</span> task_in_db<span class="token punctuation">:</span>
            db_key <span class="token operator">=</span> <span class="token string">&quot;{}/{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>DB_CONFIG_KEY<span class="token punctuation">,</span> task_id<span class="token punctuation">)</span>
            db_value <span class="token operator">=</span> task_in_db<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            db_value<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">)</span>
            db_value<span class="token punctuation">[</span><span class="token string">&quot;updated_at&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> get_now_time<span class="token punctuation">(</span><span class="token punctuation">)</span>
            db_value <span class="token operator">=</span> TaskInDB<span class="token punctuation">(</span><span class="token operator">**</span>db_value<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token comment"># db_value = task_in_db.json()</span>

            <span class="token keyword">await</span> self<span class="token punctuation">.</span>db_connection<span class="token punctuation">.</span>put<span class="token punctuation">(</span>db_key<span class="token punctuation">,</span> db_value<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">True</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">remove</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> task_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        \u5C06\u4EFB\u52A1\u4ECE\u961F\u5217\u4E2D\u79FB\u9664
        :param task_id:
        :return:
        &quot;&quot;&quot;</span>
        db_key <span class="token operator">=</span> <span class="token string">&quot;{}/{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>DB_CONFIG_KEY<span class="token punctuation">,</span> task_id<span class="token punctuation">)</span>
        <span class="token keyword">await</span> self<span class="token punctuation">.</span>db_connection<span class="token punctuation">.</span>delete<span class="token punctuation">(</span>db_key<span class="token punctuation">)</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">list</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> List<span class="token punctuation">[</span>TaskInDB<span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot; \u83B7\u53D6\u961F\u5217\u4E2D\u6240\u6709\u4EFB\u52A1 &quot;&quot;&quot;</span>
        db_key <span class="token operator">=</span> <span class="token string">&quot;{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>DB_CONFIG_KEY<span class="token punctuation">)</span>
        db_value <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>db_connection<span class="token punctuation">.</span><span class="token builtin">range</span><span class="token punctuation">(</span>range_prefix<span class="token punctuation">(</span>db_key<span class="token punctuation">)</span><span class="token punctuation">)</span>
        task_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> v <span class="token keyword">in</span> db_value<span class="token punctuation">:</span>
            <span class="token keyword">if</span> v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                user_info <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                task_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>TaskInDB<span class="token punctuation">(</span><span class="token operator">**</span>user_info<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> task_list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-task-\u7C7B" tabindex="-1"><a class="header-anchor" href="#_2-task-\u7C7B" aria-hidden="true">#</a> 2.Task \u7C7B</h4><p><strong>\u751F\u4EA7\u8005</strong>\uFF0C\u5B9A\u4E49\u4E00\u4E2A\u4EFB\u52A1\u7C7B\u6765\u8868\u793A\u8981\u6267\u884C\u7684\u4EFB\u52A1\uFF0C\u5B9A\u4E49\u4EFB\u52A1\u76F8\u5173\u7684\u903B\u8F91</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> abc

<span class="token keyword">from</span> monitor<span class="token punctuation">.</span>async_task<span class="token punctuation">.</span>backend <span class="token keyword">import</span> Backend
<span class="token keyword">from</span> monitor<span class="token punctuation">.</span>async_task<span class="token punctuation">.</span>broker <span class="token keyword">import</span> Broker
<span class="token keyword">from</span> dashboard<span class="token punctuation">.</span>model<span class="token punctuation">.</span>task <span class="token keyword">import</span> StatusEnum


<span class="token keyword">class</span> <span class="token class-name">BaseTask</span><span class="token punctuation">(</span>abc<span class="token punctuation">.</span>ABC<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    Example Usage:
    class FooTask(BaseTask):

        async def run(self, *args, **kwargs):
            \u4EFB\u52A1\u6267\u884C\u903B\u8F91
            pass
        async def delay(self, *args, **kwargs):
            \u521B\u5EFA\u4EFB\u52A1\u903B\u8F91
            pass
    &quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>broker <span class="token operator">=</span> Broker<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>backend <span class="token operator">=</span> Backend<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>task_id <span class="token operator">=</span> <span class="token boolean">None</span>
        self<span class="token punctuation">.</span>task_name <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>

    <span class="token decorator annotation punctuation">@abc<span class="token punctuation">.</span>abstractmethod</span>
    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> NotImplementedError<span class="token punctuation">(</span><span class="token string">&quot;task \`run\` method must be implemented&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">update_state</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">,</span> task_id<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> state<span class="token punctuation">:</span> StatusEnum<span class="token punctuation">,</span> progress<span class="token punctuation">:</span> <span class="token builtin">float</span> <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot; \u66F4\u65B0\u4EFB\u52A1\u72B6\u6001 &quot;&quot;&quot;</span>
        task_in_db <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>broker<span class="token punctuation">.</span>dequeue<span class="token punctuation">(</span>task_id<span class="token punctuation">)</span>
        <span class="token keyword">if</span> task_in_db<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>task_in_db<span class="token punctuation">.</span>state <span class="token operator">==</span> state <span class="token operator">==</span> StatusEnum<span class="token punctuation">.</span>RUNNING<span class="token punctuation">,</span> progress <span class="token operator">==</span> <span class="token number">0.0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span>
            task_in_db<span class="token punctuation">.</span>state <span class="token operator">=</span> state
            current_progress <span class="token operator">=</span> <span class="token builtin">round</span><span class="token punctuation">(</span>task_in_db<span class="token punctuation">.</span>progress <span class="token operator">+</span> progress<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> current_progress <span class="token operator">&gt;=</span> <span class="token number">100</span><span class="token punctuation">:</span>
                task_in_db<span class="token punctuation">.</span>progress <span class="token operator">=</span> <span class="token number">100</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                task_in_db<span class="token punctuation">.</span>progress <span class="token operator">=</span> current_progress
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;update_state&quot;</span><span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token string">&quot;progress&quot;</span><span class="token punctuation">,</span> task_in_db<span class="token punctuation">.</span>progress<span class="token punctuation">)</span>
            <span class="token keyword">await</span> self<span class="token punctuation">.</span>backend<span class="token punctuation">.</span>update<span class="token punctuation">(</span>task_id<span class="token punctuation">,</span> <span class="token operator">**</span>task_in_db<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">raise</span> Exception

    <span class="token decorator annotation punctuation">@abc<span class="token punctuation">.</span>abstractmethod</span>
    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">delay</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> NotImplementedError<span class="token punctuation">(</span><span class="token string">&quot;task \`delay\` method must be implemented&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-worker-\u7C7B" tabindex="-1"><a class="header-anchor" href="#_3-worker-\u7C7B" aria-hidden="true">#</a> 3.Worker \u7C7B</h4><p><strong>\u6D88\u8D39\u8005</strong>\uFF0C\u540E\u53F0\u6267\u884C\u4EFB\u52A1\u8FDB\u7A0B\uFF0C\u76D1\u63A7\u5E76\u4ECE<code>Broker</code>\u4E2D\u83B7\u53D6\u4EFB\u52A1\uFF0C\u5E76\u6267\u884C</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> logging
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> time
<span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path

root_path <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>Path<span class="token punctuation">(</span>Path<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>joinpath<span class="token punctuation">(</span><span class="token string">&quot;../../..&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>resolve<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
agent_path <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>Path<span class="token punctuation">(</span>Path<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>joinpath<span class="token punctuation">(</span><span class="token string">&quot;../../..&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>joinpath<span class="token punctuation">(</span><span class="token string">&quot;agent/proto&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>resolve<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
sys<span class="token punctuation">.</span>path<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> root_path<span class="token punctuation">)</span>
sys<span class="token punctuation">.</span>path<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> agent_path<span class="token punctuation">)</span>

<span class="token keyword">from</span> monitor<span class="token punctuation">.</span>async_task<span class="token punctuation">.</span>rpc_task <span class="token keyword">import</span> RpcTask
<span class="token keyword">from</span> dashboard<span class="token punctuation">.</span>db_model<span class="token punctuation">.</span>task <span class="token keyword">import</span> TaskInDB

logger <span class="token operator">=</span> logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">Worker</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> task<span class="token punctuation">:</span> RpcTask<span class="token punctuation">,</span> max_workers<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>task <span class="token operator">=</span> task
        self<span class="token punctuation">.</span>task_queue <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>Queue<span class="token punctuation">(</span>maxsize<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> loop<span class="token operator">=</span>asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># \u5F02\u6B65\u961F\u5217</span>
        self<span class="token punctuation">.</span>pending_tasks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        self<span class="token punctuation">.</span>max_workers <span class="token operator">=</span> max_workers  <span class="token comment"># \u8BBE\u7F6E\u5DE5\u4F5C\u6570\u91CF\uFF0C\u9ED8\u8BA4\u8D773\u4E2A</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">queue</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> task<span class="token punctuation">:</span> TaskInDB<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">await</span> self<span class="token punctuation">.</span>task_queue<span class="token punctuation">.</span>put<span class="token punctuation">(</span>task<span class="token punctuation">)</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">dequeue</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>task_queue<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">worker</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot; \u6D88\u8D39\u8005\uFF1A\u4ECE\u961F\u5217\u4E2D\u6D88\u8D39\u5F85\u6267\u884C\u4EFB\u52A1\uFF0C\u5E76\u5C06\u6267\u884C\u7ED3\u679C\u5B58\u5165Backend\u4E2D &quot;&quot;&quot;</span>
        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                task <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>dequeue<span class="token punctuation">(</span><span class="token punctuation">)</span>
                task_id <span class="token operator">=</span> task<span class="token punctuation">.</span><span class="token builtin">id</span>
                task_args <span class="token operator">=</span> task<span class="token punctuation">.</span>task_params<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;args&quot;</span><span class="token punctuation">)</span>
                task_kwargs <span class="token operator">=</span> task<span class="token punctuation">.</span>task_params<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;kwargs&quot;</span><span class="token punctuation">)</span>
                <span class="token keyword">await</span> self<span class="token punctuation">.</span>task<span class="token punctuation">.</span>run<span class="token punctuation">(</span>task_id<span class="token punctuation">,</span> <span class="token operator">*</span>task_args<span class="token punctuation">,</span> <span class="token operator">**</span>task_kwargs<span class="token punctuation">)</span>
                self<span class="token punctuation">.</span>task_queue<span class="token punctuation">.</span>task_done<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> why<span class="token punctuation">:</span>
                logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Exception occurred during task execution: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">str</span><span class="token punctuation">(</span>why<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                <span class="token keyword">raise</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">start</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot; \u521B\u5EFA\u81F3\u5C11\u4E00\u4E2A\u6D88\u8D39\u8005\u53BB\u5F02\u6B65\u961F\u5217\u4E2D\u83B7\u53D6\u4EFB\u52A1\u5E76\u6267\u884C &quot;&quot;&quot;</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> self<span class="token punctuation">.</span>max_workers <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>max_workers <span class="token operator">=</span> <span class="token number">1</span>

            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>max_workers<span class="token punctuation">)</span><span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>pending_tasks<span class="token punctuation">.</span>append<span class="token punctuation">(</span>asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>self<span class="token punctuation">.</span>worker<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;worker-</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

            <span class="token comment"># Wait until the queue is fully processed.</span>
            <span class="token keyword">await</span> self<span class="token punctuation">.</span>task_queue<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>

            <span class="token comment"># Wait until all worker tasks are cancelled.</span>
            <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>gather<span class="token punctuation">(</span><span class="token operator">*</span>self<span class="token punctuation">.</span>pending_tasks<span class="token punctuation">,</span> return_exceptions<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> why<span class="token punctuation">:</span>
            logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Exception occurred during task execution: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">str</span><span class="token punctuation">(</span>why<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

            <span class="token comment"># Cancel our worker tasks.</span>
            <span class="token keyword">for</span> task <span class="token keyword">in</span> self<span class="token punctuation">.</span>pending_tasks<span class="token punctuation">:</span>
                task<span class="token punctuation">.</span>cancel<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    rpc_task <span class="token operator">=</span> RpcTask<span class="token punctuation">(</span><span class="token punctuation">)</span>
    worker <span class="token operator">=</span> Worker<span class="token punctuation">(</span>rpc_task<span class="token punctuation">)</span>
    <span class="token keyword">await</span> worker<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-backend-\u7C7B" tabindex="-1"><a class="header-anchor" href="#_4-backend-\u7C7B" aria-hidden="true">#</a> 4. Backend \u7C7B</h4><p>\u7528\u6765\u5B58\u4EFB\u52A1\u6267\u884C\u7684\u7ED3\u679C\uFF0C\u540C<code>Broker</code> \u4F7F\u7528 <code>etcd</code> \uFF0C\u6362\u6210\u5176\u4ED6\u6570\u636E\u5E93\u4E5F\u5927\u540C\u5C0F\u5F02</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> json
<span class="token keyword">from</span> typing <span class="token keyword">import</span> List<span class="token punctuation">,</span> Optional

<span class="token keyword">from</span> aioetcd3<span class="token punctuation">.</span><span class="token builtin">help</span> <span class="token keyword">import</span> range_prefix

<span class="token keyword">from</span> dashboard <span class="token keyword">import</span> database
<span class="token keyword">from</span> dashboard<span class="token punctuation">.</span>db_model<span class="token punctuation">.</span>task <span class="token keyword">import</span> TaskInDB
<span class="token keyword">from</span> rook<span class="token punctuation">.</span>util <span class="token keyword">import</span> get_now_time


<span class="token keyword">class</span> <span class="token class-name">WatchScope</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> _iter<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>_iter <span class="token operator">=</span> _iter

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">__aenter__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token keyword">await</span> self<span class="token punctuation">.</span>_iter<span class="token punctuation">.</span>__anext__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> asyncio<span class="token punctuation">.</span>CancelledError<span class="token punctuation">:</span>
            <span class="token keyword">pass</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_iter

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">__aexit__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> exc_type<span class="token punctuation">,</span> exc_val<span class="token punctuation">,</span> exc_tb<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token keyword">await</span> self<span class="token punctuation">.</span>_iter<span class="token punctuation">.</span>aclose<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> GeneratorExit<span class="token punctuation">:</span>
            <span class="token keyword">pass</span>


<span class="token keyword">class</span> <span class="token class-name">Backend</span><span class="token punctuation">:</span>
    DB_CONFIG_KEY <span class="token operator">=</span> <span class="token string">&quot;/ufs/monitor/task&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>db_connection <span class="token operator">=</span> database<span class="token punctuation">.</span>get_db<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_task_by_id</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> task_id<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Optional<span class="token punctuation">[</span>TaskInDB<span class="token punctuation">]</span><span class="token punctuation">:</span>
        task_key <span class="token operator">=</span> <span class="token string">&quot;{}/{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>DB_CONFIG_KEY<span class="token punctuation">,</span> task_id<span class="token punctuation">)</span>
        task_info <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>db_connection<span class="token punctuation">.</span>get<span class="token punctuation">(</span>task_key<span class="token punctuation">)</span>
        <span class="token keyword">if</span> task_info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            task_in_db <span class="token operator">=</span> TaskInDB<span class="token punctuation">(</span><span class="token operator">**</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>task_info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> task_in_db
        <span class="token keyword">return</span> <span class="token boolean">None</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> task_id<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        task_in_db <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>get_task_by_id<span class="token punctuation">(</span>task_id<span class="token punctuation">)</span>
        <span class="token keyword">if</span> task_in_db<span class="token punctuation">:</span>
            db_key <span class="token operator">=</span> <span class="token string">&quot;{}/{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>DB_CONFIG_KEY<span class="token punctuation">,</span> task_id<span class="token punctuation">)</span>
            db_value <span class="token operator">=</span> task_in_db<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            db_value<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">)</span>
            db_value<span class="token punctuation">[</span><span class="token string">&quot;updated_at&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> get_now_time<span class="token punctuation">(</span><span class="token punctuation">)</span>
            db_value <span class="token operator">=</span> TaskInDB<span class="token punctuation">(</span><span class="token operator">**</span>db_value<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">await</span> self<span class="token punctuation">.</span>db_connection<span class="token punctuation">.</span>put<span class="token punctuation">(</span>db_key<span class="token punctuation">,</span> db_value<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">True</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">remove</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> task_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        db_key <span class="token operator">=</span> <span class="token string">&quot;{}/{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>DB_CONFIG_KEY<span class="token punctuation">,</span> task_id<span class="token punctuation">)</span>
        <span class="token keyword">await</span> self<span class="token punctuation">.</span>db_connection<span class="token punctuation">.</span>delete<span class="token punctuation">(</span>db_key<span class="token punctuation">)</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_tasks</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> List<span class="token punctuation">[</span>TaskInDB<span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot; \u83B7\u53D6\u6240\u6709\u5F02\u6B65\u4EFB\u52A1 &quot;&quot;&quot;</span>
        db_key <span class="token operator">=</span> <span class="token string">&quot;{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>DB_CONFIG_KEY<span class="token punctuation">)</span>
        db_value <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>db_connection<span class="token punctuation">.</span><span class="token builtin">range</span><span class="token punctuation">(</span>range_prefix<span class="token punctuation">(</span>db_key<span class="token punctuation">)</span><span class="token punctuation">)</span>
        task_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> v <span class="token keyword">in</span> db_value<span class="token punctuation">:</span>
            <span class="token keyword">if</span> v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                user_info <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                task_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>TaskInDB<span class="token punctuation">(</span><span class="token operator">**</span>user_info<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> task_list

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_tasks_by_prefix</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> prefix<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> List<span class="token punctuation">[</span>TaskInDB<span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot; \u83B7\u53D6\u76EE\u6807\u524D\u7F00\u7684\u5F02\u6B65\u4EFB\u52A1 &quot;&quot;&quot;</span>
        db_key <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>DB_CONFIG_KEY<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>prefix<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
        db_value <span class="token operator">=</span> <span class="token keyword">await</span> self<span class="token punctuation">.</span>db_connection<span class="token punctuation">.</span><span class="token builtin">range</span><span class="token punctuation">(</span>range_prefix<span class="token punctuation">(</span>db_key<span class="token punctuation">)</span><span class="token punctuation">)</span>
        task_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> v <span class="token keyword">in</span> db_value<span class="token punctuation">:</span>
            <span class="token keyword">if</span> v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                user_info <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                task_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>TaskInDB<span class="token punctuation">(</span><span class="token operator">**</span>user_info<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> task_list

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">watch_tasks_by_prefix</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> prefix<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot; \u83B7\u53D6\u76EE\u6807\u524D\u7F00\u7684\u5F02\u6B65\u4EFB\u52A1 &quot;&quot;&quot;</span>
        db_key <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>DB_CONFIG_KEY<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>prefix<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>

        <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">watch_scope</span><span class="token punctuation">(</span>watch<span class="token punctuation">,</span> key_range<span class="token punctuation">,</span> start_revision<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> noput<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> nodelete<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> prev_kv<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                              always_reconnect<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> ignore_compact<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> batch_events<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> WatchScope<span class="token punctuation">(</span>watch<span class="token punctuation">(</span>key_range<span class="token punctuation">,</span> start_revision<span class="token operator">=</span>start_revision<span class="token punctuation">,</span>
                                    noput<span class="token operator">=</span>noput<span class="token punctuation">,</span> nodelete<span class="token operator">=</span>nodelete<span class="token punctuation">,</span> prev_kv<span class="token operator">=</span>prev_kv<span class="token punctuation">,</span> create_event<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
                                    always_reconnect<span class="token operator">=</span>always_reconnect<span class="token punctuation">,</span> ignore_compact<span class="token operator">=</span>ignore_compact<span class="token punctuation">,</span>
                                    batch_events<span class="token operator">=</span>batch_events<span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token keyword">return</span> <span class="token keyword">await</span> watch_scope<span class="token punctuation">(</span>self<span class="token punctuation">.</span>db_connection<span class="token punctuation">.</span>watch<span class="token punctuation">,</span> range_prefix<span class="token punctuation">(</span>db_key<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-\u6D3E\u751F\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#_5-\u6D3E\u751F\u4EFB\u52A1" aria-hidden="true">#</a> 5.\u6D3E\u751F\u4EFB\u52A1</h4><p>\u5F02\u6B65\u6D3E\u751F\u4EFB\u52A1\u901A\u8FC7\u7EE7\u627F <code>BaseTask</code> \u5E76\u91CD\u5199\u5176 <code>run()</code> \u65B9\u6CD5\u6765</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_6-beat-\u7C7B" tabindex="-1"><a class="header-anchor" href="#_6-beat-\u7C7B" aria-hidden="true">#</a> 6.Beat \u7C7B</h4><p><strong>\u5B9A\u65F6\u8C03\u5EA6\u5668</strong>\uFF0C\u7531\u4E8E\u5B9A\u65F6\u89C4\u5219\u3001\u8C03\u5EA6\u89C4\u5219\u7B49\u672A\u5B9A\uFF0C\u56E0\u6B64\u6700\u540E\u5B9E\u73B0</p>`,15);function G(K,Y){const o=e("Alert"),p=e("Badge"),i=e("ExternalLinkIcon");return u(),k("div",null,[v,a(o,{type:"info"},{default:t(()=>[b]),_:1}),m,s("p",null,[_,a(p,{type:"success"},{default:t(()=>[y]),_:1}),a(p,{type:"warning"},{default:t(()=>[w]),_:1}),a(p,{type:"error"},{default:t(()=>[f]),_:1}),g]),h,a(o,{type:"info"},{default:t(()=>[q]),_:1}),B,s("p",null,[x,a(p,null,{default:t(()=>[E]),_:1}),T,D,I,N,F]),C,s("p",null,[s("strong",null,[s("a",O,[A,a(i)])])]),j])}const S=l(d,[["render",G],["__file","\u5F02\u6B65\u4EFB\u52A1\u6982\u8FF0.html.vue"]]);export{S as default};
