import{_ as t}from"./plugin-vueexport-helper.2444895f.js";import{o as p,c as o,a as n,b as s,d as e,f as l,r as c}from"./app.4d4f0a46.js";const i={},r=n("h1",{id:"\u5B9E\u73B0\u7B80\u5316\u7248-asyncio",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5B9E\u73B0\u7B80\u5316\u7248-asyncio","aria-hidden":"true"},"#"),s(" \u5B9E\u73B0\u7B80\u5316\u7248 asyncio")],-1),u={href:"https://zhuanlan.zhihu.com/p/64991670",target:"_blank",rel:"noopener noreferrer"},d=l(`<h2 id="\u4E00\u3001\u8FDB\u7A0B\u3001\u7EBF\u7A0B\u4E0E\u534F\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u8FDB\u7A0B\u3001\u7EBF\u7A0B\u4E0E\u534F\u7A0B" aria-hidden="true">#</a> \u4E00\u3001\u8FDB\u7A0B\u3001\u7EBF\u7A0B\u4E0E\u534F\u7A0B</h2><p>\u591A\u8FDB\u7A0B\u3001\u591A\u7EBF\u7A0B\u3001\u534F\u7A0B\u7684\u6A21\u578B\u90FD\u662F\u4E3A\u4E86\u89E3\u51B3\u591A\u4E2A\u4EFB\u52A1\u540C\u65F6\u8FDB\u884C\u7684\u95EE\u9898\u3002</p><p>\u591A\u7CFB\u7EDF\u4EFB\u52A1\uFF1A\u5173\u952E\u5728\u4E8E\u6682\u505C\u5F53\u524D\u4EFB\u52A1\uFF0C\u4FDD\u5B58\u5F53\u524D\u4EFB\u52A1\u73B0\u573A\uFF08\u72B6\u6001\uFF09\uFF0C\u9009\u62E9\u4E0B\u4E00\u4EFB\u52A1\uFF0C\u6062\u590D\u4E0B\u4E00\u4EFB\u52A1\u7684\u73B0\u573A\uFF0C\u6267\u884C\u4E0B\u4E00\u4EFB\u52A1\u3002\u4F46\u5728\u8BA1\u7B97\u673A\u5F53\u4E2D\uFF0C\u6211\u4EEC\u4E0D \u79F0\u4E3A\u73B0\u573A or \u72B6\u6001 or \u73AF\u5883\uFF0C\u800C\u662F\u79F0\u4E3A\u4E0A\u4E0B\u6587\u3002</p><h4 id="\u5728\u300A\u6DF1\u5165\u7406\u89E3\u64CD\u4F5C\u7CFB\u7EDF\u300B\u4E2D-\u5F00\u7BC7\u5C31\u662F" tabindex="-1"><a class="header-anchor" href="#\u5728\u300A\u6DF1\u5165\u7406\u89E3\u64CD\u4F5C\u7CFB\u7EDF\u300B\u4E2D-\u5F00\u7BC7\u5C31\u662F" aria-hidden="true">#</a> \u5728\u300A\u6DF1\u5165\u7406\u89E3\u64CD\u4F5C\u7CFB\u7EDF\u300B\u4E2D\uFF0C\u5F00\u7BC7\u5C31\u662F\uFF1A</h4><ul><li><p>\u4FE1\u606F = \u4F4D + \u4E0A\u4E0B\u6587</p></li><li><p>\u7A0B\u5E8F = \u6307\u4EE4\u5E8F\u5217 + \u4E0A\u4E0B\u6587</p></li></ul><p>\u6CE8\uFF1A \u4E2A\u4EBA\u5BF9\u4E0A\u4E0B\u6587\u7684\u7406\u89E3\uFF0C\u6307\u5F53\u524D\u6267\u884C\u65F6\u7684\u5404\u79CD\u80FD\u8BBF\u95EE\u5230\u7684\u73AF\u5883\u53D8\u91CF\uFF0C\u6570\u636E\u4E4B\u7C7B\u7684</p><h4 id="\u6307\u4EE4\u5E8F\u5217-\u4E0A\u4E0B\u6587" tabindex="-1"><a class="header-anchor" href="#\u6307\u4EE4\u5E8F\u5217-\u4E0A\u4E0B\u6587" aria-hidden="true">#</a> \u6307\u4EE4\u5E8F\u5217 &amp; \u4E0A\u4E0B\u6587</h4><p>\u6307\u4EE4\u5E8F\u5217\u7684\u542B\u4E49\u662F\u56FA\u5B9A\u7684\uFF1A\u5728\u8BA1\u7B97\u673A\u4E2D PC \u5BC4\u5B58\u5668\u7684\u5730\u5740\u6307\u5411\u7684\u503C\uFF0C\u4E5F\u5C31\u662F CPU \u8981\u6267\u884C\u7684\u6307\u4EE4\u3002 \u4F46\u662F\u5BF9\u4E8E\u8BA1\u7B97\u673A\u7684\u4E0D\u540C\u5C42\u6B21\uFF0C\u4E0A\u4E0B\u6587\u7684\u542B\u4E49\u4E5F\u4E0D\u540C\u3002</p><ul><li><p>\u5BF9\u4E8E CPU \u6765\u8BF4\uFF1A\u4E0A\u4E0B\u6587\u662F\u64CD\u4F5C\u6570\u5BC4\u5B58\u5668\uFF0C\u6808\u5BC4\u5B58\u5668\uFF0C\u72B6\u6001\u5BC4\u5B58\u5668\u7B49\u5404\u7C7B\u5BC4\u5B58\u5668\u3002</p></li><li><p>\u5BF9\u4E8E\u8FDB\u7A0B\u6765\u8BF4\uFF1A\u4E0A\u4E0B\u6587\u662F\u5BC4\u5B58\u5668\u3001\u4FE1\u53F7\u3001\u5206\u914D\u7684\u5185\u5B58\u7A7A\u95F4\u3001\u6587\u4EF6\u63CF\u8FF0\u7B26\u7B49\u5404\u7C7B\u7531 CPU \u62BD\u8C61\u51FA\u6765\u7684\u786C\u4EF6\u8D44\u6E90\u3002</p></li><li><p>\u5BF9\u4E8E\u7EBF\u7A0B\u6765\u8BF4\uFF1A\u4E0A\u4E0B\u6587\u662F\u5BC4\u5B58\u5668\uFF0C\u7EBF\u7A0B\u5806\u6808...</p></li><li><p>\u5BF9\u4E8E\u4E00\u4E2A\u51FD\u6570\u6765\u8BF4\uFF1A\u4E0A\u4E0B\u6587\u5C31\u662F\u5F53\u524D\u7684\u547D\u540D\u7A7A\u95F4\u3002\uFF08\u56E0\u6B64\u6211\u7684\u6D45\u8584\u7406\u89E3\u53EA\u80FD\u5230\u8FD9\u91CC\uFF09</p></li><li><p>\u90A3\u4E48\u5BF9\u4E8E\u534F\u7A0B\u6765\u8BF4\uFF1A\u4E0A\u4E0B\u6587\u662F\u4EC0\u4E48\uFF1F\uFF1F\uFF1F</p></li></ul><h4 id="\u5404\u79CD\u7A0B\u7684\u5207\u6362" tabindex="-1"><a class="header-anchor" href="#\u5404\u79CD\u7A0B\u7684\u5207\u6362" aria-hidden="true">#</a> \u5404\u79CD\u7A0B\u7684\u5207\u6362</h4><p>\u8FDB\u7A0B\u7684\u5207\u6362\u65F6\uFF0C\u64CD\u4F5C\u7CFB\u7EDF\u63A7\u5236\uFF0C\u4E5F\u5C31\u662F\u7531\u64CD\u4F5C\u7CFB\u7EDF\u6765\u6267\u884C</p><p>Python \u7EBF\u7A0B\u7684\u5207\u6362\uFF0C\u662F python \u865A\u62DF\u673A\u7684\u63A7\u5236\uFF0C\u901A\u8FC7\u4E00\u4E2A\u7CFB\u7EDF\u8C03\u7528\uFF0C\u6765\u8FDB\u884C\u7EBF\u7A0B\u7684\u5207\u6362\u3002\u534F\u7A0B\u7684\u5207\u6362\u8FC7\u7A0B\u5B8C\u5168\u7531\u7A0B\u5E8F\u81EA\u8EAB\u63A7\u5236\u3002</p><ul><li><p>\u8FDB\u7A0B\u7684\u5207\u6362\uFF1A\u9700\u8981\u5207\u6362\u7CFB\u7EDF\u8D44\u6E90\u7684\u6307\u4EE4\uFF0C\u6D88\u8017\u65F6\u95F4\u6700\u957F\u3002</p></li><li><p>\u7EBF\u7A0B\u7684\u5207\u6362\uFF1A\u4E0D\u9700\u8981\u5207\u6362\u7CFB\u7EDF\u8D44\u6E90\uFF0C\u53EA\u9700\u8981\u5207\u6362\u6307\u4EE4\u3001\u7EBF\u7A0B\u5806\u6808\u3002\u4F46\u8FD9\u4E2A\u8FC7\u7A0B\u4E5F\u9700\u8981\u7CFB\u7EDF\u8C03\u7528\u3002</p></li><li><p>\u534F\u7A0B\u7684\u5207\u6362\uFF1A\u90FD\u5728\u7528\u6237\u5185\u8FDB\u884C\uFF0C\u4E0D\u9700\u8981\u8FDB\u884C\u7CFB\u7EDF\u8C03\u7528\u3002</p></li></ul><h4 id="\u7CFB\u7EDF\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#\u7CFB\u7EDF\u8C03\u7528" aria-hidden="true">#</a> \u7CFB\u7EDF\u8C03\u7528</h4><p>\u73B0\u4EE3 CPU \u901A\u5E38\u5206 4 \u4E2D\u7EA7\u522B\uFF0Cring0 \u5230 ring3 \u4EE3\u8868\u5185\u6838\u6001\u548C\u7528\u6237\u6001\u3002\u666E\u901A\u5E94\u7528\u7A0B\u5E8F\u90FD\u662F\u8FD0\u884C\u518D\u7528\u6237\u6001\u4E0B\uFF0C\u591A\u79CD\u64CD\u4F5C\u90FD\u4F1A\u53D7\u5230\u9650\u5236\uFF0C\u6BD4\u5982\u8BBF\u95EE\u786C\u4EF6\u8D44\u6E90\u7B49\u3002 \u7279\u6743\u9AD8\u7684\u4EE3\u7801\uFF0C\u53EF\u4EE5\u5C06\u81EA\u5DF1\u964D\u81F3\u4F4E\u7B49\u7EA7\u7684\u7EA7\u522B\uFF0C\u53CD\u4E4B\u4E0D\u884C\u3002</p><p>\u7CFB\u7EDF\u8C03\u7528\u662F\u8FD0\u884C\u5728\u5185\u6838\u6001\u7684\uFF0C\u90A3\u4E48\u8FD0\u884C\u7528\u6237\u6001\u7684\u7A0B\u5E8F\u5982\u4F55\u8FD0\u884C\u5185\u6838\u6001\u7684\u4EE3\u7801\u5462\uFF1F \u2014\u2014\u2014\u2014 \u64CD\u4F5C\u7CFB\u7EDF\u4E00\u822C\u662F\u901A\u8FC7\u4E2D\u65AD\u6765\u4ECE\u7528\u6237\u6001\u5207\u6362\u5230\u5185\u6838\u6001\u7684\u3002</p><p>\u4E2D\u65AD\uFF1A\u4E2D\u65AD\u53F7 + \u4E2D\u65AD\u5904\u7406\u7A0B\u5E8F\uFF0C \u5206\u4E3A\u8F6F\u4EF6\u4E2D\u65AD\u548C\u786C\u4EF6\u4E2D\u65AD\u3002</p><p>\u5185\u6838\u6709\u4E2A\u4E2D\u65AD\u5411\u91CF\u8868\uFF0C\u5F53\u4E2D\u65AD\u5230\u6765\uFF0CCPU \u4F1A\u6682\u505C\u6B63\u5728\u6267\u884C\u7684\u4EE3\u7801\uFF0C\u6839\u636E\u4E2D\u65AD\u53F7\u5230\u5411\u91CF\u8868\u627E\u51FA\u4E2D\u65AD\u5904\u7406\u7A0B\u5E8F\u5E76\u8C03\u7528\u3002\u4E2D\u65AD\u5904\u7406\u7A0B\u5E8F\u6267\u884C\u5B8C\u6210\u540E\uFF0C\u4F1A\u7EE7\u7EED\u6267\u884C \u4E4B\u524D\u6682\u505C\u7684\u4EE3\u7801\u3002</p><p>\u6CE8\uFF1A\u4E2D\u65AD\u53F7\u662F\u6709\u9650\u7684\uFF0C\u56E0\u6B64\u4E0D\u4F1A\u4E00\u4E2A\u4E2D\u65AD\u53F7\u5BF9\u5E94\u4E00\u4E2A\u7CFB\u7EDF\u8C03\u7528\u3002\uFF08\u7CFB\u7EDF\u8C03\u7528\u6709\u5F88\u591A</p><p>\u5176\u4E2D\u5404\u79CD\u6307\u4EE4\uFF0C\u5982\u6267\u884C int $0x08 \u4F1A\u8BA9 CPU \u9677\u5165\u4E2D\u65AD\uFF0C\u5E76\u6267\u884C\u5BF9\u5E94 $0x08 \u7684\u4E2D\u65AD\u5904\u7406\u51FD\u6570\u3002\u4E0D\u8FC7\u5728\u90A3\u4E4B\u524D\uFF0CCPU \u4F1A\u8FDB\u884C\u6808\u5207\u6362\uFF08\u7A0B\u5E8F\u9700\u8981\u7531\u7528\u6237\u6001 \u5207\u6362\u5230\u5185\u6838\u6001\uFF0C\u7A0B\u5E8F\u4F1A\u5F53\u524D\u6808\u4F1A\u4ECE\u7528\u6237\u6808\u5207\u6362\u5230\u5185\u6838\u6808\uFF09\u4E0E\u4E4B\u5BF9\u5E94\uFF0C\u5F53\u4E2D\u65AD\u7A0B\u5E8F\u7ED3\u675F\u540E\uFF0C\u5F53\u524D\u6808\u8981\u4ECE\u5185\u6838\u6808\u5207\u6362\u56DE\u7528\u6237\u6808\u3002</p><h4 id="\u534F\u7A0B\u7684\u4F18\u52BF" tabindex="-1"><a class="header-anchor" href="#\u534F\u7A0B\u7684\u4F18\u52BF" aria-hidden="true">#</a> \u534F\u7A0B\u7684\u4F18\u52BF</h4><p>\u534F\u7A0B\u4F18\u4E8E\u7EBF\u7A0B\u7684\u4E3B\u8981\u5728\u4E8E</p><ul><li><p>python \u7EBF\u7A0B\u7684\u8C03\u5EA6\u65B9\u5F0F\u662F\uFF0C\u6BCF\u6267\u884C 100 \u4E2A\u5B57\u8282\u7801\u6216\u8005\u9047\u5230\u963B\u585E\u5C31\u505C\u6B62\u5F53\u524D\u7684\u7EBF\u7A0B\uFF0C\u7136\u540E\u8FDB\u884C\u7CFB\u7EDF\u8C03\u7528\uFF0C\u8BA9 OS \u5185\u6838\u9009\u51FA\u4E0B\u4E00\u4E2A\u7EBF\u7A0B\u3002\u4F46\u662F\u534F\u7A0B\u53EA\u4F1A\u5728 \u963B\u585E\u7684\u65F6\u5019\uFF0C\u5207\u6362\u5230\u4E0B\u4E00\u4E2A\u534F\u7A0B\u3002100 \u4E2A\u5B57\u8282\u7801\uFF0C\u8BF4\u591A\u4E0D\u591A\uFF0C\u8BF4\u5C11\u4E0D\u5C11\uFF0C\u4F60\u8C03\u7528\u4E24\u4E2A\u5E93\u51FD\u6570\u8BF4\u4E0D\u5B9A\u5C31\u6CA1\u4E86\uFF0C\u56E0\u6B64\u7EBF\u7A0B\u5F88\u591A\u5207\u6362\u5176\u5B9E\u662F\u65E0\u6548\u5207\u6362\uFF0C\u5F53\u7EBF\u7A0B \u6570\u91CF\u8D8A\u5927\uFF0C\u8FD9\u79CD\u56E0\u4E3A\u8C03\u5EA6\u7B56\u7565\u7684\u5148\u5929\u4E0D\u8DB3 \u5E26\u6765\u7684\u6027\u80FD\u635F\u8017\u4F1A\u8D8A\u5927\u3002\uFF08\u76EE\u524D\u6700\u65B0\u7248\u672C\u6539\u4E3A\u901A\u8FC7\u65F6\u95F4\u6765\u8FDB\u884C\u8C03\u5EA6\uFF0C\u4E00\u6837\u5783\u573E\uFF09</p></li><li><p>\u7EBF\u7A0B\u9700\u8981\u8FDB\u884C\u7CFB\u7EDF\u8C03\u5EA6\uFF08\u4E2D\u65AD\u3001\u7528\u6237/\u5185\u6838\u6001\u3001\u6808 \u5207\u6362\u90A3\u5957\uFF09\uFF0C\u4F46\u534F\u7A0B\u4E0D\u9700\u8981\u3002\u7CFB\u7EDF\u8C03\u7528\u9700\u8981\u8FDB\u5165\u5185\u6838\u6001\uFF0C\u65E0\u6548\u7684\u8C03\u5EA6\u4F1A\u8BA9\u8FD9\u90E8\u5206\u5F00\u9500\u663E\u5F97\u66F4\u5927\u3002</p></li><li><p>\u534F\u7A0B\u53EF\u4EE5\u81EA\u4E3B\u8C03\u5EA6\uFF0C\u800C\u7EBF\u7A0B\u53EA\u80FD\u51B3\u5B9A\u9002\u5408\u9000\u51FA\uFF0C\u4F46\u662F\u4E0B\u4E00\u4E2A\u7EBF\u7A0B\u662F\u8C01\u5219\u4F9D\u8D56\u4E8E\u64CD\u4F5C\u7CFB\u7EDF\u3002</p></li></ul><h4 id="\u534F\u7A0B\u7684\u79CD\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u534F\u7A0B\u7684\u79CD\u7C7B" aria-hidden="true">#</a> \u534F\u7A0B\u7684\u79CD\u7C7B</h4><p>\u534F\u7A0B\u6709\u4E24\u79CD\uFF1A\u4E00\u79CD\u65E0\u6808\u534F\u7A0B\uFF0Cpython \u4E2D\u4EE5 asyncio \u4E3A\u4EE3\u8868\uFF0C \u4E00\u79CD\u662F\u6709\u6808\u534F\u7A0B\uFF0Cpython \u4E2D\u4EE5 gevent \u4E3A\u4EE3\u8868</p><p>\u4E24\u8005\u5982\u4F55\u4FDD\u5B58\u5207\u6362\u4E0A\u4E0B\u6587\u7684\u65B9\u5F0F\u4E0D\u5927\u4E00\u6837\u3002\u6211\u4EEC\u5148\u770B\u770B asyncio \uFF0C\u4EE5\u540E\u6709\u673A\u4F1A\u518D\u8865\u4E0A gevent \u76F8\u5173\u7684\u5185\u5BB9\u3002</p><h2 id="\u4E8C\u3001yield-\u4E0E-yield-from" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001yield-\u4E0E-yield-from" aria-hidden="true">#</a> \u4E8C\u3001yield \u4E0E yield from</h2><p>\u6700\u65B0\u7248\u7684 python \u5DF2\u7ECF<strong>\u4E0D\u91C7\u7528\u57FA\u4E8E <code>yield</code> \u7684\u534F\u7A0B</strong>\u4E86\u3002\u4F46\u6B64\u5904\u7528 <code>yield</code> \u548C <code>yield from</code> \u6765\u5B9E\u73B0\u534F\u7A0B\uFF0C\u800C\u4E0D\u7528 <code>async</code> \u4E0E <code>await</code></p><p>\u4EE5\u4FBF\u4E8E\u66F4\u597D\u7684\u5C55\u793A<strong>\u751F\u6210\u5668</strong> \u5230 <strong>\u534F\u7A0B</strong> \u7684\u5B8C\u6574\u5386\u53F2\uFF0C\u539F\u7406\u662F\u76F8\u901A\u7684</p><h3 id="_2-1-yield-\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_2-1-yield-\u4F8B\u5B50" aria-hidden="true">#</a> 2.1 yield \u4F8B\u5B50</h3><p>\u6211\u4EEC\u5148\u770B\u4E00\u4E2A\u6700\u7B80\u5355\u7684 <strong>yield \u4F8B\u5B50:</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">ex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;yield 1&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">yield</span> <span class="token number">1</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;yield 2&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">yield</span> <span class="token number">2</span>

gen <span class="token operator">=</span> ex<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u542F\u52A8\u751F\u6210\u5668&quot;</span><span class="token punctuation">)</span>
a <span class="token operator">=</span> gen<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\u4ECE\u751F\u6210\u5668\u4E2D\u83B7\u53D6\u4E00\u4E2A\u503C&#39;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
b <span class="token operator">=</span> gen<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\u83B7\u53D6\u5230\u7684\u7B2C\u4E8C\u4E2A\u503C&#39;</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span>

<span class="token comment"># out</span>
<span class="token comment"># \u542F\u52A8\u751F\u6210\u5668</span>
<span class="token comment"># yield 1</span>
<span class="token comment"># \u4ECE\u751F\u6210\u5668\u4E2D\u83B7\u53D6\u4E00\u4E2A\u503C 1</span>
<span class="token comment"># yield 2</span>
<span class="token comment"># \u83B7\u53D6\u5230\u7684\u7B2C\u4E8C\u4E2A\u503C 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7A0B\u5E8F\u8FD0\u884C\u5230\u4E86\u7B2C\u4E00\u4E2A <code>yield</code> \u7684\u65F6\u5019 \u4FDD\u5B58\u4E86\u51FD\u6570\u7684\u4E0A\u4E0B\u6587\uFF0C\u5E76\u9000\u51FA\u4E86\u3002</p><p>\u63A5\u4E0B\u6765 \u53C8\u901A\u8FC7 next() / .send(None) / .<strong>next</strong>() \u65B9\u6CD5\u518D\u6B21\u8FDB\u5165\u8FD9\u4E2A \u51FD\u6570\uFF0C\u7EE7\u7EED\u8FD0\u884C\u3002\u5728\u8FD9\u91CC\uFF0C\u88AB\u4FDD\u5B58\u7684\u4E0A\u4E0B\u6587\u5F97\u5230\u4E86\u6062\u590D\u3002</p><p>\u8FD9\u51E0\u884C\u4EE3\u7801\u91CC\u5DF2\u7ECF\u5C55\u793A\u4E86\u4E00\u4E2A\u534F\u7A0B\u6240\u9700\u8981\u7684\u7684\u5168\u90E8\u3002</p><ul><li>1.\u4FDD\u5B58\u4E0A\u4E0B\u6587</li><li>2.\u5207\u6362\u8FD0\u884C\u7A0B\u5E8F</li><li>3.\u6062\u590D\u4E0A\u4E0B\u6587</li><li>4.\u91CD\u65B0\u8FDB\u5165\u7A0B\u5E8F\u3002</li></ul><h3 id="_2-2-python-\u4E0A\u4E0B\u6587\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#_2-2-python-\u4E0A\u4E0B\u6587\u6E90\u7801" aria-hidden="true">#</a> 2.2 python \u4E0A\u4E0B\u6587<a href="/back_end/python/base/%E8%BF%9B%E9%98%B6%E6%A6%82%E5%BF%B5/cpython%E5%AF%B9%E8%B1%A1%E6%8F%AD%E7%A7%98">\u6E90\u7801</a></h3><p>python \u4E2D\u7684\u4E0A\u4E0B\u6587\uFF0C\u88AB\u5C01\u88C5\u6210\u4E86\u4E00\u4E2A\u53EB\u505A PyFrameObject \u7684\u7ED3\u6784\uFF0C\u53C8\u79F0\u4E4B\u4E3A\u6808\u5E27\uFF0C\u770B\u4E00\u4E0B\u4ED6\u7684\u6E90\u7801\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">_frame</span> <span class="token punctuation">{</span>   <span class="token comment">/*\u8FD9\u73A9\u610F\u5373\u662F\u6808\u5E27\uFF0C*f_back\u5C31\u5B58\u7740\u4E0A\u4E00\u4E2A\u6808\u5E27\uFF0C\u6784\u6210\u7C7B\u4F3C\u94FE\u8868\u7684\u5F62\u5F0F*/</span>
    PyObject_VAR_HEAD
    <span class="token keyword">struct</span> <span class="token class-name">_frame</span> <span class="token operator">*</span>f_back<span class="token punctuation">;</span>      <span class="token comment">/* previous frame, or NULL  \u4E0A\u4E00\u4E2A\u6808\u5E27*/</span>
    PyCodeObject <span class="token operator">*</span>f_code<span class="token punctuation">;</span>       <span class="token comment">/* code segment \u4EE3\u7801\u6BB5*/</span>
    PyObject <span class="token operator">*</span>f_builtins<span class="token punctuation">;</span>       <span class="token comment">/* builtin symbol table (PyDictObject) \u5185\u5EFA\u53D8\u91CF\u8868*/</span>
    PyObject <span class="token operator">*</span>f_globals<span class="token punctuation">;</span>        <span class="token comment">/* global symbol table (PyDictObject)  \u5168\u5C40\u53D8\u91CF\u8868*/</span>
    PyObject <span class="token operator">*</span>f_locals<span class="token punctuation">;</span>         <span class="token comment">/* local symbol table (any mapping)  \u5C40\u90E8\u53D8\u91CF\u8868*/</span>
    PyObject <span class="token operator">*</span><span class="token operator">*</span>f_valuestack<span class="token punctuation">;</span>    <span class="token comment">/* points after the last local  \u6808\u5E95*/</span>
    <span class="token comment">/* Next free slot in f_valuestack.  Frame creation sets to f_valuestack.
       Frame evaluation usually NULLs it, but a frame that yields sets it
       to the current stack top. */</span>
    PyObject <span class="token operator">*</span><span class="token operator">*</span>f_stacktop<span class="token punctuation">;</span>    <span class="token comment">/*  \u6808\u9876 */</span>
    PyObject <span class="token operator">*</span>f_trace<span class="token punctuation">;</span>          <span class="token comment">/* Trace function */</span>
    <span class="token keyword">char</span> f_trace_lines<span class="token punctuation">;</span>         <span class="token comment">/* Emit per-line trace events? */</span>
    <span class="token keyword">char</span> f_trace_opcodes<span class="token punctuation">;</span>       <span class="token comment">/* Emit per-opcode trace events? */</span>

    <span class="token comment">/* Borrowed reference to a generator, or NULL  \u4E13\u4E3A\u751F\u6210\u5668\u8BBE\u8BA1\u7684\u6307\u9488*/</span>
    PyObject <span class="token operator">*</span>f_gen<span class="token punctuation">;</span>

    <span class="token keyword">int</span> f_lasti<span class="token punctuation">;</span>                <span class="token comment">/* Last instruction if called   \u8FD0\u884C\u7684\u4E0A\u4E00\u4E2A\u5B57\u8282\u7801\u4F4D\u7F6E*/</span>
    <span class="token comment">/* Call PyFrame_GetLineNumber() instead of reading this field
       directly.  As of 2.3 f_lineno is only valid when tracing is
       active (i.e. when f_trace is set).  At other times we use
       PyCode_Addr2Line to calculate the line from the current
       bytecode index. */</span>
    <span class="token keyword">int</span> f_lineno<span class="token punctuation">;</span>               <span class="token comment">/* Current line number   \u8FD0\u884C\u5B57\u8282\u7801\u5BF9\u5E94\u7684python\u6E90\u4EE3\u7801\u7684\u884C\u6570*/</span>
    <span class="token keyword">int</span> f_iblock<span class="token punctuation">;</span>               <span class="token comment">/* index in f_blockstack */</span>
    <span class="token keyword">char</span> f_executing<span class="token punctuation">;</span>           <span class="token comment">/* whether the frame is still executing */</span>
    PyTryBlock f_blockstack<span class="token punctuation">[</span>CO_MAXBLOCKS<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">/* for try and loop blocks */</span>
    PyObject <span class="token operator">*</span>f_localsplus<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">/* locals+stack, dynamically sized */</span>
<span class="token punctuation">}</span> PyFrameObject<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u505A\u4E86\u7B80\u5355\u7684\u6CE8\u91CA\u3002</p><p>\u5728 Python \u5B9E\u9645\u7684\u6267\u884C\u4E2D\uFF0C\u4F1A\u4EA7\u751F\u5F88\u591A PyFrameObject \u5BF9\u8C61\uFF0C\u800C\u8FD9\u4E9B\u5BF9\u8C61\u4F1A\u88AB\u94FE\u63A5\u8D77\u6765\uFF0C\u5F62\u6210\u4E00\u6761\u6267\u884C\u73AF\u5883\u94FE\u8868\u3002\u8FD9\u6B63\u662F\u5BF9 x86 \u673A\u5668\u4E0A\u6808\u5E27\u95F4\u5173\u7CFB\u7684\u6A21\u62DF\u3002 \u5728 x86 \u4E0A\uFF0C\u6808\u5E27\u95F4\u901A\u8FC7 esp \u6307\u9488\u548C ebp \u6307\u9488\u5EFA\u7ACB\u4E86\u5173\u7CFB\uFF0C\u4F7F\u65B0\u7684\u6808\u5E27\u5728\u7ED3\u675F\u4E4B\u540E\u80FD\u987A\u5229\u56DE\u5230\u65E7\u7684\u6808\u5E27\u4E2D\uFF0C\u800C Python \u6B63\u662F\u5229\u7528 f_back \u6765\u5B8C\u6210\u8FD9\u4E2A\u52A8\u4F5C\u3002</p><p>[\u6CE8]\uFF1Aesp \u662F\u5806\u6808\u6307\u9488\uFF0Cebp \u662F\u57FA\u5740\u6307\u9488\uFF08\u901A\u5E38 32 \u4F4D\u7684\u673A\u5668\u4E0A\u6709\u4E24\u4E2A\u6307\u9488\u5BC4\u5B58\u5668\uFF0C\u5373 sp/bp\uFF09\u4E3B\u8981\u7528\u4E8E\u5B58\u653E\u5806\u6808\u5185 \u5B58\u50A8\u5355\u5143\u7684\u504F\u79FB\u91CF\uFF0C\u53EF\u5B9E\u73B0\u591A\u79CD\u5B58\u50A8\u5668 \u64CD\u4F5C\u6570\u7684\u5BFB\u5740\u65B9\u5F0F\u3002</p><ul><li>BP \u4E3A\u57FA\u6307\u9488\u5BC4\u5B58\u5668\uFF0C\u7528\u5B83\u53EF\u4EE5\u76F4\u63A5 \u5B58\u53D6 \u5806\u6808\u9876\u4E2D\u7684\u6570\u636E\u3002</li><li>SP \u4E3A\u5806\u6808\u6307\u9488\u5BC4\u5B58\u5668\uFF0C\u7528\u5B83\u53EA\u53EF \u8BBF\u95EE \u6808\u9876\u3002</li></ul><p>\u53E6\u5916\u6BD4\u8F83\u91CD\u8981\u7684\u4E24\u70B9\u5C31\u662F\u5404\u79CD\u73AF\u5883\u53D8\u91CF\u8868\uFF0C\u4EE5\u53CA\u7A0B\u5E8F\u8FD0\u884C\u5FC5\u4E0D\u53EF\u5C11\u7684\u5806\u6808\u3002f_lasti \u8BB0\u5F55\u4E86\u5B57\u8282\u7801\u8FD0\u884C\u7684\u4F4D\u7F6E\uFF0C\u8FD9\u4E5F\u5C31\u610F\u5473\u7740\u5728 PyFrameObject \u4E2D\uFF0C \u6211\u4EEC\u53EF\u4EE5\u968F\u65F6\u6062\u590D\u4EE3\u7801\u7684\u8FD0\u884C\u3002</p><h3 id="_2-3-\u751F\u6210\u5668\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#_2-3-\u751F\u6210\u5668\u5B9A\u4E49" aria-hidden="true">#</a> 2.3 \u751F\u6210\u5668\u5B9A\u4E49</h3><p>\u63A5\u4E0B\u6765\u770B\u4E00\u4E0B <strong>Cpython</strong> \u4E2D\u5BF9 <code>\u751F\u6210\u5668</code>\u7684\u5B9A\u4E49</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>define <span class="token function">_PyGenObject_HEAD</span><span class="token punctuation">(</span>prefix<span class="token punctuation">)</span>    \\\\ \u662F\u4E00\u4E2A\u5B8F\u800C\u4E0D\u662F\u4E00\u4E2A <span class="token keyword">struct</span> \u7ED3\u6784\u4F53
    PyObject_HEAD
    <span class="token comment">/* Note: gi_frame can be NULL if the generator is &quot;finished&quot;  \u751F\u6210\u5668\u7684\u4E0A\u4E0B\u6587 PyFrame \u6307\u9488*/</span>
    <span class="token keyword">struct</span> <span class="token class-name">_frame</span> <span class="token operator">*</span>prefix##_frame<span class="token punctuation">;</span>
    <span class="token comment">/* True if generator is being executed. */</span>
    <span class="token keyword">char</span> prefix##_running<span class="token punctuation">;</span>       \\\\ \u8FD0\u884C\u72B6\u6001
    <span class="token comment">/* The code object backing the generator */</span>
    PyObject <span class="token operator">*</span>prefix##_code<span class="token punctuation">;</span>                  \\\\ \u5B57\u8282\u7801
    <span class="token comment">/* List of weak reference. */</span>
    PyObject <span class="token operator">*</span>prefix##_weakreflist<span class="token punctuation">;</span>
    <span class="token comment">/* Name of the generator. */</span>
    PyObject <span class="token operator">*</span>prefix##_name<span class="token punctuation">;</span>
    <span class="token comment">/* Qualified name of the generator. */</span>
    PyObject <span class="token operator">*</span>prefix##_qualname<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 python \u4E2D\uFF0C\u751F\u6210\u5668\u7684\u8BED\u6CD5\u89C4\u5219\u6BD4\u8F83\u7279\u6B8A\uFF0C\u957F\u5F97\u50CF\u4E2A\u51FD\u6570\uFF0C\u4F46\u662F\u8C03\u7528\u4E4B\u540E\u5374\u8FD4\u56DE\u4E00\u4E2A\u751F\u6210\u5668\u5BF9\u8C61\u3002\u6240\u4EE5\u4ED6\u7684\u7ED3\u6784\u4F53\u5B9A\u4E49\u4E5F\u6BD4\u8F83\u7279\u6B8A\uFF0C\u662F\u4E00\u4E2A\u5B8F\u3002 \u5176\u4E2D\u6700\u91CD\u8981\u7684 \u662F prefix_frame, ## \u662F\u8FDE\u63A5\u7B26\u3002\u5B83\u6307\u5411\u4E86\u4E00\u4E2A PyFrameObject \u5BF9\u8C61\uFF0C\u5C31\u662F\u8BE5\u751F\u6210\u5668\u7684\u4E0A\u4E0B\u6587\u3002 \uFF08\u5927\u6982\u662F\u6307\uFF0Cprefix_frame \u6307\u9488\u8FD9\u73A9\u610F\u5B58\u4E86\u751F\u6210\u5668\u7684\u4E0A\u4E0B\u6587\uFF09</p><p>\u8FD9\u4E2A\u7ED3\u6784\u4F53\u4E2D\uFF0C\u6709\u4E09\u4E2A\u6700\u91CD\u8981\u7684\u6210\u5458</p><ul><li><p>\u6307\u5411\u751F\u6210\u5668\u4E0A\u4E0B\u6587\u7684 \u6307\u9488</p></li><li><p>\u4E00\u4E2A\u6307\u793A\u751F\u6210\u5668\u72B6\u6001\u7684\u5B57\u7B26\u4E32 \u672A\u542F\u52A8\uFF0C\u505C\u6B62\uFF0C\u8FD0\u884C\uFF0C\u7ED3\u675F</p></li><li><p>\u751F\u6210\u5668\u7684\u5B57\u8282\u7801</p></li></ul><p>\u4E5F\u5C31\u662F \u4E0A\u4E0B\u6587 + \u6307\u4EE4\u5E8F\u5217 + \u72B6\u6001</p><h3 id="_2-4-send" tabindex="-1"><a class="header-anchor" href="#_2-4-send" aria-hidden="true">#</a> 2.4 send</h3><p>next \u4E0E send \u4F5C\u7528\u662F\u4E00\u81F4\u7684\uFF0C\u53EA\u662F send \u53EF\u4EE5\u4F20\u5165\u4E00\u4E2A\u53C2\u6570\uFF0C\u6211\u4EEC\u6765\u770B\u4E00\u4E0B send \u7684\u5B9E\u73B0\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">static</span> PyObject <span class="token operator">*</span>
<span class="token function">gen_send_ex</span><span class="token punctuation">(</span>PyGenObject <span class="token operator">*</span>gen<span class="token punctuation">,</span> PyObject <span class="token operator">*</span>arg<span class="token punctuation">,</span> <span class="token keyword">int</span> exc<span class="token punctuation">,</span> <span class="token keyword">int</span> closing<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    PyThreadState <span class="token operator">*</span>tstate <span class="token operator">=</span> <span class="token function">PyThreadState_GET</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    PyFrameObject <span class="token operator">*</span>f <span class="token operator">=</span> gen<span class="token operator">-&gt;</span>gi_frame<span class="token punctuation">;</span>
    PyObject <span class="token operator">*</span>result<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u200B \xB7\xB7\xB7\xB7\xB7\xB7\xB7 \u200B</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>    <span class="token keyword">if</span> <span class="token punctuation">(</span>f<span class="token operator">-&gt;</span>f_lasti <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arg <span class="token operator">&amp;&amp;</span> arg <span class="token operator">!=</span> Py_None<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>msg <span class="token operator">=</span> <span class="token string">&quot;can&#39;t send non-None value to a &quot;</span>
                              <span class="token string">&quot;just-started generator&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">PyCoro_CheckExact</span><span class="token punctuation">(</span>gen<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                msg <span class="token operator">=</span> NON_INIT_CORO_MSG<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">PyAsyncGen_CheckExact</span><span class="token punctuation">(</span>gen<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                msg <span class="token operator">=</span> <span class="token string">&quot;can&#39;t send non-None value to a &quot;</span>
                      <span class="token string">&quot;just-started async generator&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">PyErr_SetString</span><span class="token punctuation">(</span>PyExc_TypeError<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">/* Push arg onto the frame&#39;s value stack */</span>
        result <span class="token operator">=</span> arg <span class="token operator">?</span> arg <span class="token operator">:</span> Py_None<span class="token punctuation">;</span>
        <span class="token function">Py_INCREF</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">/* \u5982\u679C\u6709\u53C2\u6570 \u5C31\u5C06\u5176\u538B\u6808*/</span>
        <span class="token operator">*</span><span class="token punctuation">(</span>f<span class="token operator">-&gt;</span>f_stacktop<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token operator">=</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/* Generators always return to their most recent caller, not
     * necessarily their creator. */</span>
    <span class="token function">Py_XINCREF</span><span class="token punctuation">(</span>tstate<span class="token operator">-&gt;</span>frame<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">assert</span><span class="token punctuation">(</span>f<span class="token operator">-&gt;</span>f_back <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    f<span class="token operator">-&gt;</span>f_back <span class="token operator">=</span> tstate<span class="token operator">-&gt;</span>frame<span class="token punctuation">;</span>

    gen<span class="token operator">-&gt;</span>gi_running <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>         <span class="token comment">/* \u5C06\u751F\u6210\u5668\u8BBE\u7F6E\u4E3A\u8FD0\u884C\u72B6\u6001 */</span>
    gen<span class="token operator">-&gt;</span>gi_exc_state<span class="token punctuation">.</span>previous_item <span class="token operator">=</span> tstate<span class="token operator">-&gt;</span>exc_info<span class="token punctuation">;</span>
    tstate<span class="token operator">-&gt;</span>exc_info <span class="token operator">=</span> <span class="token operator">&amp;</span>gen<span class="token operator">-&gt;</span>gi_exc_state<span class="token punctuation">;</span>
    result <span class="token operator">=</span> <span class="token function">PyEval_EvalFrameEx</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> exc<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">/* \u6B63\u5F0F\u8FD0\u884C \u751F\u6210\u5668 \u5F97\u5230\u8FD4\u56DE\u503C*/</span>
    tstate<span class="token operator">-&gt;</span>exc_info <span class="token operator">=</span> gen<span class="token operator">-&gt;</span>gi_exc_state<span class="token punctuation">.</span>previous_item<span class="token punctuation">;</span>
    gen<span class="token operator">-&gt;</span>gi_exc_state<span class="token punctuation">.</span>previous_item <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    gen<span class="token operator">-&gt;</span>gi_running <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    \xB7\xB7\xB7\xB7\xB7\xB7\xB7\xB7

    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7701\u7565\u4E86\u4E00\u4E9B\u4EE3\u7801\uFF0C\u4E0D\u8FC7\u5173\u952E\u7684\u4EE3\u7801\u4E5F\u5C31\u8FD9\u4E9B\u3002 \u5982\u679C\u6709\u4F20\u5165\u53C2\u6570\uFF0C\u5C31\u5C06\u53C2\u6570\u5165\u6808\uFF0C\u7528\u8FD9\u79CD\u65B9\u5F0F\u6765\u5411\u751F\u6210\u5668\u4F20\u9012\u503C\u3002\u7136\u540E\u66F4\u6539\u751F\u6210\u5668\u8FD0\u884C\u72B6\u6001\u3002\u901A\u8FC7 PyEval_EvalFrameEx \u51FD\u6570\u8FD0\u884C\u751F\u6210\u5668\u4FDD\u5B58\u7684\u6808\u5E27\uFF0C\u8FD4\u56DE\u503C\u3002</p><h3 id="_2-5-yield-from" tabindex="-1"><a class="header-anchor" href="#_2-5-yield-from" aria-hidden="true">#</a> 2.5 yield from</h3><p>\u5728\u751F\u6210\u5668\u4E2D\uFF0C\u53EF\u4EE5\u7528 return \u8FD4\u56DE\u503C\uFF0C\u4F46\u5982\u679C send \u8D70\u5230 return \u8BED\u53E5\u7684\u65F6\u5019\u4F1A\u62A5\u4E00\u4E2A StopIteration\u3002 return \u8FD4\u56DE\u503C\u7684 \u5C31\u5728 exception \u7684 value \u4E2D\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">ex2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">yield</span> <span class="token number">1</span>
    <span class="token keyword">return</span> <span class="token number">2</span>

gen <span class="token operator">=</span> ex2<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    gen<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span>
    gen<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> StopIteration <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>value<span class="token punctuation">)</span>

<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
StopIteration<span class="token punctuation">:</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>yield from \u6709\u4E24\u91CD\u6027\u8D28\uFF1A</p><p>1\u3001\u4E00\u65B9\u9762\uFF0C\u5B83\u662F\u4E00\u4E2A\u8868\u8FBE\u5F0F\uFF0C\u8868\u8FBE\u5F0F\u81EA\u7136\u662F\u6709\u503C\u7684\uFF0C\u4ED6\u7684\u503C\uFF0C\u5C31\u662F yield from \u540E\u9762\u751F\u6210\u5668 return \u7684\u8FD4\u56DE\u503C\u3002 \u975E\u5E38\u5173\u952E\u7684\u4E00\u70B9\uFF0C\u751F\u6210\u5668\u7684 yield \u8BED\u53E5\u4F1A\u5411\u5916\u4EA7\u51FA\u503C\uFF0C\u4F46\u662F return \u7684\u503C\u5E76\u4E0D\u4F1A\u5411\u5916\u4EA7\u51FA\u3002\u60F3\u8981\u83B7\u5F97 return \u7684\u8FD4\u56DE\u503C\uFF0C\u8981\u4E48\u7528 try \u8BED\u53E5\u6355\u83B7\u5F02\u5E38 \u8981\u4E48\u7528 yield from \u8868\u8FBE\u5F0F\u83B7\u53D6\u503C\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">ex2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">yield</span> <span class="token number">1</span>
    <span class="token keyword">return</span> <span class="token number">2</span>


<span class="token keyword">def</span> <span class="token function">ex1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    ret <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token keyword">from</span> ex2<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;yield from \u8868\u8FBE\u5F0F\u7684\u503C\uFF1A</span><span class="token interpolation"><span class="token punctuation">{</span>ret<span class="token punctuation">}</span></span><span class="token string">, yield from \u53EF\u4EE5\u66FF\u4EE3try-except\u6765\u83B7\u53D6\u5230value&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">yield</span> <span class="token boolean">None</span>


gen <span class="token operator">=</span> ex1<span class="token punctuation">(</span><span class="token punctuation">)</span>

send_result <span class="token operator">=</span> gen<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>send_result<span class="token punctuation">)</span>

send_result <span class="token operator">=</span> gen<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>send_result<span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C\uFF1A</span>
<span class="token comment"># 1</span>
<span class="token comment"># yield from \u8868\u8FBE\u5F0F\u7684\u503C\uFF1A2, yield from \u53EF\u4EE5\u66FF\u4EE3try-except\u6765\u83B7\u53D6\u5230value</span>
<span class="token comment"># None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2\u3001yield from \u53E6\u5916\u4E00\u70B9\u5C31\u662F\uFF0C\u80FD\u5C06\u5185\u5C42\u7684\u751F\u6210\u5668\u7684\u8FD4\u56DE\u503C\uFF0C\u4F20\u5230\u5916\u5C42\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">ex2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">yield</span> <span class="token number">1</span>
    <span class="token keyword">yield</span> <span class="token number">2</span>
    <span class="token keyword">return</span> <span class="token number">3</span>

<span class="token keyword">def</span> <span class="token function">ex3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    ret <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token keyword">from</span> ex2<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;yield from \u8868\u8FBE\u5F0F\u7684\u503C\uFF1A</span><span class="token interpolation"><span class="token punctuation">{</span>ret<span class="token punctuation">}</span></span><span class="token string">, \u5185\u5C42\u751F\u6210\u5668 ex2() \u901A\u8FC7 yield from\uFF0C\u53EF\u4EE5\u5728\u6700\u5916\u5C42\u53D6\u51FA\u6765&quot;</span></span><span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> ex3<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5185\u5C42\u751F\u6210\u5668 ex2() \u901A\u8FC7 yield from\uFF0C\u53EF\u4EE5\u5728\u6700\u5916\u5C42\u53D6\u51FA\u6765\u3002</p><p>\u5173\u4E8E yield from\uFF0C\u6211\u89C9\u5F97\u8BB2\u7684\u6700\u6E05\u695A\u7684\u662F \u6D41\u7545\u7684 python 16 \u7AE0 \u534F\u7A0B\u7684\u6709\u5173\u5185\u5BB9\uFF0C\u5404\u4F4D\u6709\u5174\u8DA3\u53EF\u4EE5\u770B\u770B\uFF0C\u6211\u8FD9\u91CC\u4E0D\u505A\u6DF1\u5165\u5C55\u5F00\u3002</p><p>\u6709\u4E86 yield from \u8FD9\u4E2A\u5DE5\u5177\uFF0C\u6211\u4EEC\u4FBF\u53EF\u4EE5\u5C06\u591A\u4E2A\u751F\u6210\u5668\u4E32\u8054\u8D77\u6765\u3002</p><p>\u6211\u5C1D\u8BD5\u7528\u6811\u5F62\u7ED3\u6784\u6765\u63CF\u8FF0\u4E00\u4E2A\u751F\u6210\u5668\uFF0C\u4E5F\u8BB8\u5BF9\u534F\u7A0B\u7684\u7406\u89E3\u4F1A\u6709\u5E2E\u52A9\u3002\u6211\u4EEC\u5C06 yield \u7684\u8FD4\u56DE\u503C\u89C6\u4E3A \u5B50\u8282\u70B9\uFF0C\u5C06\u751F\u6210\u5668\u672C\u8EAB\u548C return \u7684\u503C\u89C6\u4E3A\u7236\u8282\u70B9\u3002 \u53EF\u4EE5\u7528\u4E00\u4E2A\u56FE\u6765\u63CF\u8FF0\u3002</p><pre><code>                   \u2197 1
-&gt; gen1_result \u2014\u2014\u2014\u2014\u2192  2
                   \u2198 3
</code></pre><p>yield from \u7684\u610F\u4E49\u5728\u4E8E\uFF0C\u5C06\u8FD9\u4E9B\u751F\u6210\u5668\u4E32\u8054\u8D77\u6765\u5F62\u6210\u4E00\u9897\u6811\uFF0C\u5E76\u4E14\u63D0\u4F9B\u4E86\u4E00\u79CD\u4FBF\u6377\u7684\u65B9\u6CD5\uFF0C\u5C06\u8FD9\u9897\u6811\u7684\u53F6\u5B50\u8282\u70B9\u4F9D\u6B21\u8FD4\u56DE\u3002</p><pre><code>                        \u2197 1
gen3 \u2014\u2014\u2192 gen1_result \u2014\u2014\u2014\u2014\u2192 2
     |                  \u2198 3
     |\u2198 gen2_result \u2014\u2014\u2014\u2014&gt; 4
      \u2198\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 5
</code></pre><p>yield from \u5C06\u591A\u4E2A\u751F\u6210\u5668\u8FDE\u63A5\u8D77\u6765\u7684\u65B9\u5F0F\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u5F88\u7B80\u5355\u7684\u65B9\u5F0F\u5C31\u53EF\u4EE5\u5C06\u6240\u6709\u7684 yield \u8FD4\u56DE\u503C\u4E00\u4E00\u63D0\u53D6\u51FA\u6765\u3002\u4E0D\u65AD\u7684\u5BF9\u6839\u8282\u70B9\u7684\u751F\u6210\u5668 \u8FDB\u884C send \u64CD\u4F5C\u5373\u53EF\u3002\u4E5F\u5C31\u662F gen3.send(None)\u3002\uFF08\u4F1A\u4ECE gen1 \u5F00\u59CB yield from 1\u30012\u30013.... 5\uFF09</p><h2 id="\u4E09\u3001\u4ECE\u751F\u6210\u5668\u5230\u534F\u7A0B-\u672C\u6587\u7684\u534F\u7A0B-\u5355\u6307-asyncio-\u4E2D\u7684\u534F\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001\u4ECE\u751F\u6210\u5668\u5230\u534F\u7A0B-\u672C\u6587\u7684\u534F\u7A0B-\u5355\u6307-asyncio-\u4E2D\u7684\u534F\u7A0B" aria-hidden="true">#</a> \u4E09\u3001\u4ECE\u751F\u6210\u5668\u5230\u534F\u7A0B\uFF08\u672C\u6587\u7684\u534F\u7A0B\uFF0C\u5355\u6307 asyncio \u4E2D\u7684\u534F\u7A0B\uFF09</h2><p>\u751F\u6210\u5668\u53EF\u4EE5\u63CF\u8FF0\u4E3A\u4E00\u9897\u6811\uFF0C\u751F\u6210\u5668\u662F\u534F\u7A0B\u5B9E\u73B0\u7684\u57FA\u7840\uFF0C\u90A3\u4E48\u534F\u7A0B\u81EA\u7136\u4E5F\u53EF\u4EE5\u63CF\u8FF0\u4E3A\u4E00\u9897\u6811\u3002</p><p>\u5728 asyncio \u7684\u5B9E\u73B0\u4E2D\uFF0C\u534F\u7A0B\u4E0E\u751F\u6210\u5668\u6700\u5927\u7684\u533A\u522B\uFF0C\u5C31\u662F\u751F\u6210\u5668\u7684\u53F6\u8282\u70B9\u53EF\u4EE5\u662F \u6570\u5B57\u3001\u51FD\u6570\u3001\u5B57\u7B26\u4E32\u7B49\u5404\u79CD\u5BF9\u8C61\uFF0C\u4F46\u662F asyncio \u7684\u534F\u7A0B\u5B9E\u73B0\u4E2D\uFF0C\u53F6 \u8282\u70B9\u53EA\u80FD\u662F None \u6216\u8005 future\u3002</p><h3 id="future" tabindex="-1"><a class="header-anchor" href="#future" aria-hidden="true">#</a> future</h3><p>future \u672C\u8D28\u4E0A\u662F\u4E00\u4E2A\u7528\u751F\u6210\u5668\u5B9E\u73B0\u7684 \u56DE\u8C03\u7BA1\u7406\u5668!</p><p>\u6211\u4EEC\u4E4B\u6240\u4EE5\u4F7F\u7528\u534F\u7A0B\u5C31\u662F\u4E3A\u4E86\uFF0C\u5728\u9047\u5230 io\u3001\u963B\u585E\u7684\u65F6\u5019\uFF0C\u5C06\u8FD0\u884C\u7684\u6743\u5229\u4EA4\u51FA\u53BB\uFF0C\u5F53\u963B\u585E\u4E8B\u4EF6\u5B8C\u6210\u7684\u65F6\u5019\uFF0C\u901A\u8FC7\u4E00\u4E2A\u56DE\u8C03\u6765\u5524\u9192\u7A0B\u5E8F\u7EE7\u7EED\u5F80\u4E0B\u8D70\uFF0C \u5E76\u4E14\u8FD4\u56DE io \u4E8B\u4EF6\u7684\u503C\u3002 future \u5C31\u662F\u5BF9\u8FD9\u4E2A\u8FC7\u7A0B\u7684\u5305\u88C5\u3002\u53EF\u4EE5\u7B80\u5355\u5199\u4E00\u4E2A\u4F2A\u4EE3\u7801\u3002</p><pre><code>def future():
    callback = future.send  # \u56DE\u8C03\u51FD\u6570\u4E3A \u751F\u6210\u5668\u7684 send \u65B9\u6CD5\uFF0C\u5F53\u7136\u8FD9\u79CD\u5199\u6CD5\u6709\u95EE\u9898\uFF0C\u6B64\u65F6\u751F\u6210\u5668\u8FD8\u672A\u5F62\u6210
    do_something(callback)  # \u8FDB\u884Cio\u64CD\u4F5C\uFF0C \u5E76\u5C06 callback \u6CE8\u518C\u4E3A\u56DE\u8C03\u51FD\u6570
    result = yield
    return result
</code></pre><p>\u6211\u4EEC\u9700\u8981\u5C06\u751F\u6210\u5668\u7528 yield \u9001\u51FA\u53BB\uFF0C\u4EE5\u4FBF\u56DE\u8C03\u51FD\u6570\u4F7F\u7528\uFF0C\u4E00\u4E2A \u51FD\u6570\u4E0D\u80FD\u6EE1\u8DB3\u6211\u4EEC\u7684\u9700\u6C42\uFF0C\u6211\u4EEC\u5C06\u5B83\u6269\u5145\u4E3A\u4E00\u4E2A\u7C7B\uFF0C\u7528 yield \u8FD4\u56DE self\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">InvalidStateError</span><span class="token punctuation">(</span>Exception<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>msg <span class="token operator">=</span> msg

<span class="token keyword">class</span> <span class="token class-name">Future</span><span class="token punctuation">:</span>
    _FINISHED <span class="token operator">=</span> <span class="token string">&#39;finished&#39;</span>
    _PENDING <span class="token operator">=</span> <span class="token string">&#39;pending&#39;</span>
    _CANCELLED <span class="token operator">=</span> <span class="token string">&#39;cancelled&#39;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>status <span class="token operator">=</span> self<span class="token punctuation">.</span>_PENDING

    <span class="token keyword">def</span> <span class="token function">set_result</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># \u7ED9future\u8BBE\u7F6E\u7ED3\u679C\uFF0C \u5E76\u5C06 future \u8BBE\u7F6E\u4E3A\u7ED3\u675F\u72B6\u6001</span>
        self<span class="token punctuation">.</span>status <span class="token operator">=</span> self<span class="token punctuation">.</span>_FINISHED
        self<span class="token punctuation">.</span>_result <span class="token operator">=</span> result

    <span class="token keyword">def</span> <span class="token function">done</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>status <span class="token operator">!=</span> self<span class="token punctuation">.</span>_PENDING

    <span class="token keyword">def</span> <span class="token function">result</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># \u83B7\u53D6future \u7684\u7ED3\u679C</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>status <span class="token operator">!=</span> self<span class="token punctuation">.</span>_FINISHED<span class="token punctuation">:</span>
            <span class="token keyword">raise</span> InvalidStateError<span class="token punctuation">(</span><span class="token string">&quot;future is not ready&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_result

    <span class="token keyword">def</span> <span class="token function">__iter__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>_blocking <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">yield</span> self  <span class="token comment"># \u8FD4\u56DE\u81EA\u8EAB</span>
        <span class="token keyword">assert</span> self<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;future not done&#39;</span>  <span class="token comment"># \u4E0B\u6B21\u8FD0\u884C future \u7684\u65F6\u5019\uFF0C\u8981\u786E\u5B9A future \u5BF9\u5E94\u7684\u4E8B\u4EF6\u5DF2\u7ECF\u8FD0\u884C\u5B8C\u6BD5</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>result<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u5173\u952E\u7684\u5C31\u662F\u8FD9\u4E2A<strong>iter</strong> \u65B9\u6CD5\uFF0C\u7B2C\u4E00\u6B21\u542F\u52A8\u7684\u65F6\u5019\uFF0C\u4F1A\u5C06\u81EA\u8EAB\u7684\u72B6\u6001\u8BBE\u7F6E\u4E3A \u963B\u585E\u72B6\u6001\uFF0C\u7136\u540E\u8FD4\u56DE self\u3002\u66B4\u9732\u51FA set_result \u65B9\u6CD5\u8BA9\u56DE\u8C03\u51FD\u6570 \u53EF\u4EE5\u7ED9 future \u8BBE\u7F6E\u8FD4\u56DE\u503C\uFF0C\u5E76\u4E14\u5C06 future \u66F4\u6539\u4E3A\u7ED3\u675F\u72B6\u6001\u3002</p><p>[\u6267\u884C]\uFF1A</p><pre><code>fu = Future()
print(fu)
print(fu.__iter__().send(None), fu == fu.__iter__().send(None))
</code></pre><p>\u53EF\u4EE5\u770B\u51FA\uFF0C\u8C03\u7528<strong>iter</strong> \u65B9\u6CD5\u540E\uFF0C\u662F\u6267\u884C\u4E86\u4E00\u6BB5\u8FED\u4EE3\u4EE3\u7801\u540E\u8FD4\u56DE\u4E86\u81EA\u8EAB\uFF08\u8FD9\u6BB5\u4EE3\u7801\u5C31\u662F\u4E3A\u4E86\u963B\u585E\u5E76\u629B\u51FA\u6267\u884C\u6743\uFF09</p><p>\u73B0\u5728\u53EF\u4EE5\u63CF\u7ED8\u51FA\u7684\u534F\u7A0B\u6811\u72B6\u7ED3\u6784\uFF1A\u6240\u6709\u53F6\u5B50\u8282\u70B9\u8FD4\u56DE\u503C\u4E3A self\uFF0C\u9A71\u4F7F\u534F\u7A0B\u5F80\u4E0B\u8D70\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u7EDF\u4E00\u53D8\u6210\u4E86\u6700\u5916\u5C42\u7684 coro3.send(None). Coroutine \u6307\u4EE3\u534F\u7A0B\u3002</p><pre><code> {&quot;\u534F\u7A0B3&quot;:
    [
        {&quot;\u534F\u7A0B2&quot;: [&quot;future -&gt; self&quot;, &quot;future -&gt; self&quot;, &quot;future -&gt; self&quot;]},
        {&quot;\u534F\u7A0B1&quot;: [&quot;future -&gt; self&quot;, &quot;future -&gt; self&quot;, &quot;future -&gt; self&quot;]},
        [&quot;future -&gt; self&quot;]
    ]
}
</code></pre><p>\u90A3\u4E48\u534F\u7A0B\u7684\u8FD0\u884C\u8DEF\u7EBF\u5C31\u5DF2\u7ECF\u5F88\u6E05\u695A\u4E86\u3002coro \u901A\u8FC7 coro.send(None) \u542F\u52A8\uFF0C\u9047\u5230 io \u64CD\u4F5C\uFF0C\u4F1A\u7528 yield \u8FD4\u56DE\u4E00\u4E2A future\u3002io \u64CD\u4F5C\u5B8C\u6210\u4E4B\u540E\uFF0C \u56DE\u8C03\u51FD\u6570\u901A\u8FC7 coro.send(None) \u7EE7\u7EED\u5F80\u4E0B\u8FDB\u884C\u3002 \u76F4\u5230 coro.send(None) \u7206\u51FA StopIteration \u5F02\u5E38\uFF0C\u534F\u7A0B\u8FD0\u884C\u5B8C\u6BD5\u3002</p><h3 id="eventloop-\u8C03\u5EA6\u8005" tabindex="-1"><a class="header-anchor" href="#eventloop-\u8C03\u5EA6\u8005" aria-hidden="true">#</a> eventloop-\u8C03\u5EA6\u8005</h3><p>\u7136\u800C\u6211\u4EEC\u4E0D\u4F1A\u53EA\u8FD0\u884C\u4E00\u4E2A\u534F\u7A0B\uFF0C\u5F53\u4E00\u4E2A coro \u5C06\u81EA\u5DF1\u7684\u63A7\u5236\u6743\u4EA4\u51FA\u53BB\u4E4B\u540E\uFF0C\u8C01\u6765\u63A5\u63A5\u7BA1\u5462\uFF1F</p><p>\u6211\u4EEC\u9700\u8981\u6709\u4E00\u4E2A\u8C03\u5EA6\u8005 \u4E5F\u5C31\u662F eventloop \uFF0C\u770B\u540D\u5B57\u5C31\u77E5\u9053\uFF0C\u8FD9\u662F\u4E00\u4E2A\u4E8B\u4EF6\u5FAA\u73AF\u3002</p><p>\u6240\u8C13\u7684\u4E8B\u4EF6\u9A71\u52A8\u6A21\u5F0F\u5176\u5B9E\u4E5F\u5F88\u7B80\u5355\u3002\u4E8B\u4EF6\uFF0C\u5C31\u662F\u51FD\u6570\u3002</p><p>\u4E8B\u4EF6\u9A71\u52A8\u6A21\u5F0F\uFF0C\u5C31\u662F\u6709\u4E00\u4E2A\u961F\u5217\uFF0C\u91CC\u9762\u5B58\u653E\u7740\u4E00\u5806\u51FD\u6570\uFF0C\u4ECE\u7B2C\u4E00\u4E2A\u51FD\u6570\u5F00\u59CB\u6267\u884C\uFF0C\u5728\u51FD\u6570\u6267\u884C\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u53EF\u80FD\u4F1A\u6709\u65B0\u7684\u51FD\u6570\u7EE7\u7EED\u52A0\u5165\u5230\u8FD9\u4E2A\u961F\u5217\u4E2D\u3002 \u4E00\u76F4\u5230\u961F\u5217\u4E2D\u6240\u6709\u7684\u51FD\u6570\u88AB\u6267\u884C\u5B8C\u6BD5\uFF0C\u5E76\u4E14\u518D\u4E5F\u4E0D\u4F1A\u6709\u65B0\u7684\u51FD\u6570\u88AB\u6DFB\u52A0\u5230\u8FD9\u4E2A\u961F\u5217\u4E2D\u3002</p><p>\u534F\u7A0B\u975E\u5E38\u9002\u5408\u8FD9\u79CD\u6A21\u5F0F\uFF0C\u534F\u7A0B\u7684\u542F\u52A8\u5C31\u662F\u5C06 coro.send(None) \u52A0\u5165\u5230 eventloop \u7684\u961F\u5217\u4E2D\u3002future \u56DE\u8C03\u5B8C\u6210\u4E4B\u540E\uFF0C\u518D\u5C06 coro.send(None) \u52A0\u5165\u5230\u961F\u5217\u4E2D\u5C31\u53EF\u4EE5\u9A71\u4F7F\u534F\u7A0B\u7EE7\u7EED\u5F80\u4E0B\u8D70\u3002</p><p>\u6211\u4EEC\u6765\u5199\u4E00\u4E2A eventloop.</p><pre><code>import collections

class EventLoopError(Exception):
    def __init__(self, msg):
        self.msg = msg

class Handle:
    def __init__(self, callback, loop, *args):
        self._callback = callback
        self._args = args

    def _run(self):
        self._callback(*self._args)

class EventLoop:
    def __init__(self):
        self._ready = collections.deque()  # \u4E8B\u4EF6\u961F\u5217
        self._stopping = False

    def stop(self):
        self._stopping = True

    def call_soon(self, callback, *args):
        # \u5C06\u4E8B\u4EF6\u6DFB\u52A0\u5230\u961F\u5217\u91CC
        handle = Handle(callback, self)
        self._ready.append(handle)

    def add_ready(self, handle):
        # \u5C06\u4E8B\u4EF6\u6DFB\u52A0\u5230\u961F\u5217\u91CC
        if isinstance(handle, Handle):
            self._ready.append(handle)
        else:
            raise EventLoopError(&quot;only handle is allowed to join in ready&quot;)

    def run_once(self):
        # \u6267\u884C\u961F\u5217\u91CC\u7684\u4E8B\u4EF6
        ntodo = len(self._ready)
        for i in range(ntodo):
            handle = self._ready.popleft()
            handle._run()

    def run_forever(self):
        while True:
            self.run_once()
            if self._stopping:
                break
</code></pre><p>handle \u662F\u5BF9\u51FD\u6570\u548C\u53C2\u6570\u7684\u4E00\u4E2A\u7B80\u5355\u5C01\u88C5\u3002\u901A\u8FC7 run_forever \u4E0D\u65AD\u6267\u884C\u961F\u5217\u91CC\u7684\u51FD\u6570\uFF0C\u901A\u8FC7 stop \u6765\u505C\u6B62 eventloop\u3002\u901A\u8FC7 add_ready \u5C06\u4E8B\u4EF6 \u6DFB\u52A0\u5230\u81EA\u8EAB\u7684\u961F\u5217\u91CC\u3002</p><p>\u56E0\u4E3A \u534F\u7A0B\u7684\u63A8\u52A8\u9700\u8981\u5C06 coro.send(None) \u6DFB\u52A0\u5230 eventloop \u91CC\uFF0C\u6240\u4EE5\u5C06 eventloop \u8BBE\u7F6E\u4E3A\u4E00\u4E2A\u5168\u5C40\u53D8\u91CF\uFF0C\u7528\u4E00\u4E2A\u51FD\u6570\u6765\u83B7\u53D6\u4ED6\u3002</p><pre><code>_event_loop = None

def get_event_loop():
    global _event_loop
    if _event_loop is None:
        _event_loop = Eventloop()
    return _event_loop

class Eventloop:
    pass
</code></pre><p>\u8FD9\u6837\u5199\u7684\u574F\u5904\u662F\uFF0C\u6240\u6709\u7EBF\u7A0B\u7684 eventloop \u90FD\u662F\u540C\u4E00\u4E2A\uFF0C\u4E0D\u80FD\u652F\u6301\u591A\u7EBF\u7A0B\u3002\u5982\u679C\u60F3\u652F\u6301\u591A\u7EBF\u7A0B\uFF0C\u90A3\u4E48 get_event_loop \u83B7\u53D6\u7684\u5E94\u8BE5\u662F\u4E00\u4E2A\u7EBF\u7A0B\u91CC\u7684 \u5168\u5C40\u53D8\u91CF\u3002\u4E3A\u4E86\u7B80\u5355\u8D77\u89C1\uFF0C\u6211\u4EEC\u6682\u65F6\u91C7\u7528\u7B80\u5355\u7684\u5B9E\u73B0\uFF0C\u591A\u7EBF\u7A0B\u7248\u672C\u540E\u671F\u518D\u52A0\u4E0A\u3002</p><p>[\u8FD0\u884C]\uFF1A</p><pre><code>loop = EventLoop()
h1 = Handler(func, loop, 1) # func \u662F\u56DE\u8C03\u51FD\u6570
h2 = Handler(func, loop, 2)
loop.add_ready(h1)
loop.add_ready(h2)
loop.run_forver()
</code></pre><p>\u56E0\u4E3A\u6709\u4E86 eventloop, future \u4E5F\u9700\u8981\u6539\u53D8\u4E00\u4E0B\u3002 \u4E3B\u8981\u662F\u589E\u52A0\u4E86 add_done_callback \u63A5\u53E3\uFF0C\u4E3A future \u589E\u52A0\u56DE\u8C03\u51FD\u6570\u3002</p><p>\u5F53\u4E3A future \u7684 set_result \u7684\u65F6\u5019\uFF0C\u4F1A\u6267\u884C _schedule_callbacks\u3002 \u4ED6\u7684\u4F5C\u7528\u662F\u5C06\u56DE\u8C03\u51FD\u6570\u5217\u8868\u6DFB\u52A0\u5230 eventloop \u7684\u51FD\u6570\u8FD0\u884C\u961F\u5217\u91CC\uFF0C \u901A\u8FC7 eventloop\uFF0C\u6765\u8FD0\u884C\u56DE\u8C03\u51FD\u6570\u3002</p><pre><code>class Future:

    _FINISHED = &#39;finished&#39;
    _PENDING = &#39;pending&#39;
    _CANCELLED = &#39;CANCELLED&#39;

    def __init__(self, loop=None):
        if loop is None:
            self._loop = get_event_loop() # \u83B7\u53D6\u5F53\u524D\u7684 eventloop
        else:
            self._loop = loop
        self._callbacks = []
        self.status = self._PENDING
        self._blocking = False
        self._result = None

    def _schedule_callbacks(self):
        # \u5C06\u56DE\u8C03\u51FD\u6570\u6DFB\u52A0\u5230\u4E8B\u4EF6\u961F\u5217\u91CC\uFF0Ceventloop \u7A0D\u540E\u4F1A\u8FD0\u884C
        for callbacks in self._callbacks:
            self._loop.add_ready(callbacks)
        self._callbacks = []

    def set_result(self, result):
        self.status = self._FINISHED
        self._result = result
        self._schedule_callbacks()  # future \u5B8C\u6210\u540E\uFF0C\u6267\u884C\u56DE\u8C03\u51FD\u6570

    def add_done_callback(self, callback, *args):
        # \u4E3A future \u589E\u52A0\u56DE\u8C03\u51FD\u6570
        if self.done():
            self._loop.call_soon(callback, *args)
        else:
            handle = Handle(callback, self._loop, *args)
            self._callbacks.append(handle)

    def done(self):
        return self.status != self._PENDING

    def result(self):
        if self.status != self._FINISHED:
            raise InvalidStateError(&#39;future is not ready&#39;)
        return self._result

    def __iter__(self):
        if not self.done():
            self._blocking = True
        yield self
        assert self.done(), &#39;future not done&#39;
        return self.result()
</code></pre><p>\u6211\u4EEC\u8FD8\u9700\u8981\u7528 task \u6765\u5BF9\u534F\u7A0B\u672C\u8EAB\u505A\u4E00\u5C42\u5C01\u88C5\u3002task \u662F future \u7684\u5B50\u7C7B\u3002</p><pre><code>class Task(Future):
    def __init__(self, coro, loop=None):
        super().__init__(loop=loop)
        self._coro = coro    # \u534F\u7A0B
        self._loop.call_soon(self._step) # \u542F\u52A8\u534F\u7A0B

    def _step(self, exc=None):
        try:
            if exc is None:
                result = self._coro.send(None)
            else:
                result = self._coro.throw(exc)   # \u6709\u5F02\u5E38\uFF0C\u5219\u629B\u51FA\u5F02\u5E38
        except StopIteration as exc:   # \u8BF4\u660E\u534F\u7A0B\u5DF2\u7ECF\u6267\u884C\u5B8C\u6BD5\uFF0C\u4E3A\u534F\u7A0B\u8BBE\u7F6E\u503C
            self.set_result(exc.value)
        else:
            if isinstance(result, Future):
                if result._blocking:
                    self._blocking = False
                    result.add_done_callback(self._wakeup, result)
                else:
                    self._loop.call_soon(
                        self._step, RuntimeError(&#39;\u4F60\u662F\u4E0D\u662F\u7528\u4E86 yield \u624D\u5BFC\u81F4\u8FD9\u4E2Aerror?&#39;)
                    )
            elif result is None:
                self._loop.call_soon(self._step)
            else:
                self._loop.call_soon(self._step, RuntimeError(&#39;\u4F60\u4EA7\u751F\u4E86\u4E00\u4E2A\u4E0D\u5408\u89C4\u8303\u7684\u503C&#39;))

    def _wakeup(self, future):
        try:
            future.result()  # \u67E5\u770Bfuture \u8FD0\u884C\u662F\u5426\u6709\u5F02\u5E38
        except Exception as exc:
            self._step(exc)
        else:
            self._step()
</code></pre><p>task \u7684 _coro \u5C31\u662F\u534F\u7A0B\u3002 task \u53EA\u6709\u4E24\u4E2A\u65B9\u6CD5\u3002 _step \u5B9E\u9645\u4E0A\u5C31\u662F\u6267\u884C _coro.send(None)\uFF0C\u6839\u636E\u534F\u7A0B\u7684\u4EA7\u51FA\u503C\u6765\u8FDB\u884C\u4E0B\u4E00\u6B65\u3002\u5F53\u8FD4\u56DE\u4E86\u4E00\u4E2A future\uFF0C\u5982\u679C\u662F\u963B\u585E\u4E2D\u7684\u72B6\u6001 _blocking \uFF0C\u5C31\u5C06\u5524\u9192\u81EA\u5DF1\u4F5C\u4E3A future \u7684\u56DE\u8C03\u51FD\u6570\u3002future \u56DE\u8C03\u5B8C\u6BD5\u4E4B\u540E\uFF0C\u5C31\u4F1A\u5524\u9192\u534F\u7A0B\u8FDB\u884C\u4E0B\u4E00\u6B65\u3002</p><p>\u5982\u679C\u4EA7\u51FA\u4E00\u4E2A None\uFF0C\u90A3\u4E48\u5C31\u65E0\u987B\u963B\u585E\uFF0C\u7EE7\u7EED\u5F80\u4E0B\u8FDB\u884C\u3002 \u5C06 self._step \u6DFB\u52A0\u5230 eventloop \u7684\u4E8B\u4EF6\u961F\u5217\u91CC\u3002\u7B49\u5F85 eventloop \u7A0D\u540E\u6267\u884C\u3002</p><p>\u6BD4\u8F83\u6709\u610F\u601D\u7684\u662F\u4ED6\u7684\u5F02\u5E38\u5904\u7406\u65B9\u5F0F\uFF0C _step() \u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u5F02\u5E38\uFF0C\u5E76\u5C06\u5176\u629B\u51FA\u3002\u5982\u679C yield \u8FD4\u56DE\u4E86\u4E0D\u89C4\u8303\u7684\u503C\uFF0C\u5E76\u4E0D\u4F1A\u76F4\u63A5\u7206\u51FA\u5F02\u5E38\uFF0C\u800C\u662F\u5C06\u5F02\u5E38 \u4F5C\u4E3A _step \u7684\u53C2\u6570\uFF0C\u5728\u4E0B\u4E00\u6B21\u8FD0\u884C\u7684\u65F6\u5019\u629B\u51FA\u6765\u3002</p><p><a href="%E9%82%A3%E4%BB%96%E5%A6%88%E7%9A%84%E6%98%AF%E5%9B%A0%E4%B8%BA%EF%BC%8C%E5%82%BB%E9%80%BC%E4%BD%9C%E8%80%85%E5%86%99%E4%BA%86%E4%B8%80%E5%8D%8A%EF%BC%8C%E4%B8%8D%E7%BB%99%E8%BF%90%E8%A1%8C%E4%BB%A3%E7%A0%81.%E5%BC%94%E4%B8%9C%E8%A5%BF%E8%BF%98%E5%8F%AA%E8%B0%83%E5%BA%A6%E4%B8%AA%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%EF%BC%8C%E6%8B%BF%E4%B8%8D%E5%87%BA%E5%AE%9E%E9%99%85%E8%BF%94%E5%9B%9E%E5%80%BC%EF%BC%8C%E8%BF%98%E8%A6%81%E5%A1%ABtam%E7%9A%84%E5%85%B6%E4%BB%96%E6%96%B9%E6%B3%95%E6%89%8D%E8%83%BD%E6%BB%A1%E8%B6%B3">\u5410\u69FD</a>\uFF1A \u8FD9\u5F14\u4E1C\u897F\u6CA1\u5199\u600E\u4E48\u8C03\u5EA6\uFF0C\u82B1\u4E86\u8001\u5B50\u534A\u5929\u65F6\u95F4\uFF0C\u5F14\u73A9\u610F\u5783\u573E\uFF0C\u6574\u4E1C\u897F\u6574\u4E00\u534A</p><ul><li><p>eventloop \u662F\u8C03\u5EA6\u5668\uFF0C\u5C31\u662F\u5F00\u542F\u4E86\u4E4B\u540E\u4E00\u76F4\u5FAA\u73AF\u8C03\u961F\u5217\u91CC\u6CE8\u518C\u7684 handle\uFF08\u5176\u5B9E\u662F tmd self._step\uFF09</p></li><li><p>future \u5927\u6982\u662F\u4E3A\u4E86\u6A21\u4EFF asyncio\uFF0C\u6574\u7684\u4E00\u4E2A\u5F14\u4E1C\u897F\uFF0C\u8C8C\u4F3C\u4F8B\u5B50\u4E2D\u6CA1\u5565\u5375\u7528\uFF0C\u56E0\u4E3A\u8981\u7528\u5916\u90E8\u7684\u534F\u7A0B\u5BF9\u8C61\u624D\u597D\u770B\u51FA\u6548\u679C</p></li></ul><p>\u6B65\u9AA4\u5927\u6982\u662F\uFF1A</p><pre><code>def sleep():
print(&quot;sleep()&quot;)
yield
return &quot;sleep\u7684\u8FD4\u56DE\u503C&quot;


def compute(x, y):
    print(&quot;compute()&quot;)
    result = yield from sleep()
    print(&quot;compute_result: &quot;, result)
    return x + y
</code></pre><p>\u200B<br> \u200B def print_sum(x, y): \u200B print(&quot;print_sum()&quot;) \u200B result = yield from compute(x, y) \u200B print(&quot;%s + %s = %s&quot; % (x, y, result)) \u200B return result \u200B<br> def _complete_eventloop(future): future._loop.stop()</p><pre><code>future = Task(print_sum(1, 2))
future.add_done_callback(_complete_eventloop, future)

get_event_loop().run_forever()
</code></pre><ul><li><p>1.\u521D\u59CB\u5316\u4E00\u4E2A Task \u5BF9\u8C61\uFF0C\u8FD9\u4E2A\u5BF9\u8C61\u5728\u521D\u59CB\u5316\u7684\u65F6\u5019\u5C31\u5728\u751F\u6210\u7684 eventloop \u91CC\u9762\u6CE8\u518C\u4E86\u81EA\u5DF1\u7684 _step() \u51FD\u6570</p></li><li><p>2.\u7136\u540E\u5F14\u73A9\u610F run_forver() \u4E86,\u4E00\u76F4\u5728 _ready \u4E8B\u4EF6\u961F\u5217\u91CC\u9762\u627E handle \uFF08handle(_step)\u4E0A\u4E00\u6B65\u6CE8\u518C\u7684\u5F14\u4E1C\u897F\uFF09</p></li><li><p>3.\u6267\u884C _step()\uFF0C\u8D70\u5230 self.coro.send(None) \u5176\u5B9E\u5C31\u662F\u6B63\u5E38\u4F60\u6267\u884C\u534F\u7A0B\u7684 .send(None) \u65B9\u6CD5\uFF0C\u7136\u540E result \u62FF\u5230 yield \u7684\u7ED3\u679C</p></li><li><p>4.\u5F14\u4E1C\u897F\u8FD8\u8FDB\u884C\u4E86\u4E2A\u50BB\u903C\u5224\u65AD result \u7684\u7ED3\u679C\u8981\u662F None \u5C31\u7EE7\u7EED \u53BB\u628A\u81EA\u5DF1\u7684 _setp() \u7ED9\u6CE8\u518C\u4E86</p></li><li><p>4.1.\u53E6\u4E00\u4E2A\u5224\u65AD\u770B yield \u62FF\u5230\u7684\u662F\u4E0D\u662F Future \u5BF9\u8C61\uFF0C\u8981\u662F\u7684\u8BDD \u8FD8\u8981\u5224\u65AD\u4ED6\u662F\u4E0D\u662F\u963B\u585E\u4E86\uFF0C\u8981\u662F\u5F14\u4E1C\u897F\u662F\u9ED8\u8BA4\u7684\u963B\u585E \u4F60\u6CA1\u6539\u7684\u7684\u8BDD\uFF0C\u8FD8\u7ED9\u4F60\u62A5\u4E2A\u9519</p></li><li><p>4.2.\u8FD8\u6709\u4E00\u4E2A\u5224\u65AD\uFF0C\u5C31\u662F\u770B yield \u62FF\u5230\u7684\u662F\u4E2A\u5F02\u7C7B\uFF0C\u5C31\u4ED6\u5988\u7684\u62A5\u4E2A\u9519</p></li><li><ol start="5"><li>\u6CE8\u518C\u5B8C\u4E4B\u540E\uFF0C\u8FD9\u5F14\u73A9\u610F\u662F\u4E2A\u56DE\u8C03\uFF0C\u7B97\u662F\u8FD0\u884C\u7ED3\u675F\u4E86\u4E00\u8F6E\uFF0C\u7136\u540E\u5C41\u8FD4\u56DE\u503C\u4E5F\u6CA1\u6709\uFF0C\u6B64\u65F6 Handler \u7684 run() \u7B97\u662F\u8FD0\u884C\u5B8C\u4E86\uFF0C\u7136\u540E\u7EE7\u7EED forever()</li></ol></li><li><p>6.\u4E4B\u540E\u5C31\u662F\u4E00\u76F4\u91CD\u590D\u5FAA\u73AF 2\u30013\u30014\u30015 \u77E5\u9053\u5224\u65AD\u51FA\u4E86 4.1 \u6216\u662F 4.2\uFF0C\u6216\u662F eventloop \u8FDB\u884C\u4E86 stop \u52A8\u4F5C\uFF0C forever() break \u5FAA\u73AF</p></li><li><p>7.\u82E5\u6267\u884C\u5B8C\u6210\uFF0C\u6B63\u5E38\u5C31\u662F\u4F1A\u62A5 StopIteration \u7684\u5F02\u5E38\uFF08\u4E00\u4E2A yield \u5BF9\u5E94\u4E00\u4E2A send\uFF0C\u82E5 send \u591A\u4E86\u5C31\u4F1A\u62A5\u5F02\u5E38\uFF09\uFF0C\u6355\u83B7\u540E\u6765\u8BBE\u7F6E future \u7684\u72B6\u6001\u4E3A \u6267\u884C\u5B8C\u6210\u3002\u7136\u540E\u6838\u5FC3\u6765\u4E86\uFF0C\u4F1A\u6267\u884C _schedule_callback() \u8FD9\u73A9\u610F\u6765\u68C0\u67E5 Future \u4E2D\u8FD8\u6709\u6CA1\u6709\u672A\u6267\u884C\u7684 callback \u627E\u51FA\u6765\u7136\u540E\u5FAA\u73AF add_ready \u6DFB\u52A0\u5230 eventloop \u4E2D\u7B49\u5F85\u6267\u884C</p></li></ul><p>\u4EE5\u4E0A\u5C31\u662F\u6574\u4E2A\u5F02\u6B65\u4E8B\u4EF6\u5FAA\u73AF\u7684\u6838\u5FC3\u673A\u5236\uFF0C\u7ED5\u7684\u4E00\u5339\uFF01\uFF01</p><h3 id="\u7ED3\u675F" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u675F" aria-hidden="true">#</a> \u7ED3\u675F</h3><p>asyncio \u4E2D\u534F\u7A0B\u6700\u6838\u5FC3\u7684\u8BBE\u8BA1\u5927\u6982\u5C31\u662F\u8FD9\u6837\u3002\u52A0\u8D77\u6765\u4E0D\u5230\u4E24\u767E\u884C\u4EE3\u7801\u3002</p><p>\u5F53\u7136\uFF0C\u8FD9\u4E9B\u8FD8\u8FDC\u8FDC\u4E0D\u591F\u3002</p><p>\u4EE5\u6B64\u4E3A\u6846\u67B6\uFF0C\u6211\u4F1A\u6162\u6162\u589E\u6DFB\u5B9A\u65F6\u4EFB\u52A1\u7684\u5904\u7406\u65B9\u5F0F, \u5C31\u50CF asyncio.sleep()\u5C31\u662F\u901A\u8FC7\u5B9A\u65F6\u4EFB\u52A1\u5B9E\u73B0\u7684 , \u6DFB\u52A0\u591A\u7EBF\u7A0B\u652F\u6301\uFF08\u57FA\u4E8E threeding\uFF09\uFF0C \u6DFB\u52A0\u5BF9 socket \u4E8B\u4EF6\u7684\u76D1\u542C(\u57FA\u4E8E selector \u6A21\u5757)\uFF0C\u6211\u4EEC\u8FD8\u53EF\u4EE5\u6B64\u57FA\u7840\u4E0A\u5B9E\u73B0 http \u7684 request(get\\post \u7B49) \u529F\u80FD\uFF0C\u539F\u7248\u7684 asyncio \u6A21\u5757 \u90FD\u6CA1\u6709\u8FD9\u4E2A\u529F\u80FD\u3002\u8FD9\u624D\u7B97\u5B9E\u73B0\u4E86\u4E00\u4E2A\u7B80\u5355\u7684\u5F02\u6B65\u3002</p><h1 id="\u8FD9\u4ED6\u5988\u662F\u5565-2-\u2014\u2014\u2014\u2014asyncio-\u5B9E\u73B0\u5B9A\u65F6\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#\u8FD9\u4ED6\u5988\u662F\u5565-2-\u2014\u2014\u2014\u2014asyncio-\u5B9E\u73B0\u5B9A\u65F6\u4EFB\u52A1" aria-hidden="true">#</a> \u8FD9\u4ED6\u5988\u662F\u5565 - 2 \uFF1F\u2014\u2014\u2014\u2014asyncio \u5B9E\u73B0\u5B9A\u65F6\u4EFB\u52A1</h1>`,124),k={href:"https://zhuanlan.zhihu.com/p/65175411",target:"_blank",rel:"noopener noreferrer"},v=n("h2",{id:"",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#","aria-hidden":"true"},"#")],-1),m=n("p",null,"\u8FD9\u662F asyncio \u5B98\u65B9\u6587\u6863\u7ED9\u51FA\u7684\u4E00\u4E2A\u8303\u4F8B\u3002\u8FD9\u7BC7\u6587\u7AE0\u7684\u4EFB\u52A1\u5C31\u662F\uFF0C\u7528\u6211\u4EEC\u81EA\u5DF1\u5199\u7684 asyio \u6A21\u5757\uFF0C\u6765\u5B9E\u73B0\u8FD9\u4E2A\u8303\u4F8B\u3002\uFF08\u4E0D\u4F1A\u8D77\u540D\u5B57\uFF0C\u5C31\u76F4\u63A5\u53EB asyio \u4E86\uFF09",-1);function f(b,_){const a=c("ExternalLinkIcon");return p(),o("div",null,[r,n("p",null,[n("a",u,[s("https://zhuanlan.zhihu.com/p/64991670"),e(a)]),s(" \u55D0\uFF0C\u8981\u5F04\u61C2\u4E00\u4E2A\u73A9\u610F\u5230\u5E95\u662F\u5565\uFF0C\u5F53\u7136\u5C11\u4E0D\u4E86\u4E00\u7779 cpython \u4E0E asyncio \u7684\u6E90\u7801\u3002")]),d,n("p",null,[n("a",k,[s("https://zhuanlan.zhihu.com/p/65175411"),e(a)]),s(" \u6211\u4EEC\u9010\u6B65\u5B9E\u73B0\u4E00\u4E2A asyncio \u8FD9\u6837\u7684\u534F\u7A0B\u5E93\u3002\u9996\u5148\u6765\u5B9E\u73B0\u534F\u7A0B\u7684\u5B9A\u65F6\u4EFB\u52A1")]),v,m])}const g=t(i,[["render",f],["__file","\u5E95\u5C42\u5B9E\u73B0.html.vue"]]);export{g as default};
