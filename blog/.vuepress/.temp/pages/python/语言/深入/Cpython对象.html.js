export const data = JSON.parse("{\"key\":\"v-38ec5ec9\",\"path\":\"/python/%E8%AF%AD%E8%A8%80/%E6%B7%B1%E5%85%A5/Cpython%E5%AF%B9%E8%B1%A1.html\",\"title\":\"Cpython 对象\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"Cpython 对象\",\"order\":3,\"summary\":\"Cpython 的对象 1. Python 对象实现机制 在顶层抽象上，python 对象是属性、方法、作用域的集合 在底层实现上，python 对象不过就是对 C 语言 struct 结构的封装 1.1 CPython 结构体 一个 python 的 int 类型可写成如下形式 python 对应 C 的结构体如下 ~~~c typedef struct \",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://igarashi-g.github.io/python/%E8%AF%AD%E8%A8%80/%E6%B7%B1%E5%85%A5/Cpython%E5%AF%B9%E8%B1%A1.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"五十岚 ▪ 寄\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Cpython 对象\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}]]},\"excerpt\":\"\",\"headers\":[{\"level\":2,\"title\":\"1. Python 对象实现机制\",\"slug\":\"_1-python-对象实现机制\",\"link\":\"#_1-python-对象实现机制\",\"children\":[{\"level\":3,\"title\":\"1.1 CPython 结构体\",\"slug\":\"_1-1-cpython-结构体\",\"link\":\"#_1-1-cpython-结构体\",\"children\":[]},{\"level\":3,\"title\":\"1.2 解决问题\",\"slug\":\"_1-2-解决问题\",\"link\":\"#_1-2-解决问题\",\"children\":[]},{\"level\":3,\"title\":\"1.结构体空间问题\",\"slug\":\"_1-结构体空间问题\",\"link\":\"#_1-结构体空间问题\",\"children\":[]},{\"level\":3,\"title\":\"2.python 数据对象的核心基石\",\"slug\":\"_2-python-数据对象的核心基石\",\"link\":\"#_2-python-数据对象的核心基石\",\"children\":[]},{\"level\":3,\"title\":\"我们来谈谈指针：\",\"slug\":\"我们来谈谈指针\",\"link\":\"#我们来谈谈指针\",\"children\":[]}]},{\"level\":2,\"title\":\"迎刃而解\",\"slug\":\"迎刃而解\",\"link\":\"#迎刃而解\",\"children\":[{\"level\":3,\"title\":\"1、为什么 python 语言明明没有变量声明，却是强类型语言？python 是如何检查类型的？\",\"slug\":\"_1、为什么-python-语言明明没有变量声明-却是强类型语言-python-是如何检查类型的\",\"link\":\"#_1、为什么-python-语言明明没有变量声明-却是强类型语言-python-是如何检查类型的\",\"children\":[]},{\"level\":3,\"title\":\"2、为什么 list，dict 等容器可以随意嵌套，如此灵活？\",\"slug\":\"_2、为什么-list-dict-等容器可以随意嵌套-如此灵活\",\"link\":\"#_2、为什么-list-dict-等容器可以随意嵌套-如此灵活\",\"children\":[]},{\"level\":3,\"title\":\"3、类的方法第一个参数是它自身，如何实现？\",\"slug\":\"_3、类的方法第一个参数是它自身-如何实现\",\"link\":\"#_3、类的方法第一个参数是它自身-如何实现\",\"children\":[]},{\"level\":3,\"title\":\"关于 python 的一致性。\",\"slug\":\"关于-python-的一致性。\",\"link\":\"#关于-python-的一致性。\",\"children\":[]},{\"level\":3,\"title\":\"然而就其本质而言，这些所谓的特殊方法实际上并没有什么真正特殊的地方。\",\"slug\":\"然而就其本质而言-这些所谓的特殊方法实际上并没有什么真正特殊的地方。\",\"link\":\"#然而就其本质而言-这些所谓的特殊方法实际上并没有什么真正特殊的地方。\",\"children\":[]}]}],\"readingTime\":{\"minutes\":11.1,\"words\":3330},\"filePathRelative\":\"python/语言/深入/Cpython对象.md\"}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
