import comp from "D:/Program/Igarashi-G.github.io/blog/.vuepress/.temp/pages/python/语言/进阶/面向对象.html.vue"
const data = JSON.parse("{\"path\":\"/python/%E8%AF%AD%E8%A8%80/%E8%BF%9B%E9%98%B6/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html\",\"title\":\"面向对象\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"面向对象\",\"order\":8,\"article\":false,\"description\":\"面向对象 计算机中，一切皆对象，世界里，万物皆对象，对象皆分类 因此描述对象先不直接写一个对象而是先思考一类对象的共性 1. 对象 学过Java 的都知道 Object是 class 的一个实例， python 其实比 JAVA 面向对象更彻底，它的类和函数都是对象，它具有以下 【特性】： 赋值给一个变量 可以添加到集合对象中 可以作为参数传递给函数 ...\",\"head\":[[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"WebPage\\\",\\\"name\\\":\\\"面向对象\\\",\\\"description\\\":\\\"面向对象 计算机中，一切皆对象，世界里，万物皆对象，对象皆分类 因此描述对象先不直接写一个对象而是先思考一类对象的共性 1. 对象 学过Java 的都知道 Object是 class 的一个实例， python 其实比 JAVA 面向对象更彻底，它的类和函数都是对象，它具有以下 【特性】： 赋值给一个变量 可以添加到集合对象中 可以作为参数传递给函数 ...\\\"}\"],[\"meta\",{\"property\":\"og:url\",\"content\":\"https://igarashi-g.github.io/python/%E8%AF%AD%E8%A8%80/%E8%BF%9B%E9%98%B6/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"悦 ▪ 宝宝\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"面向对象\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"面向对象 计算机中，一切皆对象，世界里，万物皆对象，对象皆分类 因此描述对象先不直接写一个对象而是先思考一类对象的共性 1. 对象 学过Java 的都知道 Object是 class 的一个实例， python 其实比 JAVA 面向对象更彻底，它的类和函数都是对象，它具有以下 【特性】： 赋值给一个变量 可以添加到集合对象中 可以作为参数传递给函数 ...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"website\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}]]},\"readingTime\":{\"minutes\":20.55,\"words\":6166},\"filePathRelative\":\"python/语言/进阶/面向对象.md\",\"excerpt\":\"\\n<p>计算机中，一切皆对象，世界里，万物皆对象，对象皆分类</p>\\n<p>因此描述对象先不直接写一个对象而是先思考一类对象的共性</p>\\n<h2>1. 对象</h2>\\n<p>学过<code>Java</code> 的都知道<code> Object</code>是 <code>class</code> 的一个实例， python 其实比 JAVA 面向对象更彻底，它的类和函数都是对象，它具有以下</p>\\n<p>【特性】：</p>\\n<ul>\\n<li>\\n<p>赋值给一个变量</p>\\n<div class=\\\"language-python line-numbers-mode\\\" data-highlighter=\\\"shiki\\\" data-ext=\\\"python\\\" style=\\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\\"><pre class=\\\"shiki shiki-themes one-light one-dark-pro vp-code\\\"><code><span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">def</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\"> ask</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(</span><span style=\\\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\\\">name</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">=</span><span style=\\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\\">\\\"YKB\\\"</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">): </span><span style=\\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\\">print</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(name)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">func </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">=</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> ask</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\\">func</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(</span><span style=\\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\\">\\\"PDA\\\"</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">)</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">class</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\"> Person</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#ABB2BF\\\">()</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">    def</span><span style=\\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\\"> __init__</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(</span><span style=\\\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic\\\">self</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">,</span><span style=\\\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\\\"> name</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">=</span><span style=\\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\\">\\\"YKB\\\"</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">): </span><span style=\\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\\">print</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(name)</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">my_class </span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\\">=</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> Person</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\\">my_class</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(</span><span style=\\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\\">\\\"PDA\\\"</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">)</span></span></code></pre>\\n<div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\" style=\\\"counter-reset:line-number 0\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div></li>\\n<li>\\n<p>可以添加到集合对象中</p>\\n</li>\\n<li>\\n<p>可以作为参数传递给函数</p>\\n</li>\\n<li>\\n<p>可以当做函数的返回值</p>\\n</li>\\n</ul>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
