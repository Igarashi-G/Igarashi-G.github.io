import comp from "D:/Program/Igarashi-G.github.io/blog/.vuepress/.temp/pages/unix/CentOS/DNS/bind.html.vue"
const data = JSON.parse("{\"path\":\"/unix/CentOS/DNS/bind.html\",\"title\":\"DNS-BIND\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"DNS-BIND\",\"order\":2,\"description\":\"DNS BIND DNS 主配置文件： vim /etc/named.conf 在区域 zone 下面添加自定义的新 zone 定义好主配置文件后，就可以去配置区域数据文件了，通常默认存放在 /var/named 目录下，每个区域数据文件对应一个 DNS 解析区域，文件名 及内容我们自己定义 以我们在主配置文件中指定的区域数据文件名新建一个文本：（文件...\",\"head\":[[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"DNS-BIND\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"悦·宝宝\\\",\\\"url\\\":\\\"https://github.com/Igarashi-G\\\"}]}\"],[\"meta\",{\"property\":\"og:url\",\"content\":\"https://igarashi-g.github.io/unix/CentOS/DNS/bind.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"悦 ▪ 宝宝\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"DNS-BIND\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"DNS BIND DNS 主配置文件： vim /etc/named.conf 在区域 zone 下面添加自定义的新 zone 定义好主配置文件后，就可以去配置区域数据文件了，通常默认存放在 /var/named 目录下，每个区域数据文件对应一个 DNS 解析区域，文件名 及内容我们自己定义 以我们在主配置文件中指定的区域数据文件名新建一个文本：（文件...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}]]},\"readingTime\":{\"minutes\":12.22,\"words\":3666},\"filePathRelative\":\"unix/CentOS/DNS/bind.md\",\"excerpt\":\"\\n<h2>DNS 主配置文件：</h2>\\n<p>vim /etc/named.conf</p>\\n<pre><code>//\\n// named.conf\\n//\\n// Provided by Red Hat bind package to configure the ISC BIND named(8) DNS\\n// server as a caching only nameserver (as a localhost DNS resolver only).\\n//\\n// See /usr/share/doc/bind*/sample/ for example named configuration files.\\n//\\n// See the BIND Administrator's Reference Manual (ARM) for details about the\\n// configuration located in /usr/share/doc/bind-{version}/Bv9ARM.html\\n\\noptions {\\n        listen-on port 53 { 127.0.0.1; }; //监听地址和端口，没特殊要求建议删除，删除后默认会在所有接口的UDP 53 端口监听服务\\n        listen-on-v6 port 53 { ::1; };\\n        directory       \\\"/var/named\\\"; // 区域数据文件的默认存放位置\\n        dump-file       \\\"/var/named/data/cache_dump.db\\\";    // 用于指定缓存数据库文件、状态统计文件的位置\\n        statistics-file \\\"/var/named/data/named_stats.txt\\\";  // 同上\\n        memstatistics-file \\\"/var/named/data/named_mem_stats.txt\\\";\\n        recursing-file  \\\"/var/named/data/named.recursing\\\";\\n        secroots-file   \\\"/var/named/data/named.secroots\\\";\\n        allow-query     { localhost; }; // 允许使用本DNS服务器的网段，建议删除，删除后默认响应所有客户机的查询请求\\n\\n        /*\\n         - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.\\n         - If you are building a RECURSIVE (caching) DNS server, you need to enable\\n           recursion.\\n         - If your recursive DNS server has a public IP address, you MUST enable access\\n           control to limit queries to your legitimate users. Failing to do so will\\n           cause your server to become part of large scale DNS amplification\\n           attacks. Implementing BCP38 within your network would greatly\\n           reduce such attack surface\\n        */\\n        recursion yes;\\n\\n        dnssec-enable yes;\\n        dnssec-validation yes;  // 据说以上三个选项为yes会有影响，但目前测试无影响，若有则置为 no\\n\\n        /* Path to ISC DLV key */\\n        bindkeys-file \\\"/etc/named.root.key\\\";\\n\\n        managed-keys-directory \\\"/var/named/dynamic\\\";\\n\\n        pid-file \\\"/run/named/named.pid\\\";\\n        session-keyfile \\\"/run/named/session.key\\\";\\n};\\n\\nlogging {\\n        channel default_debug {\\n                file \\\"data/named.run\\\";\\n                severity dynamic;\\n        };\\n};\\n\\nzone \\\".\\\" IN {   // 正向 \\\"xx.com\\\" 区域\\n        type hint;  // 类型为hint\\n        file \\\"named.ca\\\"; // 区域数据文件为 name.ca\\n};\\n\\ninclude \\\"/etc/named.rfc1912.zones\\\";\\ninclude \\\"/etc/named.root.key\\\";\\n</code></pre>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
