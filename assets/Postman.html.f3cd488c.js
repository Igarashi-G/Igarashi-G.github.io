import{_ as e}from"./plugin-vueexport-helper.2444895f.js";import{o,c as t,a as n,b as s,d as c,f as p,r}from"./app.0bb9a34e.js";const d={},i=p(`<h1 id="postman" tabindex="-1"><a class="header-anchor" href="#postman" aria-hidden="true">#</a> Postman</h1><p><strong>Postman</strong> \u662F\u4E00\u6B3E\u529F\u80FD\u5F3A\u5927\u7684\u7F51\u9875\u8C03\u8BD5\u4E0E\u53D1\u9001\u7F51\u9875 <code>HTTP</code> \u8BF7\u6C42\u7684 <code>Chrome</code> \u63D2\u4EF6\u3002\u53EF\u4EE5\u7528\u4E8E\u6D4B\u8BD5\u53D1\u9001\u5404\u79CD <code>HTTP</code> \u8BF7\u6C42\u3002</p><h3 id="_1-\u57FA\u672C\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_1-\u57FA\u672C\u64CD\u4F5C" aria-hidden="true">#</a> 1. \u57FA\u672C\u64CD\u4F5C</h3><p><strong>Authorization - \u6388\u6743</strong></p><p>\u8EAB\u4EFD\u8BA4\u8BC1\uFF0C\u663E\u793A <code>browser cookies</code>\uFF0C\u9700\u8981\u5F00\u542F <code>Interceptor</code></p><ul><li><code>Basic Auth</code>\uFF1A\u586B\u5199\u7528\u6237\u540D\u548C\u5BC6\u7801\uFF0C\u70B9\u51FB <code>update request</code> \u540E\uFF0C<code>headers</code> \u4E2D\u81EA\u52A8\u6DFB\u52A0 <strong>Authorization</strong></li></ul><p><strong>Headers - \u8BF7\u6C42\u5934</strong></p><p>\u901A\u5E38\u662F <code>json</code> \u7684\u6570\u636E\u683C\u5F0F\uFF0C\u4E0D\u540C\u683C\u5F0F\u6839\u636E\u4E0D\u540C\u7C7B\u578B\u5207\u6362\uFF0C\u6BD4\u5982\uFF1A <code>excel</code> \u5C31\u80AF\u5B9A\u662F\u53E6\u4E00\u79CD\u683C\u5F0F</p><table><thead><tr><th>key</th><th>value</th></tr></thead><tbody><tr><td><code>Content-Type</code></td><td><code>application/json</code></td></tr></tbody></table><p><strong>Body - \u8BF7\u6C42\u4F53</strong></p><ul><li><p><code>form-data</code></p><p>\u8868\u5355\u6570\u636E <code>key - value</code>\u5F62\u5F0F</p></li><li><p><code>x-www-form-urlencoded</code></p><p>\u9009\u62E9 <code>x-www-form-urlencoded</code> \u7684\u53C2\u6570\u65B9\u5F0F\u540E\uFF0C<code>postman</code> \u81EA\u52A8\u8BBE\u7F6E\u4E86<code>Content-Type</code>\uFF0C\u7A97\u4F53\u6570\u636E\u88AB\u7F16\u7801\u4E3A<code>key - value</code></p></li><li><p><code>raw</code></p><p>\u901A\u5E38\u9009\u9879\uFF0C\u91CC\u9762\u5199\u5165\u539F\u751F\u7684 <code>josn</code> \u6570\u636E\uFF0C\u914D\u5408 <code>JSON(application/json)</code> \u8FDB\u884C\u9A8C\u8BC1\u662F\u5426\u53C2\u6570\u6B63\u786E</p></li><li><p><code>binary</code></p><p>\u4E8C\u8FDB\u5236\u5F62\u5F0F\uFF0C\u6587\u4EF6\u6D41\uFF0C\u5B57\u8282\u6D41\u7B49</p></li></ul><h3 id="_2-\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#_2-\u6D4B\u8BD5" aria-hidden="true">#</a> 2. \u6D4B\u8BD5</h3><p><strong>\u53EF\u5199\u811A\u672C</strong></p><ul><li><p>\u5224\u65AD\u8FD4\u56DE\u7684\u72B6\u6001\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>tests<span class="token punctuation">[</span><span class="token string">&#39;Status code is 200&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> responseCode<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>\u6821\u9A8C\u5305\u542B\u5B57\u7B26\u4E32</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>tests<span class="token punctuation">[</span><span class="token string">&#39;Body matches string&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> responseBody<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>\u89E3\u6790 JSON \u5E76\u68C0\u67E5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> jsonData <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>responseBody<span class="token punctuation">)</span><span class="token punctuation">;</span>
tests<span class="token punctuation">[</span><span class="token string">&#39;request test&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> jsonData<span class="token punctuation">.</span>test <span class="token operator">===</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p><strong>Collection</strong>\uFF1A \u628A\u6D4B\u8BD5\u7528\u4F8B\u4FDD\u5B58\uFF0C<code>Runner</code> \u6279\u91CF\u6267\u884C</p>`,15),l={href:"https://yapi.ymfe.org/",target:"_blank",rel:"noopener noreferrer"};function u(k,h){const a=r("ExternalLinkIcon");return o(),t("div",null,[i,n("blockquote",null,[n("p",null,[s("\u5728\u7EBF\u53EF\u5C1D\u8BD5\u5546\u4E1A\u7248\u8F6F\u4EF6 "),n("a",l,[s("yapi"),c(a)])])])])}const v=e(d,[["render",u],["__file","Postman.html.vue"]]);export{v as default};
