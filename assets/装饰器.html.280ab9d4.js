import{_ as i}from"./plugin-vueexport-helper.2444895f.js";import{o as l,c as u,e as r,a as n,b as s,d as t,w as e,f as a,r as o}from"./app.36c39385.js";const d="/assets/\u95ED\u5305.e68ddc73.png",k={},v=n("p",null,[n("strong",null,"\u88C5\u9970\u5668"),s(" \u8FD9\u4E2A\u540D\u79F0\u53EF\u80FD\u66F4\u9002\u5408\u518D\u7F16\u8BD1\u5668\u9886\u57DF\u4F7F\u7528\uFF0C\u56E0\u4E3A\u5B83\u4F1A\u904D\u5386\u5E76\u6CE8\u89E3\u8BED\u6CD5\u6811")],-1),m=n("p",null,[s("\u2014\u2014 "),n("strong",null,"PEP 318")],-1),b=a(`<h1 id="\u88C5\u9970\u5668" tabindex="-1"><a class="header-anchor" href="#\u88C5\u9970\u5668" aria-hidden="true">#</a> \u88C5\u9970\u5668</h1><h2 id="_1-\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#_1-\u6982\u8FF0" aria-hidden="true">#</a> 1. \u6982\u8FF0</h2><p><strong>\u88C5\u9970\u5668\uFF08<em>Decorators</em>\uFF09</strong> \u7528\u4E8E\u6E90\u7801 \u2019\u6807\u8BB0\u2018 \u51FD\u6570\uFF0C\u4EE5\u67D0\u79CD\u65B9\u5F0F\u589E\u5F3A\u51FD\u6570\u7684\u884C\u4E3A\uFF0C\u5FC5\u987B\u5148\u638C\u63E1 <strong>\u4EE5\u4E0B\u4E09\u4E2A\u6761\u4EF6</strong></p><ul><li>\u4F5C\u7528\u57DF</li><li>\u9AD8\u9636\u51FD\u6570</li><li><strong>\u95ED\u5305</strong> \u7684\u65B9\u65B9\u9762\u9762</li></ul><div class="custom-container tip"><p class="custom-container-title">\u9AD8\u9636\u51FD\u6570</p><p>\u63A5\u53D7\u51FD\u6570\u4E3A\u53C2\u6570\uFF0C\u6216\u8005\u628A\u51FD\u6570\u4F5C\u4E3A\u7ED3\u679C\u8FD4\u56DE\u7684\u51FD\u6570</p></div><h3 id="_1-1-\u57FA\u7840\u77E5\u8BC6" tabindex="-1"><a class="header-anchor" href="#_1-1-\u57FA\u7840\u77E5\u8BC6" aria-hidden="true">#</a> 1.1 \u57FA\u7840\u77E5\u8BC6</h3><p>\u88C5\u9970\u5668\u662F\u53EF\u8C03\u7528\u5BF9\u8C61\uFF0C\u5176\u53C2\u6570\u662F<strong>\u53E6\u4E00\u4E2A\u51FD\u6570</strong>\uFF08<em>\u88AB\u88C5\u9970\u7684\u51FD\u6570</em>\uFF09\u3002\u88C5\u9970\u5668\u53EF\u80FD\u4F1A\u5904\u7406\u88AB\u88C5\u9970\u7684\u51FD\u6570\uFF0C\u7136\u540E\u628A\u5B83\u8FD4\u56DE\uFF0C\u6216\u8005\u5C06\u5176\u66FF\u6362\u6210\u53E6\u4E00\u4E2A\u51FD\u6570\u6216\u53EF\u8C03\u7528\u5BF9\u8C61</p><p>\u5047\u5982\u6709\u540D\u4E3A <strong>decorate</strong> \u7684\u88C5\u9970\u5668</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token decorator annotation punctuation">@decirate</span>
<span class="token keyword">def</span> <span class="token function">target</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;running target()&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u5199\u6CD5\u7B49\u4EF7\u4E8E</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">target</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;running target()&quot;</span><span class="token punctuation">)</span>

target <span class="token operator">=</span> decorate<span class="token punctuation">(</span>target<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u4E0A\u8FF0\u4EE3\u7801\u6267\u884C\u540E\u5F97\u5230\u7684 <code>target</code> \u4E0D\u4E00\u5B9A\u662F\u539F\u6765\u7684 <code>target</code> \u51FD\u6570\uFF0C\u800C\u662F <code>decorate(target)</code> \u8FD4\u56DE\u7684\u51FD\u6570</li></ul><p>\u4E3A\u4E86\u786E\u8BA4\u88C5\u9970\u5668\u51FD\u6570\u4F1A\u88AB\u66FF\u6362</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">deco</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span>
	<span class="token keyword">def</span> <span class="token function">inner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;running inner()&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> inner

<span class="token decorator annotation punctuation">@deco</span>
<span class="token keyword">def</span> <span class="token function">target</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;running target()&quot;</span><span class="token punctuation">)</span>

target<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
<span class="token comment"># \u6545\u610F\u4E0D\u5199\u6253\u5370\uFF0C\u76F2\u731C\u8BD5\u8BD5\uFF1F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E25\u683C\u6765\u8BF4\u88C5\u9970\u5668\u662F <span style="color:orange;font-weight:800;">\u8BED\u6CD5\u7CD6</span>\uFF0C\u53EF\u4EE5\u50CF\u5E38\u89C4\u8C03\u51FD\u6570\u4F20\u53C2\u5F62\u5F0F\u8C03\u7528\uFF0C\u4F46\u5C24\u5176\u662F <strong>\u5143\u7F16\u7A0B</strong> \u65F6\uFF0C\u4F7F\u7528 <mark>@\u88C5\u9970\u5668</mark> \u7684\u5F62\u5F0F\u66F4\u65B9\u4FBF</p><h3 id="_1-2-python-\u4F55\u65F6\u6267\u884C\u88C5\u9970\u5668" tabindex="-1"><a class="header-anchor" href="#_1-2-python-\u4F55\u65F6\u6267\u884C\u88C5\u9970\u5668" aria-hidden="true">#</a> 1.2 Python \u4F55\u65F6\u6267\u884C\u88C5\u9970\u5668</h3><p>\u88C5\u9970\u5668\u6709\u4E24\u4E2A\u7279\u6027</p><ol><li>\u80FD\u628A\u88AB\u88C5\u9970\u7684\u51FD\u6570\u66FF\u6362\u4E3A\u5176\u4ED6\u51FD\u6570</li><li><strong>\u88C5\u9970\u5668\u5728\u6A21\u5757\u52A0\u8F7D\u65F6\u7ACB\u5373\u6267\u884C</strong>\uFF0C\u8FD9\u4E2A\u5982\u4F55\u7406\u89E3\uFF1F\u5982\u4E0B</li></ol><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>registry <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>	<span class="token comment"># \u4FDD\u5B58\u7684\u662F\u88AB @register \u88C5\u9970\u7684\u51FD\u6570\u5F15\u7528</span>


<span class="token keyword">def</span> <span class="token function">register</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;running register(</span><span class="token interpolation"><span class="token punctuation">{</span>func<span class="token punctuation">}</span></span><span class="token string">)&quot;</span></span><span class="token punctuation">)</span>
    registry<span class="token punctuation">.</span>append<span class="token punctuation">(</span>func<span class="token punctuation">)</span>
    <span class="token keyword">return</span> func


<span class="token decorator annotation punctuation">@register</span>
<span class="token keyword">def</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;running f1()&quot;</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@register</span>
<span class="token keyword">def</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;running f2()&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">f3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;running f3()&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;running main()&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;registry -&gt; &quot;</span><span class="token punctuation">,</span> registry<span class="token punctuation">)</span>
    f1<span class="token punctuation">(</span><span class="token punctuation">)</span>
    f2<span class="token punctuation">(</span><span class="token punctuation">)</span>
    f3<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">## \u8F93\u51FA\u7ED3\u679C</span>
<span class="token comment"># running register(&lt;function f1 at 0x00000206AFD66E58&gt;)</span>
<span class="token comment"># running register(&lt;function f2 at 0x00000206AFD66EE8&gt;)</span>
<span class="token comment"># running main()</span>
<span class="token comment"># registry -&gt; registry -&gt;  [&lt;function f1 at 0x000001B5924DB310&gt;, &lt;function f2 at 0x000001B592502EE0&gt;]</span>
<span class="token comment"># running f1()</span>
<span class="token comment"># running f2()</span>
<span class="token comment"># running f3()</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u4F1A\u53D1\u73B0 <code>register()</code> \u51FD\u6570\u5148\u6267\u884C\u5E76\u6253\u5370\u4E86 <code>running register</code></li><li><strong>Python</strong> \u52A0\u8F7D\u6A21\u5757\u65F6\uFF0C\u4F1A\u5148\u5C06\u5B9A\u4E49\u597D\u7684\u51FD\u6570\u5360\u5757\u5730\u5740\u52A0\u8F7D\u5230\u5185\u5B58\uFF0C\u7136\u540E\u89E3\u91CA\u5668\u987A\u5E8F\u6267\u884C</li><li>\u770B\u4F3C\u76F4\u63A5\u6267\u884C\u4E86\u88C5\u9970\u5668\uFF0C\u4F46\u4E0D\u662F\uFF0C\u800C\u662F\u5728\u8C03\u7528 <code>@register</code> \u65F6\uFF0C\u76F8\u5F53\u4E8E\u6267\u884C\u4E86 <code>func= register(func)</code> \uFF0C\u89E3\u91CA\u5668\u987A\u4FBF\u6267\u884C\u4E86 <code>register()</code> \u800C\u5DF2</li><li>\u8FD9\u6837\u76F4\u63A5\u63A5\u6536\u51FD\u6570\uFF0C\u5E76 <strong>\u539F\u6837\u8FD4\u56DE</strong> \u7684\u88C5\u9970\u5668\uFF0C\u5E76\u975E\u6CA1\u7528\u3002\u5F88\u591A <strong>Python Web</strong> \u6846\u67B6\u4F7F\u7528\u8FD9\u79CD\u88C5\u9970\u5668\uFF0C\u628A\u51FD\u6570\u6DFB\u52A0\u5230\u67D0\u79CD\u4E2D\u592E\u6CE8\u518C\u5904 <ul><li>\u5982\uFF1A\u628A <strong>URL</strong> \u6A21\u5F0F\u6620\u5C04\u5230\u751F\u6210 <strong>HTTP</strong> \u54CD\u5E94\u7684\u51FD\u6570\u4E0A\u7684\u6CE8\u518C\u5904</li></ul></li></ul><h3 id="_1-3-\u51FD\u6570\u7684\u4F5C\u7528\u57DF" tabindex="-1"><a class="header-anchor" href="#_1-3-\u51FD\u6570\u7684\u4F5C\u7528\u57DF" aria-hidden="true">#</a> 1.3 \u51FD\u6570\u7684\u4F5C\u7528\u57DF</h3>`,21),g=a(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    c <span class="token operator">=</span> <span class="token number">6</span>

f<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u80FD\u62FF\u5230 <code>c</code> \u7684\u503C\u4E48? \u5F53\u7136\u4E0D\u80FD\uFF0C\u51FD\u6570\u5728 <code>f()</code> \u8C03\u7528\u540E\u4FBF\u5728\u5185\u5B58\u4E2D\u9500\u6BC1\u4E86\uFF0C\u56E0\u6B64\u5168\u5C40\u4E2D\u62FF\u4E0D\u5230\u5C40\u90E8\u7684\u53D8\u91CF <code>c</code></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>b <span class="token operator">=</span> <span class="token number">6</span>

<span class="token keyword">def</span> <span class="token function">f3</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># global b</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
    b <span class="token operator">=</span> <span class="token number">9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u4F1A\u62A5\u9519\uFF0C\u4E3A\u5565 <code>print(b)</code> \u65F6\u663E\u793A <code>b</code> \u5C1A\u672A\u8D4B\u503C\u62A5\u9519\uFF1F</p><ul><li><p>\u7531\u4E8E <strong>\u5B57\u8282\u7801</strong> \u4E2D\uFF0C<strong>Python</strong> \u5B9A\u4E49\u4E86 <strong>b \u662F\u5C40\u90E8\u4F5C\u7528\u57DF\uFF0C\u800C\u5E76\u975E\u5168\u5C40\u4F5C\u7528\u57DF</strong></p></li><li><p>\u89E3\u51B3\u529E\u6CD5\u53EF\u4EE5\u518D <code>print(b)</code> \u524D\u6DFB\u52A0 <code>global b</code> \u6307\u5B9A\u5B57\u8282\u7801\u89E3\u6790\u65F6 <code>b</code> \u4E3A\u5168\u5C40\u4F5C\u7528\u57DF</p><div class="custom-container note"><p class="custom-container-title">\u6CE8</p><p>\u8FD9\u6BD4 <strong>JavaScript</strong> \u4F18\u79C0\uFF0C\u56E0\u4E3A <strong>JavaScript</strong> \u5185\u90E8\u672A\u5B9A\u4E49\u53D8\u91CF <code>b</code> \u5C31\u4F1A\u81EA\u52A8\u5168\u5C40 <code>var b</code> \uFF0C\u6240\u4EE5\u5E38\u4F1A\u83AB\u540D\u5176\u5999\u7684\u62FF\u5230\u4E2A\u5168\u5C40\u4F5C\u7528\u57DF\u7684\u53D8\u91CF\uFF0C\u5C31\u5F88\u79BB\u8C31</p></div></li></ul><p>\u5173\u4E8E <strong>\u5B57\u8282\u7801</strong>\uFF0C\u53EF\u4F7F\u7528\u53CD\u6C47\u7F16 <strong>dis</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> dis <span class="token keyword">import</span> dis

dis<span class="token punctuation">(</span>f3<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C\u5B57\u8282\u7801\u7684 <strong>Cpython VM</strong> \u662F\u6808\u673A\u5668\uFF0C<strong>LOAD</strong> \u548C <strong>POP</strong> \u64CD\u4F5C\u5F15\u7528\u7684\u662F\u6808</p><h3 id="_1-4-\u95ED\u5305" tabindex="-1"><a class="header-anchor" href="#_1-4-\u95ED\u5305" aria-hidden="true">#</a> 1.4 \u95ED\u5305</h3><p>\u901A\u5E38\u4F1A\u5C06\u95ED\u5305\u548C\u533F\u540D\u51FD\u6570\u5F04\u6DF7\uFF0C\u56E0\u4E3A\u5728 <strong>\u51FD\u6570\u91CC\u5199\u51FD\u6570\u4E0D\u5E38\u89C1</strong>\uFF0C\u901A\u5E38\u4F7F\u7528\u533F\u540D\u51FD\u6570\u624D\u4F1A\u8FD9\u4E48\u505A\uFF0C\u4E14\u53EA\u6709\u6D89\u53CA\u5230\u5D4C\u5957\u51FD\u6570\u65F6\u624D\u6709\u95ED\u5305\u95EE\u9898\uFF0C\u5F88\u591A\u4EBA\u662F\u540C\u65F6\u77E5\u9053\u8FD9\u4E24\u4E2A\u6982\u5FF5\u7684</p><p>\u95ED\u5305\uFF0C\u5373 <strong>\u5EF6\u4F38\u4E86\u4F5C\u7528\u57DF</strong> \u7684\u51FD\u6570\uFF0C\u51FD\u6570\u5F0F\u5B9E\u73B0\u4E00\u4E2A\u8BA1\u7B97\u5E73\u5747\u503C\u7684 <strong>\u9AD8\u9636\u51FD\u6570</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">make_averager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    series <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">averager</span><span class="token punctuation">(</span>new_value<span class="token punctuation">)</span><span class="token punctuation">:</span>
        series<span class="token punctuation">.</span>append<span class="token punctuation">(</span>new_value<span class="token punctuation">)</span>
        total <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>series<span class="token punctuation">)</span>
        <span class="token keyword">return</span> total <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>series<span class="token punctuation">)</span>

    <span class="token keyword">return</span> averager


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    avg <span class="token operator">=</span> make_averager<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>avg<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>avg<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>avg<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># \u8F93\u51FA\u7ED3\u679C</span>
<span class="token number">10.0</span>
<span class="token number">10.5</span>
<span class="token number">11.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F1A\u53D1\u73B0\u6BCF\u6B21\u8C03\u7528 <code>avg()</code> \u51FD\u6570\uFF0C\u90FD\u4F1A\u5C06\u4E0A\u4E00\u6B21\u8C03\u7528\u7684\u503C\u5B58\u50A8\u8D77\u6765\uFF0C\u5982\u4F55\u505A\u5230\u7684\uFF1F</p><ul><li><p>\u9996\u5148 <code>series</code> \u662F <code>make_averager()</code> \u7684\u5C40\u90E8\u53D8\u91CF\uFF0C\u6309\u7406\u8BF4 <code>make_averager()</code> \u8FD4\u56DE\u540E<strong>\u5C40\u90E8\u53D8\u91CF\u53CA\u4F5C\u7528\u57DF\u5E94\u8BE5\u88AB\u9500\u6BC1\u624D\u5BF9</strong>\uFF0C\u4F46\u5176\u5B9E\u4E0D\u7136</p><ul><li>\u6B64\u65F6 <code>series</code> \u662F\u4E2A <strong>\u81EA\u7531\u53D8\u91CF</strong>\uFF08<em>free variable</em>\uFF09\uFF1A\u6307\u5728\u672C\u5730\u4F5C\u7528\u57DF\u4E2D\u7ED1\u5B9A\u7684\u53D8\u91CF</li><li>\u6B64\u65F6\u4E0D\u4F1A\u89E6\u53D1\u5783\u573E\u56DE\u6536</li></ul><img src="`+d+`"></li><li><p>\u5728\u51FD\u6570\u5185\u90E8\uFF0C<strong>\u5BF9\u5916\u90E8\u4F5C\u7528\u57DF</strong>\uFF08<em>\u4F46\u4E0D\u662F\u5168\u5C40\u4F5C\u7528\u57DF</em>\uFF09\u7684\u53D8\u91CF\uFF0C\u8FDB\u884C <strong>\u5F15\u7528</strong> \u7684\uFF0C\u5C31\u662F\u95ED\u5305</p></li></ul><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u5BA1\u67E5 <code>make_averager()</code> \u521B\u5EFA\u7684\u51FD\u6570\uFF0C \u4F7F\u7528 <code>__code__</code> \uFF08<em>\u7F16\u8BD1\u540E\u7684\u51FD\u6570\u5B9A\u4E49\u4F53</em>\uFF09</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>avg<span class="token punctuation">.</span>__code__<span class="token punctuation">.</span>co_varnames<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>avg<span class="token punctuation">.</span>__code__<span class="token punctuation">.</span>co_freevars<span class="token punctuation">)</span>

<span class="token comment"># (&#39;new_value&#39;, &#39;total&#39;)</span>
<span class="token comment"># (&#39;series&#39;,)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>series</code> \u7684\u7ED1\u5B9A\uFF0C\u5728\u8FD4\u56DE\u7684 <code>avg</code> \u51FD\u6570\u7684 <code>__closure__</code> \u5C5E\u6027\u4E2D\uFF0C\u5404\u5143\u7D20\u5BF9\u5E94\u4E8E <code>avg.__code__.co_freevars</code> \u4E2D\u7684\u4E00\u4E2A\u540D\u79F0\uFF0C\u8FD9\u4E9B\u5143\u7D20\u662F <strong>cell</strong> \u5BF9\u8C61\uFF0C\u6709 <code>cell_contents</code> \u5C5E\u6027\u4FDD\u5B58\u771F\u6B63\u7684\u503C</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>avg<span class="token punctuation">.</span>__closure__<span class="token punctuation">)</span>
<span class="token comment"># (&lt;cell at 0x000001B3A5EBBFD0: list object at 0x000001B3A5B84D80&gt;,)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>avg<span class="token punctuation">.</span>__closure__<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cell_contents<span class="token punctuation">)</span>
<span class="token comment"># [10, 11, 12]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EFC\u4E0A\uFF0C\u95ED\u5305\u662F\u79CD\u51FD\u6570\uFF0C\u4F1A\u4FDD\u7559\u5B9A\u4E49\u51FD\u6570\u65F6\uFF0C\u5B58\u5728\u7684\u81EA\u7531\u53D8\u91CF\u7684\u7ED1\u5B9A\uFF0C\u867D\u7136\u4F5C\u7528\u57DF\u4E0D\u53EF\u7528\uFF0C\u4F46 <strong>\u7ED1\u5B9A\u4F9D\u7136\u53EF\u7528</strong></p></div><div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F</p><p>\u5927\u91CF\u4F7F\u7528\u95ED\u5305\u662F\u5F88\u6709\u98CE\u9669\u7684\u64CD\u4F5C\uFF0C\u5C24\u5176\u5B9A\u4E49\u7684\u8FD8\u662F <strong>\u53EF\u53D8\u7C7B\u578B\u7684\u5C40\u90E8\u53D8\u91CF</strong>\uFF0C\u8FD9\u5E38\u5BFC\u81F4 <strong>\u5185\u5B58\u6CC4\u9732\uFF01</strong></p></div><h3 id="_1-5-\u7ED3\u5408-nonlocal-\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#_1-5-\u7ED3\u5408-nonlocal-\u58F0\u660E" aria-hidden="true">#</a> 1.5 \u7ED3\u5408 nonlocal \u58F0\u660E</h3><p>\u4E0A\u6587\u5DF2\u7ECF\u9020\u6210\u4E86\u5185\u5B58\u6CC4\u9732\uFF0C\u6B64\u65F6\u4E3A\u4E86\u4F18\u5316\uFF0C\u66F4\u597D\u601D\u8DEF\u5982\u4E0B</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">make_averager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    count <span class="token operator">=</span> <span class="token number">0</span>
    total <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token keyword">def</span> <span class="token function">averager</span><span class="token punctuation">(</span>new_value<span class="token punctuation">)</span><span class="token punctuation">:</span>
        count <span class="token operator">+=</span> <span class="token number">1</span>
        total <span class="token operator">+=</span> new_value
        <span class="token keyword">return</span> total <span class="token operator">/</span> count

    <span class="token keyword">return</span> averager

<span class="token comment">## \u8F93\u51FA\u7ED3\u679C</span>
<span class="token comment"># count += 1</span>
<span class="token comment"># UnboundLocalError: local variable &#39;count&#39; referenced before assignment</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6B64\u65F6\u53D1\u73B0\uFF0C\u89E3\u91CA\u5668\u62A5\u9519\uFF0C\u5C40\u90E8\u53D8\u91CF <code>count</code> \u672A\u5B9A\u4E49\u524D\u5F15\u7528</li><li>\u8FD9\u662F\u7531\u4E8E <code>count += 1</code> \u672C\u8D28\u662F <code>count = count + 1</code> \u89E3\u91CA\u5668\u5148\u6267\u884C\u53F3\u8FB9\uFF0C\u518D\u672A\u58F0\u660E <code>count</code> \u524D\u5C31\u8FDB\u884C\u4E86 <code>+1</code> \u64CD\u4F5C</li><li>\u8FD9\u65F6\u4F1A\u6709\u7591\u95EE\uFF0C\u4E3A\u5565\u4E0A\u6587 <code>series</code> \u4E0D\u4F1A\u62A5\u9519 <strong>?</strong><ul><li>\u662F\u56E0\u4E3A <code>count</code> \u662F\u4E0D\u53EF\u53D8\u5BF9\u8C61\uFF0C\u4E0D\u80FD\u8FDB\u884C\u589E\u5220\u6539\u64CD\u4F5C\uFF0C\u53EA\u53EF\u8BFB</li><li><code>series</code> \u4E5F\u6CA1\u6709\u8FDB\u884C\u8D4B\u503C\u524D\u5F15\u7528\u64CD\u4F5C\uFF0C\u800C\u662F\u8C03\u7528\u4E86 <code>.append()</code> \u8FDB\u884C\u4E86\u589E\u52A0\u64CD\u4F5C\uFF0C\u6B64\u65F6\u4E0D\u4F1A\u5F71\u54CD\u53D8\u91CF\u672C\u8EAB\u7684\u5730\u5740</li></ul></li></ul>`,20),_=a(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">make_averager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    count <span class="token operator">=</span> <span class="token number">0</span>
    total <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token keyword">def</span> <span class="token function">averager</span><span class="token punctuation">(</span>new_value<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">nonlocal</span> count<span class="token punctuation">,</span> total
        count <span class="token operator">+=</span> <span class="token number">1</span>
        total <span class="token operator">+=</span> new_value
        <span class="token keyword">return</span> total <span class="token operator">/</span> count

    <span class="token keyword">return</span> averager


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    avg <span class="token operator">=</span> make_averager<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>avg<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>avg<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>avg<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">## \u8F93\u51FA\u7ED3\u679C</span>
<span class="token number">10.0</span>
<span class="token number">10.5</span>
<span class="token number">11.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6 <strong>\u5185\u5B58\u540C\u6837\u6CC4\u9732</strong>\uFF0C\u4F46\u6CC4\u9732\u7684\u8D77\u7801\u6BD4 <strong>list</strong> \uFF08<em>\u5217\u8868</em>\uFF09\u5C11\u592A\u591A\uFF0C\u7A0D\u5FAE\u53D8\u5F97 <strong>\u76F8\u5BF9\u53EF\u63A7</strong></p><h2 id="_2-\u5B9E\u73B0\u88C5\u9970\u5668" tabindex="-1"><a class="header-anchor" href="#_2-\u5B9E\u73B0\u88C5\u9970\u5668" aria-hidden="true">#</a> 2. \u5B9E\u73B0\u88C5\u9970\u5668</h2><h3 id="_2-1-\u7406\u5FF5" tabindex="-1"><a class="header-anchor" href="#_2-1-\u7406\u5FF5" aria-hidden="true">#</a> 2.1 \u7406\u5FF5</h3><p><span style="color:orange;"><strong>\u88C5\u9970\u5668:</strong></span> \u533A\u522B\u4E8E\u300A\u8BBE\u8BA1\u6A21\u5F0F\u300B\u4E2D\u7684\u88C5\u9970\u5668\u6A21\u5F0F\uFF0C\u4F46\u5176\u63CF\u8FF0\u7684\uFF1A\u201C\u52A8\u6001\u7684\u7ED9\u4E00\u4E2A\u5BF9\u8C61\u6DFB\u52A0\u4E00\u4E9B\u989D\u5916\u7684\u804C\u8D23\u201D \u7684\u7406\u5FF5\u662F\u4E00\u81F4\u7684\uFF0C\u4F46\u5728\u5B9E\u73B0\u5C42\u9762\uFF0C\u4E0E\u88C5\u9970\u5668\u6A21\u5F0F\uFF0C\u6BEB\u65E0\u5173\u7CFB\u3002\u5B83\u7B26\u5408 <strong>\u5F00\u653E\u5C01\u95ED</strong> \u53CA <strong>AOP</strong></p><ul><li><p><strong>\u5F00\u653E\u5C01\u95ED\u539F\u5219\uFF1A</strong> \u4E0D\u4FEE\u6539\u5185\u90E8\u51FD\u6570\u7684\u60C5\u51B5\u4E0B\uFF0C\u589E\u52A0\u65B0\u529F\u80FD\uFF0C\u7C7B\u4F3C\u8865\u4E01\u4E00\u6837</p></li><li><p><strong>AOP\uFF08<em>\u9762\u5411\u5207\u9762\u5F0F\u7F16\u7A0B</em>\uFF09\uFF1A</strong> \u5373\u6A2A\u5411\u63D2\u5165\u4E00\u6BB5\u903B\u8F91\uFF0C\u53EF\u4EE5\u51CF\u5C11\u5927\u91CF\u91CD\u590D\u4EE3\u7801</p><ul><li>\u5E38\u7528\u573A\u666F\uFF1A\u63D2\u5165\u65E5\u5FD7\u3001\u6027\u80FD\u6D4B\u8BD5\u3001\u4E8B\u52A1\u5904\u7406\u7B49</li></ul></li></ul><h3 id="_2-2-\u7B80\u5355\u88C5\u9970\u5668" tabindex="-1"><a class="header-anchor" href="#_2-2-\u7B80\u5355\u88C5\u9970\u5668" aria-hidden="true">#</a> 2.2 \u7B80\u5355\u88C5\u9970\u5668</h3><p>\u5B9E\u73B0\u4E00\u4E2A\u7B80\u5355\u88C5\u9970\u5668\uFF1A\u88AB\u88C5\u9970\u7684\u51FD\u6570\u53EF\u4EE5\u6BCF\u6B21\u8C03\u7528\u540E\uFF0C\u5C06\u82B1\u8D39\u7684 <strong>\u65F6\u95F4</strong>\u3001<strong>\u4F20\u53C2</strong>\u3001<strong>\u7ED3\u679C</strong> \u90FD\u6253\u5370\u51FA\u6765</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> time


<span class="token keyword">def</span> <span class="token function">clock</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">clocked</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
        start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>perf_counter<span class="token punctuation">(</span><span class="token punctuation">)</span>
        ret <span class="token operator">=</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span>	<span class="token comment"># \u95ED\u5305</span>
        end_time <span class="token operator">=</span> time<span class="token punctuation">.</span>perf_counter<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start_time
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[</span><span class="token interpolation"><span class="token punctuation">{</span>end_time<span class="token punctuation">:</span><span class="token format-spec">.8f</span><span class="token punctuation">}</span></span><span class="token string">\u03BCs], </span><span class="token interpolation"><span class="token punctuation">{</span>func<span class="token punctuation">.</span>__name__<span class="token punctuation">}</span></span><span class="token string">(</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">}</span></span><span class="token string">) -&gt; </span><span class="token interpolation"><span class="token punctuation">{</span>ret<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> ret

    <span class="token keyword">return</span> clocked


<span class="token decorator annotation punctuation">@clock</span>
<span class="token keyword">def</span> <span class="token function">snooze</span><span class="token punctuation">(</span>seconds<span class="token punctuation">)</span><span class="token punctuation">:</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>seconds<span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@clock</span>
<span class="token keyword">def</span> <span class="token function">factorial</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token number">1</span> <span class="token keyword">if</span> n <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token keyword">else</span> n <span class="token operator">*</span> factorial<span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    snooze<span class="token punctuation">(</span><span class="token number">.123</span><span class="token punctuation">)</span>
    factorial<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>factorial<span class="token punctuation">.</span>__name__<span class="token punctuation">)</span>

<span class="token comment">## \u8F93\u51FA\u7ED3\u679C</span>
<span class="token punctuation">[</span><span class="token number">0.11668170</span>\u03BCs<span class="token punctuation">]</span><span class="token punctuation">,</span> snooze<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0.123</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
<span class="token punctuation">[</span><span class="token number">0.00000230</span>\u03BCs<span class="token punctuation">]</span><span class="token punctuation">,</span> factorial<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">1</span>
<span class="token punctuation">[</span><span class="token number">0.00008320</span>\u03BCs<span class="token punctuation">]</span><span class="token punctuation">,</span> factorial<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">2</span>
<span class="token punctuation">[</span><span class="token number">0.00013500</span>\u03BCs<span class="token punctuation">]</span><span class="token punctuation">,</span> factorial<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">6</span>
<span class="token punctuation">[</span><span class="token number">0.00018600</span>\u03BCs<span class="token punctuation">]</span><span class="token punctuation">,</span> factorial<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">24</span>
<span class="token punctuation">[</span><span class="token number">0.00022760</span>\u03BCs<span class="token punctuation">]</span><span class="token punctuation">,</span> factorial<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">120</span>
<span class="token punctuation">[</span><span class="token number">0.00028440</span>\u03BCs<span class="token punctuation">]</span><span class="token punctuation">,</span> factorial<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">720</span>
clocked
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u67E5\u770B<code>__name__</code> \u5C5E\u6027\uFF0C\u4F1A\u53D1\u73B0\u8F93\u51FA <code>clocked</code>\uFF0C\u8FD9\u662F\u7531\u4E8E\u88AB\u88C5\u9970\u540E <code>factorial</code> \u4FDD\u5B58\u4E86 <code>clocked</code> \u51FD\u6570\u7684\u5F15\u7528</p></li><li><p>\u88C5\u9970\u5668\u7684\u5178\u578B\u884C\u4E3A\u5C31\u662F <strong>\u628A\u88AB\u88C5\u9970\u7684\u51FD\u6570\u66FF\u6362\u6210\u65B0\u51FD\u6570</strong>\uFF0C\u4E14\u4E8C\u8005\u63A5\u6536\u5230\u4E86\u76F8\u540C\u7684\u53C2\u6570\uFF0C\u518D\u505A\u4E9B\u989D\u5916\u64CD\u4F5C\uFF0C\u5E76\u8FD4\u56DE <mark>\u52A0\u5DE5|\u672A\u52A0\u5DE5</mark> \u7684\u503C</p></li></ul><p>\u5982\u4E0A\u5B58\u5728\u8BB8\u591A\u7F3A\u70B9\uFF0C\u6545\u9700\u8981\u6539\u5199</p><ol><li>\u5C5E\u6027 <code>__name__</code> \u4E0D\u662F\u60F3\u8981\u7684\u503C</li><li>\u4E0D\u652F\u6301\u5173\u952E\u5B57\u53C2\u6570</li><li>\u5176\u5B9E\u8FD8\u906E\u76D6\u4E86 <code>__doc__</code> \u5C5E\u6027</li></ol><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> time
<span class="token keyword">import</span> functools


<span class="token keyword">def</span> <span class="token function">clock</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token decorator annotation punctuation">@functools<span class="token punctuation">.</span>wraps</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">clocked</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>perf_counter<span class="token punctuation">(</span><span class="token punctuation">)</span>
        ret <span class="token operator">=</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
        end_time <span class="token operator">=</span> time<span class="token punctuation">.</span>perf_counter<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start_time
        arg_lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> args<span class="token punctuation">:</span>
            arg_lst<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">repr</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span> <span class="token keyword">for</span> arg <span class="token keyword">in</span> args<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> kwargs<span class="token punctuation">:</span>
            pairs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>k<span class="token punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token punctuation">{</span>v<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span> <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>kwargs<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
            arg_lst<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&quot;, &quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>pairs<span class="token punctuation">)</span><span class="token punctuation">)</span>
        arg_str <span class="token operator">=</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>arg_lst<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[</span><span class="token interpolation"><span class="token punctuation">{</span>end_time<span class="token punctuation">:</span><span class="token format-spec">.8f</span><span class="token punctuation">}</span></span><span class="token string">\u03BCs], </span><span class="token interpolation"><span class="token punctuation">{</span>func<span class="token punctuation">.</span>__name__<span class="token punctuation">}</span></span><span class="token string">(</span><span class="token interpolation"><span class="token punctuation">{</span>arg_str<span class="token punctuation">}</span></span><span class="token string">) -&gt; </span><span class="token interpolation"><span class="token punctuation">{</span>ret<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> ret

    <span class="token keyword">return</span> clocked
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),f=n("code",null,"@functools.wraps(func)",-1),y=n("code",null,"__name__",-1),h=n("code",null,"__doc__",-1),w=a(`<h3 id="_2-3-\u6807\u51C6\u5E93\u4E2D\u7684\u88C5\u9970\u5668" tabindex="-1"><a class="header-anchor" href="#_2-3-\u6807\u51C6\u5E93\u4E2D\u7684\u88C5\u9970\u5668" aria-hidden="true">#</a> 2.3 \u6807\u51C6\u5E93\u4E2D\u7684\u88C5\u9970\u5668</h3><p><strong>Python</strong> \u5185\u7F6E\u4E86\u4E09\u4E2A\u7528\u4E8E\u88C5\u9970\u5668\u65B9\u6CD5\u7684\u51FD\u6570\uFF0C<code>property</code>\u3001<code>classmethod</code> \u548C <code>staticmethod</code>\uFF0C \u90FD\u662F\u548C\u9762\u5411\u5BF9\u8C61\u76F8\u5173\uFF0C\u5176\u4ED6\u8FD8\u6709 <code>lru_cache</code> \u505A\u8F7B\u91CF\u7F13\u5B58\u52A0\u901F\u3001<code>singledispatch</code> \u505A\u5355\u5206\u6D3E\u6CDB\u51FD\u6570\u7B49</p><h3 id="_2-4-\u53E0\u653E\u88C5\u9970\u5668" tabindex="-1"><a class="header-anchor" href="#_2-4-\u53E0\u653E\u88C5\u9970\u5668" aria-hidden="true">#</a> 2.4 \u53E0\u653E\u88C5\u9970\u5668</h3><p>\u88C5\u9970\u5668\u53EF\u4EE5\u53E0\u653E\uFF0C\u5982\u4E0B</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token decorator annotation punctuation">@d1</span>
<span class="token decorator annotation punctuation">@d2</span>
<span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u8FD9\u79CD\u5C06 <code>@d1</code> \u548C <code>@d2</code> \u4E24\u4E2A\u88C5\u9970\u5668\u987A\u5E8F\u53E0\u653E\u5230\u51FD\u6570 <code>f()</code> \u4E0A\uFF0C\u7B49\u540C\u4E8E\u5982\u4E0B</li></ul><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">pass</span>

f <span class="token operator">=</span> d1<span class="token punctuation">(</span>d2<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u987A\u5E8F\u662F <strong>\u7531\u5916\u5C42\u5411\u5185\u5C42</strong> \u987A\u5E8F\u6267\u884C</p><h3 id="_2-5-\u53C2\u6570\u5316\u88C5\u9970\u5668" tabindex="-1"><a class="header-anchor" href="#_2-5-\u53C2\u6570\u5316\u88C5\u9970\u5668" aria-hidden="true">#</a> 2.5 \u53C2\u6570\u5316\u88C5\u9970\u5668</h3><p>\u88C5\u9970\u5668\u53EF\u4EE5\u63A5\u6536\u88AB\u88C5\u9970\u7684\u51FD\u6570\u548C\u4ED6\u7684\u53C2\u6570\uFF0C\u90A3\u4E48\u5982\u4F55\u8BA9\u88C5\u9970\u5668\u81EA\u8EAB\u6765\u63A5\u6536\u989D\u5916\u7684\u53C2\u6570\u5462\uFF1F\u7B54\u6848\u662F\u521B\u5EFA\u4E00\u4E2A <strong>\u88C5\u9970\u5668\u5DE5\u5382\u51FD\u6570</strong>\uFF0C\u8FD9\u4E2A\u5DE5\u5382\u7684\u76EE\u7684\u662F\uFF0C\u4E00\u8C03\u7528\u8FD9\u4E2A\u5DE5\u5382\u5C31\u80FD <strong>\u8FD4\u56DE</strong> \u4E00\u4E2A\u771F\u6B63\u7684 <strong>\u88C5\u9970\u5668</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>registry <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">register</span><span class="token punctuation">(</span>active<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">decorate</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;running register </span><span class="token interpolation"><span class="token punctuation">{</span>active<span class="token punctuation">}</span></span><span class="token string"> -&gt; decorate(</span><span class="token interpolation"><span class="token punctuation">{</span>func<span class="token punctuation">}</span></span><span class="token string">)&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> active<span class="token punctuation">:</span>
            registry<span class="token punctuation">.</span>add<span class="token punctuation">(</span>func<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            registry<span class="token punctuation">.</span>discard<span class="token punctuation">(</span>func<span class="token punctuation">)</span>
        <span class="token keyword">return</span> func

    <span class="token keyword">return</span> decorate


<span class="token decorator annotation punctuation">@register</span><span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;running f1()&quot;</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@register</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;running f2()&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">f3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;running f3()&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;running main()&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;registry -&gt; </span><span class="token interpolation"><span class="token punctuation">{</span>registry<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u88C5\u9970 <code>fx()</code> \u7684 <strong>\u53E5\u6CD5</strong> \u7B49\u540C\u4E8E\uFF1A <code>f1 = register(active=False)(f)</code></p></div><p>\u53C2\u6570\u5316\u4E14\u4E07\u80FD\u53C2\u6570\u7684\u88C5\u9970\u5DE5\u5382</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> functools

DEFAULT_FMT <span class="token operator">=</span> <span class="token string">&quot;[{elapsed:.8f}s] {name} ({_args}) -&gt; {result}&quot;</span>


<span class="token keyword">def</span> <span class="token function">clock</span><span class="token punctuation">(</span>fmt<span class="token operator">=</span>DEFAULT_FMT<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">decorate</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token decorator annotation punctuation">@functools<span class="token punctuation">.</span>wraps</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span>
        <span class="token keyword">def</span> <span class="token function">clocked</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
            start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
            name <span class="token operator">=</span> func<span class="token punctuation">.</span>__name__
            _args <span class="token operator">=</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> args<span class="token punctuation">)</span>
            _kwargs <span class="token operator">=</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot; </span><span class="token interpolation"><span class="token punctuation">{</span>k<span class="token punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token punctuation">{</span>v<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span> <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> kwargs<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            result <span class="token operator">=</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
            elapsed <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start_time
            <span class="token keyword">print</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token operator">**</span><span class="token builtin">locals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> result

        <span class="token keyword">return</span> clocked

    <span class="token keyword">return</span> decorate


CUSTOM_FMT <span class="token operator">=</span> <span class="token string">&quot;[{elapsed:.3f}s] {name}({_args},{_kwargs}): -&gt; {result}&quot;</span>


<span class="token decorator annotation punctuation">@clock</span><span class="token punctuation">(</span>CUSTOM_FMT<span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">snooze</span><span class="token punctuation">(</span>seconds<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>seconds<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;sleep: </span><span class="token interpolation"><span class="token punctuation">{</span>seconds<span class="token punctuation">}</span></span><span class="token string">s </span><span class="token interpolation"><span class="token punctuation">{</span>a <span class="token operator">+</span> b<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    ret <span class="token operator">=</span> snooze<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>ret<span class="token punctuation">,</span> snooze<span class="token punctuation">.</span>__name__<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        snooze<span class="token punctuation">(</span><span class="token number">.123</span><span class="token punctuation">,</span> a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">=</span>i<span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),q={class:"custom-container tip"},x=n("p",{class:"custom-container-title"},"\u63D0\u793A",-1),E=n("p",null,[s("\u88C5\u9970\u5DE5\u5382\u53E5\u6CD5\uFF1A"),n("code",null,"snooze(1, a=1, b=2) = clock(fmt=DEFAULT_FMT)(snooze)(*args, **kwargs)")],-1),B=n("p",null,[s("\u88C5\u9970\u5668\u6700\u597D\u901A\u8FC7\u5B9E\u73B0 "),n("strong",null,"__call__"),s(" \u65B9\u6CD5\u7684\u7C7B\u5B9E\u73B0\uFF0C\u4F7F\u7528\u51FD\u6570\u7684\u8BED\u8A00\u7279\u6027\u66F4\u5BB9\u6613\u7406\u89E3")],-1),C={href:"https://github.com/GrahamDumpleton/wrapt/blob/develop/blog/01-how-you-implemented-your-python-decorator-is-wrong.md",target:"_blank",rel:"noopener noreferrer"},A=a(`<h2 id="_3-\u7C7B\u88C5\u9970\u5668" tabindex="-1"><a class="header-anchor" href="#_3-\u7C7B\u88C5\u9970\u5668" aria-hidden="true">#</a> 3. \u7C7B\u88C5\u9970\u5668</h2><p>\u6839\u636E <strong>\u7C7B\u7684\u7279\u6027</strong> \u5C01\u88C5\u7684\u88C5\u9970\u5668</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> time


<span class="token keyword">class</span> <span class="token class-name">Clock</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>fmt <span class="token operator">=</span> kwargs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;fmt&quot;</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> func<span class="token punctuation">)</span><span class="token punctuation">:</span>

        <span class="token keyword">def</span> <span class="token function">inner</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
            start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
            name <span class="token operator">=</span> func<span class="token punctuation">.</span>__name__
            _args <span class="token operator">=</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> args<span class="token punctuation">)</span>
            _kwargs <span class="token operator">=</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot; </span><span class="token interpolation"><span class="token punctuation">{</span>k<span class="token punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token punctuation">{</span>v<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span> <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> kwargs<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            result <span class="token operator">=</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
            elapsed <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start_time
            <span class="token keyword">if</span> self<span class="token punctuation">.</span>fmt<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>fmt<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token operator">**</span><span class="token builtin">locals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> result

        <span class="token keyword">return</span> inner


CUSTOM_FMT <span class="token operator">=</span> <span class="token string">&quot;[{elapsed:.3f}s] {name}({_args},{_kwargs}): -&gt; {result}&quot;</span>


<span class="token decorator annotation punctuation">@Clock</span><span class="token punctuation">(</span>fmt<span class="token operator">=</span>CUSTOM_FMT<span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">foo</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b


foo<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u7C7B\u5B9E\u4F8B\u5316\u4E3A <code>Clock</code> \u5BF9\u8C61\u65F6\uFF0C\u5373 <code>Clock()</code> \u4F1A\u89E6\u53D1\u7C7B\u7684 <strong>__init__()</strong> \u548C <strong>__call__()</strong> \u6B64\u65F6\u610F\u5473\u7740\u88C5\u9970\u5668\u5DF2\u8C03\u7528\uFF0C\u53E5\u6CD5\u4E3A <code>foo(1, b=2) = Clock(fmt)(foo)(1, b=2)</code></p><ul><li>\u5176\u4E2D <strong>__init__()</strong> \uFF0C\u4F1A\u5B9E\u4F8B\u5316\u88C5\u9970\u5668\u7684\u53C2\u6570</li><li><strong>__call__()</strong> \uFF0C\u4F1A\u8C03\u7528\u88AB\u88C5\u9970\u7684 <code>foo()</code></li></ul><h2 id="_4-\u5F02\u6B65\u88C5\u9970\u5668" tabindex="-1"><a class="header-anchor" href="#_4-\u5F02\u6B65\u88C5\u9970\u5668" aria-hidden="true">#</a> 4. \u5F02\u6B65\u88C5\u9970\u5668</h2><p>\u4E00\u4E2A <strong>xmlrpc</strong> \u7684\u4F8B\u5B50\uFF0C\u5982\u4F55\u901A\u8FC7\u88C5\u9970\u5668\uFF0C\u5B9E\u73B0\u5C06\u540C\u6B65\u7684\u5BA2\u6237\u7AEF\u8BF7\u6C42\u6539\u4E3A\u5F02\u6B65\uFF0C\u907F\u514D\u963B\u585E</p><p><strong>server\u7AEF\uFF1A</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> datetime
<span class="token keyword">import</span> sys
<span class="token keyword">from</span> xmlrpc<span class="token punctuation">.</span>server <span class="token keyword">import</span> SimpleXMLRPCServer


<span class="token keyword">class</span> <span class="token class-name">ExampleService</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">getData</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;42&#39;</span>

    <span class="token keyword">class</span> <span class="token class-name">currentTime</span><span class="token punctuation">:</span>
        <span class="token decorator annotation punctuation">@staticmethod</span>
        <span class="token keyword">def</span> <span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>

    <span class="token keyword">with</span> SimpleXMLRPCServer<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token number">9000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> server<span class="token punctuation">:</span>
        server<span class="token punctuation">.</span>register_instance<span class="token punctuation">(</span>ExampleService<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> allow_dotted_names<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        server<span class="token punctuation">.</span>register_multicall_functions<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Serving XML-RPC on localhost port 8000&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;It is advisable to run this example server within a secure, closed network.&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            server<span class="token punctuation">.</span>serve_forever<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> KeyboardInterrupt<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\nKeyboard interrupt received, exiting.&quot;</span><span class="token punctuation">)</span>
            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>client\u7AEF\uFF1A</strong> \u901A\u8FC7\u88C5\u9970\u5668\u6539\u4E3A\u5F02\u6B65</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">from</span> functools <span class="token keyword">import</span> wraps
<span class="token keyword">from</span> xmlrpc <span class="token keyword">import</span> client


<span class="token keyword">def</span> <span class="token function">async_executor</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token decorator annotation punctuation">@wraps</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span>
    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">inner</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">await</span> loop<span class="token punctuation">.</span>run_in_executor<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> func<span class="token punctuation">,</span> self<span class="token punctuation">)</span>

    <span class="token keyword">return</span> inner


<span class="token keyword">class</span> <span class="token class-name">RpcProxy</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> host<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> port<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">9000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>proxy <span class="token operator">=</span> client<span class="token punctuation">.</span>ServerProxy<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;http://</span><span class="token interpolation"><span class="token punctuation">{</span>host<span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span>port<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># noqa</span>


<span class="token keyword">class</span> <span class="token class-name">ClientRpc</span><span class="token punctuation">(</span>RpcProxy<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> host<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> port<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">9000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>ClientRpc<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">)</span>

    <span class="token decorator annotation punctuation">@async_executor</span>
    <span class="token keyword">def</span> <span class="token function">get_server_time</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># \u82E5\u6B64\u5904\u52A0\u4E0Aasync \u4E0A\u6587method</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot; \u540C\u6B65\u6539\u5F02\u6B65 &quot;&quot;&quot;</span>
        result <span class="token operator">=</span> self<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>currentTime<span class="token punctuation">.</span>getCurrentTime<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;server time: </span><span class="token interpolation"><span class="token punctuation">{</span>result<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> result


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># ClientRpc().get_server_time()</span>
        asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>ClientRpc<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get_server_time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;running main()&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u5982\u4E0A\uFF0C\u901A\u8FC7\u88C5\u9970\u5668\uFF0C\u5C06\u540C\u6B65\u51FD\u6570\u5305\u88C5\uFF0C\u6539\u5199\u4E3A\u5F02\u6B65\u5F62\u5F0F</p></div>`,12);function F(T,D){const p=o("RouterLink"),c=o("ExternalLinkIcon");return l(),u("div",null,[v,m,r(" more "),b,n("p",null,[s("\u8BF4\u95ED\u5305\u524D\u5148\u770B\u4E00\u4E2A "),t(p,{to:"/python/%E8%AF%AD%E8%A8%80/%E8%BF%9B%E9%98%B6/%E5%87%BD%E6%95%B0.html#_4-%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F"},{default:e(()=>[s("\u4F5C\u7528\u57DF")]),_:1}),s(" \u7684\u6817\u5B50")]),g,n("p",null,[s("\u6545\u53EF\u4EE5\u914D\u5408 "),t(p,{to:"/python/%E8%AF%AD%E8%A8%80/%E8%BF%9B%E9%98%B6/%E5%87%BD%E6%95%B0.html#_4-3-%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4"},{default:e(()=>[s("nonlocal")]),_:1}),s(" \u6765\u6539\u5199\uFF0C\u4F7F\u5176\u4E0D\u7528\u5217\u8868\u5F62\u5F0F\uFF0C\u4FDD\u5B58\u6240\u6709\u7684\u5386\u53F2\u503C")]),_,n("ul",null,[n("li",null,[f,s(" \u8BE6\u89C1 "),t(p,{to:"/python/%E5%BA%93/%E6%A0%87%E5%87%86%E5%BA%93%E8%BF%9B%E9%98%B6/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B.html#_1-functools"},{default:e(()=>[s("\u6807\u51C6\u5E93")]),_:1}),s("\uFF0C\u7528\u6765\u8FD8\u539F\u88AB\u88C5\u9970\u5668\u8986\u76D6\u7684 "),y,s(" \u548C "),h,s(" \u7B49\u5C5E\u6027")])]),w,n("div",q,[x,E,B,n("p",null,[n("a",C,[s("\u53C2\u8003"),t(c)])])]),A])}const S=i(k,[["render",F],["__file","\u88C5\u9970\u5668.html.vue"]]);export{S as default};
