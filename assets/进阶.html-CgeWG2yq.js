import{_ as t}from"./plugin-vueexport-helper-DlAUqK2U.js";import{c as a,d as r,o as n}from"./app-DM342j-t.js";const d={};function o(c,e){return n(),a("div",null,e[0]||(e[0]=[r('<h1 id="etcd-进阶" tabindex="-1"><a class="header-anchor" href="#etcd-进阶"><span>etcd 进阶</span></a></h1><h3 id="_1-etcd-的请求是如何执行的" tabindex="-1"><a class="header-anchor" href="#_1-etcd-的请求是如何执行的"><span>1. etcd 的请求是如何执行的？</span></a></h3><h4 id="_1-1-读请求" tabindex="-1"><a class="header-anchor" href="#_1-1-读请求"><span>1.1 读请求</span></a></h4><p>client -&gt; api -&gt; KVServer 拦截器 -&gt; read index -&gt; read status （一致性返回状态机） -&gt; MVCC (b tree 内存（key -&gt; restore ）{2（）, 0 (版本号)} + boltdb b+tree burket 页 （二分 value 磁盘 IO）) -&gt; 返回客户端</p><h4 id="_1-2-写请求" tabindex="-1"><a class="header-anchor" href="#_1-2-写请求"><span>1.2 写请求</span></a></h4><hr><h3 id="_2-如何实现高可用、数据强一致性" tabindex="-1"><a class="header-anchor" href="#_2-如何实现高可用、数据强一致性"><span>2. 如何实现高可用、数据强一致性？</span></a></h3>',7)]))}const p=t(d,[["render",o]]),h=JSON.parse('{"path":"/database/etcd/%E8%BF%9B%E9%98%B6.html","title":"etcd 进阶","lang":"zh-CN","frontmatter":{"description":"etcd 进阶 1. etcd 的请求是如何执行的？ 1.1 读请求 client -> api -> KVServer 拦截器 -> read index -> read status （一致性返回状态机） -> MVCC (b tree 内存（key -> restore ）{2（）, 0 (版本号)} + boltdb b+tree burket...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"etcd 进阶\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-10-12T14:58:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"悦·宝宝\\",\\"url\\":\\"https://github.com/Igarashi-G\\"}]}"],["meta",{"property":"og:url","content":"https://igarashi-g.github.io/database/etcd/%E8%BF%9B%E9%98%B6.html"}],["meta",{"property":"og:site_name","content":"悦 ▪ 宝宝"}],["meta",{"property":"og:title","content":"etcd 进阶"}],["meta",{"property":"og:description","content":"etcd 进阶 1. etcd 的请求是如何执行的？ 1.1 读请求 client -> api -> KVServer 拦截器 -> read index -> read status （一致性返回状态机） -> MVCC (b tree 内存（key -> restore ）{2（）, 0 (版本号)} + boltdb b+tree burket..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-10-12T14:58:07.000Z"}],["meta",{"property":"article:modified_time","content":"2022-10-12T14:58:07.000Z"}]]},"git":{"createdTime":1665586687000,"updatedTime":1665586687000,"contributors":[{"name":"Igarashi","username":"Igarashi","email":"2545369032@qq.com","commits":1,"url":"https://github.com/Igarashi"}]},"readingTime":{"minutes":0.27,"words":82},"filePathRelative":"database/etcd/进阶.md","excerpt":"\\n<h3>1. etcd 的请求是如何执行的？</h3>\\n<h4>1.1 读请求</h4>\\n<p>client -&gt; api -&gt; KVServer 拦截器 -&gt; read index -&gt; read status （一致性返回状态机） -&gt; MVCC (b tree 内存（key -&gt; restore ）{2（）, 0 (版本号)} + boltdb b+tree burket 页 （二分 value 磁盘 IO）) -&gt; 返回客户端</p>\\n<h4>1.2 写请求</h4>\\n<hr>\\n<h3>2. 如何实现高可用、数据强一致性？</h3>\\n","autoDesc":true}');export{p as comp,h as data};
