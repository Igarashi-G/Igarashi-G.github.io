import{_ as i}from"./plugin-vueexport-helper.2444895f.js";import{o as r,c as u,e as d,a as n,b as s,d as a,w as e,f as o,r as c}from"./app.218c68a8.js";const k="/assets/\u591A\u8FDB\u7A0B\u5403\u6EE1CPU.106ea9af.png",m={},g=n("p",null,[n("strong",null,"Python"),s(" \u57FA\u4E8E\u8FDB\u7A0B\u7684\u5E76\u884C\u8BA1\u7B97")],-1),v=n("p",null,[n("strong",null,"multiprocessing"),s("\uFF1A\u662F\u4E00\u4E2A\u4E0E "),n("a",{href:"/back_end/python/base/%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B#%E5%9F%BA%E4%BA%8E%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%B9%B6%E5%8F%91"},"threading"),s(" \u6A21\u5757\u7C7B\u4F3C\u7684\u5305\uFF0C\u80FD\u63D0\u4F9B\u672C\u5730\u548C\u8FDC\u7A0B\u7684 "),n("a",{href:"/back_end/python/base/%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/%E8%BF%9B%E7%A8%8B#12-%E5%B9%B6%E5%8F%91"},"\u5E76\u53D1"),s(" \u64CD\u4F5C\uFF08\u82E5\u591A\u6838\u90A3\u4E48\u5C31\u662F "),n("a",{href:"/back_end/python/base/%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/%E8%BF%9B%E7%A8%8B#11-%E5%B9%B6%E8%A1%8C"},"\u5E76\u884C"),s(" \u64CD\u4F5C\uFF09\u3002\u5B83\u5229\u7528\u5B50\u8FDB\u7A0B\u6765\u7ED5\u8FC7\u4E86 "),n("a",{href:"/back_end/python/base/%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B#%E5%9F%BA%E4%BA%8E%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%B9%B6%E5%8F%91"},"GIL \u9501"),s(" \uFF0C\u9002\u7528\u4E8E Unix \u548C Windows \u7CFB\u7EDF\u7684 "),n("strong",null,"CPU"),s("(\u8BA1\u7B97)\u5BC6\u96C6\u578B\u64CD\u4F5C\uFF08\u4E14\u901A\u5E38\u4E0D\u4F9D\u8D56\u4E0A\u6B21\u8BA1\u7B97\u7ED3\u679C\uFF09")],-1),h={id:"_1-\u591A\u8FDB\u7A0B-multiprocessing",tabindex:"-1"},_=n("a",{class:"header-anchor",href:"#_1-\u591A\u8FDB\u7A0B-multiprocessing","aria-hidden":"true"},"#",-1),b={href:"https://docs.python.org/zh-cn/3/library/multiprocessing.html?highlight=basemanager#module-multiprocessing",target:"_blank",rel:"noopener noreferrer"},y=o('<h3 id="_1-1-\u4E3B\u8981\u529F\u80FD\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#_1-1-\u4E3B\u8981\u529F\u80FD\u4ECB\u7ECD" aria-hidden="true">#</a> 1.1 \u4E3B\u8981\u529F\u80FD\u4ECB\u7ECD</h3><ul><li>\u4E3B\u8981\u7528\u4E8E\u521B\u5EFA <strong>\u5B50\u8FDB\u7A0B</strong> \u5BF9\u8C61\uFF0C<code>Process</code>\u7C7B\uFF0C\u7136\u540E start \u542F\u52A8</li><li>\u8FDB\u7A0B\u901A\u4FE1\uFF0C\u652F\u6301 <code>Queue</code>\u7C7B \u961F\u5217\u548C <code>Pipe</code> \u7C7B\u7BA1\u9053\u901A\u4FE1</li><li>\u5171\u4EAB\u6570\u636E\uFF0C\u5728\u5E76\u53D1\u7F16\u7A0B\u65F6\u901A\u5E38 <strong>\u5C3D\u91CF\u907F\u514D\u5171\u4EAB\u72B6\u6001</strong>\uFF0C\u82E5\u9700\u8981\uFF0C\u53EF\u4F7F\u7528\u5171\u4EAB\u5185\u5B58 <code>Value </code> \u6216 <code>Array</code> \u5C06\u6570\u636E\u5B58\u5728\u5171\u4EAB\u5185\u5B58\u7684\u6620\u5C04\u4E2D\u3002</li><li>\u8FDB\u7A0B\u540C\u6B65\uFF0C<code>Lock</code> \u7C7B\u5B9E\u73B0\u8FDB\u7A0B\u7684\u540C\u6B65\uFF0C\u907F\u514D\u540C\u65F6\u62A2\u5360\u540C\u4E00\u8D44\u6E90</li><li>\u8FDB\u7A0B\u6C60\uFF0C<code>Pool</code> \u7C7B\u521B\u5EFA\u8FDB\u7A0B\u6C60</li><li>\u7BA1\u7406\u5668\uFF0C\u5206\u5E03\u5F0F\u8BA1\u7B97\uFF0C\u901A\u8FC7 <code>managers</code> \u5B9E\u73B0\u5206\u5E03\u5F0F\u7684\u8FDB\u7A0B\u8BA1\u7B97\u548C\u901A\u4FE1</li><li>\u76D1\u542C\u5668\uFF0C\u901A\u8FC7 <code>Listener</code> \u76D1\u542C\u7BA1\u9053\u6765\u4EA4\u4E92</li></ul>',2),f={class:"custom-container tip"},P=n("p",{class:"custom-container-title"},"\u63D0\u793A",-1),w=n("code",null,"multiprocessing",-1),E={href:"https://docs.python.org/zh-cn/3/library/multiprocessing.html?highlight=basemanager#multiprocessing-programming",target:"_blank",rel:"noopener noreferrer"},x=o('<h4 id="\u90E8\u5206\u6458\u8981" tabindex="-1"><a class="header-anchor" href="#\u90E8\u5206\u6458\u8981" aria-hidden="true">#</a> <strong>\u90E8\u5206\u6458\u8981</strong>\uFF1A</h4><ul><li><p><code>multiprocessing</code> \u6709\u8FDB\u7A0B\u95F4\u901A\u4FE1 <strong>IPC</strong> (\u5982\uFF1A<code>Pipe</code> \u548C <code>Queue</code>) \u56E0\u6B64\u4F18\u5148\u8003\u8651\u4F7F\u7528\u5B83\u4EEC\uFF0C\u6548\u7387\u4F1A\u9AD8\u4E9B</p></li><li><p>\u907F\u514D\u4F7F\u7528 <code>Lock/Event/Semaphore/Condition</code> \u7B49\u540C\u6B65\u65B9\u5F0F\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u5360\u636E\u4E86 <strong>\u975E\u7528\u6237\u8FDB\u7A0B\u7684</strong> \u8D44\u6E90\uFF0C\u591A\u8FDB\u7A0B\u5E94\u8BE5\u907F\u514D\u5171\u4EAB\u8D44\u6E90</p><blockquote><p>\u591A\u7EBF\u7A0B\u4E2D\uFF0C\u4EE5\u4E0A\u65B9\u5F0F\u5171\u4EAB\u8D44\u6E90\u5F88\u5BB9\u6613\uFF0C\u6BD4\u5982\u4F7F\u7528 <strong>\u5168\u5C40\u53D8\u91CF</strong> \u6216 <strong>\u4F20\u9012\u53C2\u6570</strong>\uFF0C\u4F46\u591A\u8FDB\u7A0B\u7531\u4E8E\u6BCF\u4E2A\u8FDB\u7A0B\u90FD\u6709\u81EA\u5DF1\u72EC\u7ACB\u7684\u5185\u5B58\u7A7A\u95F4\uFF0C\u4EE5\u4E0A\u65B9\u6CD5\u5E76\u4E0D\u5408\u9002</p></blockquote></li><li><p>\u82E5\u5FC5\u987B\u5171\u4EAB\uFF0C\u53EF\u901A\u8FC7 <strong>\u5171\u4EAB\u5185\u5B58</strong> \u548C <code>Manager</code> \u65B9\u6CD5\u6765\u5171\u4EAB\u8D44\u6E90\uFF0C\u4F46\u6B64\u65F6\u7A0B\u5E8F\u590D\u6742\u5EA6\u5927\u5927\u63D0\u9AD8\uFF0C\u4E14\u56E0\u540C\u6B65\u800C\u964D\u4F4E\u4E86\u8BA1\u7B97\u6548\u7387</p></li></ul><h3 id="_1-2-process-\u7C7B" tabindex="-1"><a class="header-anchor" href="#_1-2-process-\u7C7B" aria-hidden="true">#</a> 1.2 Process \u7C7B</h3>',3),q=n("code",null,"Process",-1),B=o(`<blockquote><p>\u8FDB\u7A0B\u5BF9\u8C61\u8868\u793A\u5728\u5355\u72EC\u8FDB\u7A0B\u4E2D\u8FD0\u884C\u7684\u6D3B\u52A8</p></blockquote><ul><li>\u53C2\u6570\uFF1A <ul><li><code>group: None</code>\uFF1A\u5E94\u8BE5\u59CB\u7EC8\u4E3A None</li><li><code>target</code>\uFF1A\u662F\u7531 <code>run()</code> \u65B9\u6CD5\u8C03\u7528\u7684\u53EF\u8C03\u7528\u5BF9\u8C61</li><li><code>args|kwargs</code>\uFF1A\u5B50\u8FDB\u7A0B\u6240\u9700\u53C2\u6570</li><li><code>daemon</code>\uFF1A\u5C06\u8FDB\u7A0B\u6807\u5FD7\u8BBE\u7F6E\u4E3A <code>True</code> \u6216\u662F <code>False</code> \uFF0C\u82E5\u4E3A None\uFF08\u9ED8\u8BA4\u503C\uFF09\u5219\u8BE5\u6807\u5FD7\u5C06\u4ECE\u521B\u5EFA\u7684</li></ul></li></ul><p><code>Process</code> \u548C <code>threading.Thread</code> API \u5927\u81F4\u76F8\u540C\uFF0C\u4E5F\u6709\u4E24\u79CD\u521B\u5EFA\u65B9\u5F0F\uFF1A</p><p>1.\u4E3B\u8FDB\u7A0B\u901A\u8FC7\u5B9E\u4F8B\u5316 <code>Process</code> \u5BF9\u8C61\u6765\u521B\u5EFA\uFF0C\u5E76\u6267\u884C\u5B50\u8FDB\u7A0B <code>foo()</code></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">from</span> multiprocessing <span class="token keyword">import</span> Process


<span class="token keyword">def</span> <span class="token function">foo</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;pid: </span><span class="token interpolation"><span class="token punctuation">{</span>os<span class="token punctuation">.</span>getpid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> - num: </span><span class="token interpolation"><span class="token punctuation">{</span>num<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    process <span class="token operator">=</span> Process<span class="token punctuation">(</span>target<span class="token operator">=</span>foo<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    process<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
    process<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;module name: </span><span class="token interpolation"><span class="token punctuation">{</span>__name__<span class="token punctuation">}</span></span><span class="token string"> - pid: </span><span class="token interpolation"><span class="token punctuation">{</span>os<span class="token punctuation">.</span>getpid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C</span>
<span class="token comment"># pid: 34284 - num: 1</span>
<span class="token comment"># module name: __main__ - pid: 26144</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>\u6CE8</strong>\uFF1A\u4E3A\u5565\u5728 <code>Windows</code> \u4E2D\u5FC5\u987B\u8981\u4F7F\u7528 <code>if __name__ == &#39;__main__&#39;: </code> ?</p><ol><li><p><code>if __name__ == &#39;__main__&#39;:</code> \u8868\u793A\u53EA\u6709\u5F53\u524D\u8FD0\u884C\u7684 <code>.py</code>\u6587\u4EF6\uFF0C \u5B83\u7684 <code>__name__</code> \u624D\u4E3A<code>__main__</code> \u82E5\u4E0D\u662F\u5F53\u524D\u8FD0\u884C\u7684 <code>.py</code> \u6587\u4EF6\u5219\u4E0D\u4E3A <code>__main__</code> \u8FD9\u4E2A\u5B57\u6BB5</p></li><li><p><code>Unix</code> \u7CFB\u7EDF\u4E2D\u6709 <code>fork()</code> \u8FD9\u4E2A\u7CFB\u7EDF\u8C03\u7528\u6765\u521B\u5EFA\u8FDB\u7A0B\uFF0C\u82E5\u666E\u901A\u51FD\u6570\u8C03\u7528\uFF0C\u8C03\u4E00\u6B21\uFF0C\u8FD4\u56DE\u4E00\u6B21\u3002\u4F46 <code>fork()</code> \u5219\u662F\u8C03\u7528\u4E00\u6B21\uFF0C\u8FD4\u56DE\u4E24\u6B21\uFF0C\u8FD9\u662F\u56E0\u4E3A\u64CD\u4F5C\u7CFB\u7EDF\u81EA\u52A8\u628A\u5F53\u524D\u8FDB\u7A0B\uFF08\u7236\u8FDB\u7A0B\uFF09\u590D\u5236\u4E86\u4E00\u4EFD\uFF08\u79F0\u4E3A\u5B50\u8FDB\u7A0B\uFF09\uFF0C\u7136\u540E\u7236\u5B50\u5206\u522B\u8FD4\u56DE\u4E86\u4E00\u6B21</p></li><li><p><code>Windows</code> \u7CFB\u7EDF\u4E2D\u6CA1\u6709 <code>fork()</code> \uFF0C\u6240\u4EE5\u6682\u4E14\u7406\u89E3\u4E3A <code>python</code> \u7684\u591A\u8FDB\u7A0B\u5728<code>Windows</code>\u4E2D\u76F8\u5F53\u4E0E\u590D\u5236\u4E86\u4E00\u4E2A\u4E00\u6574\u5957\u7684\u4E0A\u4E0B\u6587\u73AF\u5883\uFF08<code>.py</code> \u6587\u4EF6\uFF09\u4E3A\u4E86\u907F\u514D\u590D\u5236\u7684 <code>.py</code> \u6587\u4EF6\u518D\u6B21\u8BFB\u5230\u5168\u5C40\u7684 <code>Process</code> \u6765\u91CD\u590D\u521B\u5EFA\u5B50\u8FDB\u7A0B\uFF08\u5426\u5219\u9012\u5F52\uFF0C\u65E0\u9650\u521B\u5EFA\u76F4\u5230\u53D1\u751F <strong>RuntimeError</strong> \u5F02\u5E38\uFF09\u56E0\u6B64\u8981\u901A\u8FC7 <code>if __name__ == &#39;__main__&#39;:</code> \u6765\u533A\u5206\u5230\u8C01\u662F\u4E3B\u8FDB\u7A0B\uFF0C\u53EA\u6709\u4E3B\u8FDB\u7A0B\u624D\u80FD\u521B\u5EFA\uFF0C\u8FD9\u6837\u624D\u80FD\u6709\u6548\u8D77\u5230\u4FDD\u62A4\u4F5C\u7528</p></li></ol></blockquote><p>2.\u901A\u8FC7\u7EE7\u627F <code>Process</code> \u7C7B\u6765\u521B\u5EFA\uFF0C\u5E76\u590D\u5199\u548C\u6267\u884C <code>run()</code> \u65B9\u6CD5</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">import</span> time

<span class="token keyword">from</span> multiprocessing <span class="token keyword">import</span> Process


<span class="token keyword">class</span> <span class="token class-name">NextProcess</span><span class="token punctuation">(</span>Process<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> pro_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>NextProcess<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>pro_name <span class="token operator">=</span> pro_name

    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
        total <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">for</span> num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100000000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            total <span class="token operator">+=</span> num
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Process ID: </span><span class="token interpolation"><span class="token punctuation">{</span>os<span class="token punctuation">.</span>getpid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> - Name: </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>pro_name<span class="token punctuation">}</span></span><span class="token string"> - total: </span><span class="token interpolation"><span class="token punctuation">{</span>total<span class="token punctuation">}</span></span><span class="token string"> - time: </span><span class="token interpolation"><span class="token punctuation">{</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start_time<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
    next_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        p <span class="token operator">=</span> NextProcess<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
        next_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>p<span class="token punctuation">)</span>
        p<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># print(&quot;\u5B50\u8FDB\u7A0B\u6B63\u5728\u6267\u884C\u4E2D...&quot;)</span>
    <span class="token comment">#</span>
    <span class="token comment"># for next_pro in next_list:</span>
    <span class="token comment">#     next_pro.join()</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Main Process Over Time: </span><span class="token interpolation"><span class="token punctuation">{</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C\uFF1A</span>
<span class="token comment"># Main Process Over Time: 0.041664838790893555</span>
<span class="token comment"># Process ID: 30308 - Name: 5 - total: 4999999950000000 - time: 12.864246606826782</span>
<span class="token comment"># Process ID: 36596 - Name: 1 - total: 4999999950000000 - time: 12.899959325790405</span>
<span class="token comment"># Process ID: 29976 - Name: 6 - total: 4999999950000000 - time: 12.89797592163086</span>
<span class="token comment"># Process ID: 32604 - Name: 2 - total: 4999999950000000 - time: 12.918310642242432</span>
<span class="token comment"># Process ID: 27108 - Name: 4 - total: 4999999950000000 - time: 13.050273895263672</span>
<span class="token comment"># Process ID: 36772 - Name: 7 - total: 4999999950000000 - time: 13.054712533950806</span>
<span class="token comment"># Process ID: 35380 - Name: 0 - total: 4999999950000000 - time: 13.098359823226929</span>
<span class="token comment"># Process ID: 9352 - Name: 3 - total: 4999999950000000 - time: 13.09786581993103</span>

<span class="token comment">### \u82E5\u53BB\u9664.join()\u76F8\u5173\u90E8\u5206\u6CE8\u91CA\uFF0C\u8BA9\u4E3B\u8FDB\u7A0B\u7B49\u5F85\u5B50\u8FDB\u7A0B\u6267\u884C\uFF0C\u5219\u4E3B\u8FDB\u7A0B\u7ED3\u679C\u5982\u4E0B\uFF1A</span>
<span class="token comment"># \u5B50\u8FDB\u7A0B\u6B63\u5728\u6267\u884C\u4E2D...</span>
<span class="token comment"># Process ID: 28740 - Name: 0 - total: 4999999950000000 - time: 12.804229497909546</span>
<span class="token comment"># ...</span>
<span class="token comment"># Process ID: 35624 - Name: 2 - total: 4999999950000000 - time: 13.160359382629395</span>
<span class="token comment"># Main Process Over Time: 13.237204313278198</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u82E5\u4E0D\u4F7F\u7528 <code>.join()</code> \u65B9\u6CD5\uFF0C\u4E3B\u8FDB\u7A0B\u5219\u4E0D\u4F1A\u963B\u585E\uFF0C\u6B64\u65F6\u591A\u4E2A\u5B50\u8FDB\u7A0B\u5F02\u6B65\u6267\u884C</p></li><li><p>\u82E5\u4F7F\u7528<code>.join()</code> \u65B9\u6CD5\uFF0C\u9700\u8981\u6CE8\u610F\u907F\u514D\u4E00\u4E2A <code>for</code> \u5FAA\u73AF\u4E2D\u6BCF\u4E2A\u5B50\u8FDB\u7A0B\u4F9D\u6B21\u963B\u585E\uFF0C\u5E94\u53E6\u8D77\u5FAA\u73AF\u6279\u91CF <code>join</code> \u5373\u53EF\u5B9E\u73B0\u4E3B\u8FDB\u7A0B\u963B\u585E\u4E0B\u7684\u5B50\u8FDB\u7A0B\u5E76\u884C</p></li><li><p>\u4EE5 <strong>CPU</strong> <strong>i7-7700HQ</strong> <code>4\u6838\u5FC38\u7EBF\u7A0B</code> \u4E3A\u4F8B\uFF0C\u5F00\u542F 8 \u4E2A\u5B50\u8FDB\u7A0B<strong>\u5E76\u884C</strong>\uFF0C\u505A 1 \u4EBF\u6570\u5B57\u76F8\u52A0\u6765\u8DD1\u6EE1\u6838\u5FC3\uFF0C\u6267\u884C\u8FC7\u7A0B\u56FE\u793A\u5982\u4E0B\uFF1A</p><img src="`+k+'"><blockquote><p>\u6B64\u65F6<strong>CPU \u5360\u7528 100%</strong>\uFF0C<strong>8 \u7EBF\u7A0B\u8DD1\u6EE1\u63A5\u8FD1\u6781\u9650 3.5GHz \u777F\u9891</strong>\uFF0C\u4EE5\u4E0A\u624D\u662F\u901A\u8FC7\u591A\u8FDB\u7A0B\uFF0C\u771F\u6B63\u5145\u5206\u5229\u7528 CPU \u7684\u591A\u6838\u6027\u80FD <strong>\u8FDB\u884C\u8BA1\u7B97\u5BC6\u96C6\u578B\u4EFB\u52A1</strong></p></blockquote></li></ul><h3 id="\u4E0A\u4E0B\u6587\u548C\u542F\u52A8\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4E0A\u4E0B\u6587\u548C\u542F\u52A8\u65B9\u6CD5" aria-hidden="true">#</a> \u4E0A\u4E0B\u6587\u548C\u542F\u52A8\u65B9\u6CD5\uFF1A</h3><p>\u6839\u636E\u4E0D\u540C\u7684\u5E73\u53F0\uFF0C<code>multiprocessing</code> \u652F\u6301\u4E09\u79CD\u542F\u52A8\u8FDB\u7A0B\u7684\u65B9\u6CD5\uFF1A</p>',11),N=n("strong",null,"spawn",-1),A=n("ul",null,[n("li",null,[s("\u7236\u8FDB\u7A0B\u542F\u52A8\u4E00\u4E2A\u5168\u65B0\u7684 "),n("code",null,"python"),s(" \u89E3\u91CA\u5668\u8FDB\u7A0B\uFF0C\u5B50\u8FDB\u7A0B\u53EA\u7EE7\u627F\u90A3\u4E9B\u8FD0\u884C\u8FDB\u7A0B\u5BF9\u8C61\u7684 "),n("code",null,"run()"),s(" \u65B9\u6CD5\u6240\u5FC5\u987B\u7684\u8D44\u6E90\u3002")]),n("li",null,[s("\u6765\u81EA\u7236\u8FDB\u7A0B\u7684\u975E\u5FC5\u987B\u6587\u4EF6\u63CF\u8FF0\u7B26\u9ED1\u53E5\u67C4\u5C06\u4E0D\u4F1A\u88AB\u7EE7\u627F\u3002\u4F7F\u7528\u6B64\u65B9\u6CD5\u542F\u52A8\u8FDB\u7A0B\u76F8\u6BD4 "),n("code",null,"fork"),s(" \u6216 "),n("code",null,"forkserver"),s(" \u8981\u6162\u4E0A\u8BB8\u591A")])],-1),I=n("strong",null,"fork",-1),T=n("ul",null,[n("li",null,[s("\u7236\u8FDB\u7A0B\u4F7F\u7528 "),n("code",null,"os.fork()"),s(" \u6765\u4EA7\u751F "),n("code",null,"Python"),s(" \u89E3\u91CA\u5668\u5206\u53C9\u3002\u5B50\u8FDB\u7A0B\u521D\u59CB\u5316\u8D44\u6E90\u548C\u7EE7\u627F\u4E8E\u7236\u8FDB\u7A0B\uFF0C\u548C\u7236\u8FDB\u7A0B\u4E00\u6837\u3002")]),n("li",null,"\u6CE8\u610F\uFF1A\u5B89\u5168\u5206\u53C9\u591A\u7EBF\u7A0B\u8FDB\u7A0B\uFF1F")],-1),z=n("strong",null,"forkserver",-1),F=n("ul",null,[n("li",null,"\u8BE5\u65B9\u5F0F\u4F1A\u542F\u52A8\u670D\u52A1\u5668\u8FDB\u7A0B\uFF0C\u6BCF\u6B21\u8981\u521B\u5EFA\u8FDB\u7A0B\u65F6\uFF0C\u7236\u8FDB\u7A0B\u90FD\u4F1A\u8FDE\u63A5\u5230\u670D\u52A1\u5668\u53BB\u8BF7\u6C42\u5B83\u6765\u521B\u5EFA\u4E00\u4E2A\u65B0\u8FDB\u7A0B"),n("li",null,[s("\u8FD9\u79CD\u65B9\u5F0F\u8C8C\u4F3C\u662F "),n("strong",null,"OS \u7EBF\u7A0B\u7EA7\u522B"),s(" \u7684\u8FDB\u7A0B\uFF0C\u56E0\u6B64\u4F7F\u7528 "),n("code",null,"os.fork()"),s(" \u662F\u5B89\u5168\u7684\uFF0C\u4E5F\u6CA1\u6709\u4E0D\u5FC5\u8981\u7684\u8D44\u6E90\u88AB\u7EE7\u627F")])],-1),U=n("p",null,"\u6CE8\u610F\uFF1A",-1),S=n("li",null,[n("code",null,"spawn"),s(" \u5728 "),n("code",null,"macOS"),s(" \u4E0A\u53EF\u80FD\u5BFC\u81F4 "),n("code",null,"subprocess"),s(" \u5D29\u6E83\uFF0C\u56E0\u6B64\u4E0D\u5B89\u5168")],-1),D=n("code",null,"Unix",-1),C=n("code",null,"spawn",-1),L=n("code",null,"forkserver",-1),O=n("strong",null,"\u8D44\u6E90\u8FFD\u8E2A",-1),j=n("strong",null,"\u5F53\u524D\u8FDB\u7A0B\u4EA7\u751F\u4E14\u4E0D\u7528",-1),M={href:"https://docs.python.org/zh-cn/3/library/multiprocessing.shared_memory.html#multiprocessing.shared_memory.SharedMemory",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"SharedMemory",-1),W=n("strong",null,"\u5185\u5B58\u6CC4\u9732",-1),G=n("li",null,[n("code",null,"spawn"),s(" \u6216 "),n("code",null,"forkserver"),s(" \u6709\u8BF8\u591A\u9650\u5236\uFF0C\u8BF7\u53C2\u8003\u6587\u6863")],-1),Q=o('<p>\u8981\u9009\u62E9\u542F\u52A8\u65B9\u6CD5\uFF0C\u5E94\u8BE5\u5728 <code>if __name__ == &#39;__main__&#39;</code> \u4E2D\u8C03\u7528 <code>set_start_method(&#39;method&#39;)</code> \u6765\u6307\u5B9A\uFF0C\u4EC5\u6307\u5B9A\u4E00\u6B21</p><h2 id="_2-\u591A\u8FDB\u7A0B\u901A\u8BAF-\u961F\u5217\u548C\u7BA1\u9053" tabindex="-1"><a class="header-anchor" href="#_2-\u591A\u8FDB\u7A0B\u901A\u8BAF-\u961F\u5217\u548C\u7BA1\u9053" aria-hidden="true">#</a> 2. \u591A\u8FDB\u7A0B\u901A\u8BAF\uFF1A\u961F\u5217\u548C\u7BA1\u9053</h2><p>\u8FDB\u7A0B\u5F7C\u6B64\u95F4\u7684\u8D44\u6E90\u662F\u4E0D\u5171\u4EAB\u7684\uFF0C\u4E0A\u4E0B\u6587\u76F8\u4E92\u9694\u79BB\u3002\u56E0\u6B64\u5B9E\u73B0\u8FDB\u7A0B\u95F4\u901A\u4FE1\uFF0C\u961F\u5217\u548C\u7BA1\u9053\u8FD9\u4E24\u79CD\u65B9\u5F0F\u53EF\u4EE5\u4F20\u9012\u6D88\u606F\u3002</p><p><strong>class multiprocessing.Queue([maxsize])</strong></p><blockquote><p>\u4E0E\u6807\u51C6\u5E93\u4E2D\u7684 <a href="">queue.Queue</a> \u6A21\u5757\u7C7B\u4F3C\uFF0C\u5B9E\u73B0\u591A\u751F\u4EA7\u8005\uFF0C\u591A\u6D88\u8D39\u8005\u961F\u5217\u3002\u8FD4\u56DE\u4E86 <strong>\u4E00\u4E2A\u7BA1\u9053</strong> \u3001 <strong>\u5C11\u91CF\u9501</strong> \u548C <strong>\u4FE1\u53F7\u91CF</strong> \u6784\u6210\u7684\u5171\u4EAB\u961F\u5217\u7684\u5B9E\u4F8B\u3002</p><p>\u5F53\u4E00\u4E2A\u8FDB\u7A0B\u5C06\u4E00\u4E2A\u5BF9\u8C61\u653E\u8FDB\u961F\u5217\u4E2D\u65F6\uFF0C\u4E00\u4E2A\u5199\u5165\u7EBF\u7A0B\u4F1A\u542F\u52A8\uFF0C\u5E76\u5C06\u5BF9\u8C61\u4ECE\u7F13\u51B2\u533A\u5199\u5165\u7BA1\u9053\u4E2D\u53BB</p></blockquote><ul><li>\u53C2\u6570\uFF1A <ul><li><code>maxsize\uFF1Aint = -1</code>\uFF1A\u961F\u5217\u4E2D\u5141\u8BB8\u7684\u6700\u5927\u6570\u91CF\uFF0C\u82E5\u5C0F\u4E8E\u7B49\u4E8E\u96F6\u5219\u5927\u5C0F\u4E3A\u65E0\u9650</li></ul></li></ul><h2 id="_3-subprocess" tabindex="-1"><a class="header-anchor" href="#_3-subprocess" aria-hidden="true">#</a> 3. subprocess</h2>',7),R={href:"https://docs.python.org/zh-cn/3/library/subprocess.html#module-subprocess",target:"_blank",rel:"noopener noreferrer"},X=n("code",null,"subprocess",-1),H=n("strong",null,"WebAssembly",-1),J=o(`<div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u7528\u4E8E\u66FF\u4EE3\u8001\u65E7\u6A21\u5757 \u5982</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>os<span class="token punctuation">.</span>systm
os<span class="token punctuation">.</span>spawn<span class="token operator">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-1-\u5173\u4E8E-os-system-os-popen-\u548C-subprocess-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#_3-1-\u5173\u4E8E-os-system-os-popen-\u548C-subprocess-\u7684\u533A\u522B" aria-hidden="true">#</a> 3.1 <strong>\u5173\u4E8E os.system os.popen \u548C subprocess \u7684\u533A\u522B</strong></h3><p><strong>os.system()</strong></p><p>\u8FD4\u56DE\u547D\u4EE4\u6267\u884C\u7ED3\u679C\u7684\u8FD4\u56DE\u503C\uFF0C\u6709\u5982\u4E0B\u4E09\u6B65\u64CD\u4F5C</p><ol><li><strong>fork</strong> \u4E00\u4E2A\u5B50\u8FDB\u7A0B</li><li>\u5B50\u8FDB\u7A0B\u4E2D\u8C03\u7528 <strong>exec</strong> \u51FD\u6570\u6267\u884C\u547D\u4EE4</li><li>\u7236\u8FDB\u7A0B\u4E2D\u8C03\u7528 <strong>wait</strong> \u963B\u585E\u7B49\u5F85\u5B50\u8FDB\u7A0B\u7ED3\u679C</li></ol><p><strong>os.popen()</strong></p><p>\u5B83\u5148\u521B\u5EFA\u4E86\u4E00\u4E2A\u7BA1\u9053\uFF0C\u7136\u540E <strong>fork</strong>\u4E00\u4E2A\u5B50\u8FDB\u7A0B\uFF0C\u5B50\u8FDB\u7A0B\u6267\u884C\u547D\u4EE4\uFF0C\u4F46\u8FD4\u56DE\u503C\u5728\u6807\u51C6 <strong>IO</strong> \u6D41\u4E2D\uFF0C\u8BE5\u7BA1\u9053\u7528\u4E8E\u7236\u5B50\u8FDB\u7A0B\u95F4\u901A\u4FE1</p><p>\u7236\u8FDB\u7A0B\u8981\u4E48\u4ECE\u7BA1\u9053\u8BFB\u4FE1\u606F\uFF0C\u8981\u4E48\u5411\u7BA1\u9053\u5199\u4FE1\u606F\uFF0C\u81F3\u4E8E\u662F\u8BFB\u8FD8\u662F\u5199\u53D6\u51B3\u4E8E\u7236\u8FDB\u7A0B\u8C03\u7528 <strong>popen</strong> \u65F6\u4F20\u9012\u7684\u53C2\u6570\uFF08<em><strong>w</strong> \u6216 <strong>r</strong></em> \uFF09</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> os

p <span class="token operator">=</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">&quot;exec command&quot;</span><span class="token punctuation">)</span>
s <span class="token operator">=</span> p<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
p<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="_3-2-popen" tabindex="-1"><a class="header-anchor" href="#_3-2-popen" aria-hidden="true">#</a> 3.2 Popen</h3>`,2),Z=n("code",null,"run()",-1),$=n("strong",null,"arg",-1),K={href:"https://docs.python.org/zh-cn/3/library/subprocess.html#subprocess.CompletedProcess",target:"_blank",rel:"noopener noreferrer"},Y=n("code",null,"CompletedProcess",-1),nn={href:"https://docs.python.org/zh-cn/3/library/subprocess.html#subprocess.Popen",target:"_blank",rel:"noopener noreferrer"},sn=o(`<p><code>class subprocess.Popen(args, bufsize=-1, executable=None, stdin=None, stdout=None, stderr=None, preexec_fn=None, close_fds=True, shell=False, cwd=None, env=None, universal_newlines=None, startupinfo=None, creationflags=0, restore_signals=True, start_new_session=False, pass_fds=(), *, group=None, extra_groups=None, user=None, umask=- 1, encoding=None, errors=None, text=None, pipesize=-1, process_group=None)</code></p><p>\u5728\u4E00\u4E2A\u65B0\u7684\u8FDB\u7A0B\uFF0C\u6267\u884C\u5B50\u7A0B\u5E8F</p><ul><li><strong>args\uFF1A</strong> \u53C2\u6570\u5E8F\u5217\u3001\u5B57\u7B26\u4E32\uFF08<em>\u5FC5\u987B <code>shell=True</code></em> \uFF09\uFF0C<strong>\u63A8\u8350\u5E8F\u5217\u5F62\u5F0F</strong>\uFF0C\u82E5\u5B57\u7B26\u4E32\uFF0C\u5219\u88AB\u4F5C\u4E3A\u5C06 <strong>\u88AB\u6267\u884C\u7684\u7A0B\u5E8F\u7684\u547D\u540D</strong> \u6216 <strong>\u8DEF\u5F84</strong> \u89E3\u91CA</li><li><strong>shell\uFF1A</strong> \u5728 <strong>POSIX</strong>\uFF0C\u5F53 <code>shell=True</code>\uFF0C <strong>shell</strong> \u9ED8\u8BA4\u4E3A <code>/bin/sh</code> \uFF0C\u82E5 <strong>args</strong> \u662F\u5B57\u7B26\u4E32\uFF0C\u5219\u5C06\u901A\u8FC7 <strong>shell</strong> \u6267\u884C</li></ul><div class="custom-container danger"><p class="custom-container-title">Shell \u6CE8\u5165\u6F0F\u6D1E</p><p>\u5173\u4E8E\u4E3A\u5565\u4E0D\u63A8\u8350 <strong>shell=True</strong> \u4EE5\u53CA <strong>subprocess</strong> \u66FF\u4EE3 <strong>os</strong> \u6A21\u5757\uFF0C\u662F\u7531\u4E8E <strong>shell \u6CE8\u5165\u6F0F\u6D1E</strong></p><p>\u9488\u5BF9 <strong>popen</strong> \u5176\u5B9E\u73B0\u662F\u4E0D\u4F1A\u9690\u5F0F\u8C03\u7528\u7CFB\u7EDF <strong>shell</strong> \u7684\uFF08<em>\u4E0D\u7528 <code>/bin/sh</code> \u89E3\u6790\u547D\u4EE4</em> \uFF09\uFF0C\u5B83\u662F\u53EF\u4EE5\u5C06\u6240\u6709\u5B57\u7B26\uFF08<em>\u5305\u62EC <strong>shell</strong> \u5143\u5B57\u7B26</em> \uFF09\u5B89\u5168\u4F20\u9012\u7ED9\u5B50\u8FDB\u7A0B</p><p>\u4F46\u6307\u5B9A <strong>shell=True</strong> \u65F6\uFF0C\u5219\u662F\u663E\u5F0F\u53D1\u8D77\u8C03\u7528\uFF08<em><strong>\u7B49\u6548 os.system</strong></em> \uFF09\u6B64\u65F6\u9700\u8981 <strong>\u5E94\u7528\u7A0B\u5E8F\u672C\u8EAB</strong> \u6765\u4FDD\u8BC1\u5B57\u7B26\u4E32\u5B89\u5168\u8F6C\u4E49</p><p>\u4E0D\u7136\u653B\u51FB\u8F93\u5165\u7C7B\u4F3C\u5982\u4E0B\u8FD9\u79CD\u5371\u9669\u7684\u547D\u4EE4\uFF0C\u4F1A\u5F15\u53D1\u4E25\u91CD\u4E8B\u6545</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ls</span> -l<span class="token punctuation">;</span><span class="token function">touch</span> <span class="token number">1</span>.txt	<span class="token comment"># ;rm -rf ~ | rm -rf / </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u9632\u6B62\u64CD\u4F5C\u7CFB\u7EDF\u547D\u4EE4\u6CE8\u5165\u6F0F\u6D1E\u7684 <strong>\u6700\u6709\u6548\u65B9\u6CD5\u662F\u6C38\u8FDC\u4E0D\u8981\u4ECE\u5E94\u7528\u5C42\u4EE3\u7801\u4E2D\u8C03\u7528\u64CD\u4F5C\u7CFB\u7EDF\u547D\u4EE4</strong></p><p>\u4F7F\u7528 <strong>shell=True</strong> \u663E\u793A\u8C03\u7528\uFF0C\u5C3D\u7BA1\u53EF\u4EE5\u65B9\u4FBF\u7684\u76F4\u63A5\u4F7F\u7528 <strong>&quot;|&quot;</strong> \u7BA1\u9053\u7B26\u6216 <strong>\u201D&gt;\u201C</strong>\uFF0C\u5982 <strong>SMB</strong> \u7684\u5F55\u5165\u7528\u6237\u6570\u636E</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>echo -e &quot;12345\\n12345\\n&quot; | pdbedit -t -a zz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>cmd <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;echo -e &#39;</span><span class="token interpolation"><span class="token punctuation">{</span>password<span class="token punctuation">}</span></span><span class="token string">\\n</span><span class="token interpolation"><span class="token punctuation">{</span>password<span class="token punctuation">}</span></span><span class="token string">\\n&#39; | </span><span class="token interpolation"><span class="token punctuation">{</span>PDBEDIT<span class="token punctuation">}</span></span><span class="token string"> -t -a </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
out<span class="token punctuation">,</span> err<span class="token punctuation">,</span> rc <span class="token operator">=</span> <span class="token keyword">await</span> run_command<span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u82E5\u5C06\u5185\u5D4C\u7684\u53C2\u6570 \u5982 <code>{password}\u3001{PDBEDIT}\u3001{name}</code> \u66FF\u6362\u4E3A\u5371\u9669\u7684\u5B57\u7B26\u6307\u4EE4\uFF0C\u5219\u4F1A\u5F15\u53D1\u8DD1\u8DEF\u7684\u540E\u679C\uFF0C\u6240\u4EE5\u5B83\u4E0D\u591F\u5B89\u5168\uFF0C\u4F7F\u7528 <code>stdin=x.stdout</code> \u8F93\u5165\u5219\u80FD\u5B89\u5168\u7684\u89C4\u907F</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">df</span> <span class="token parameter variable">-h</span> <span class="token operator">|</span><span class="token function">grep</span> sda1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u5C06\u7B2C\u4E00\u6761\u6307\u4EE4\u7684\u7BA1\u9053\u8F93\u51FA\u4F5C\u4E3A\u7B2C\u4E8C\u6761\u6307\u4EE4\u7684\u8F93\u5165</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> p1 <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;df&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;-h&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">)</span>
In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> p2 <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;grep&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;sda1&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdin<span class="token operator">=</span>p1<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">)</span>
In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> p1<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> output <span class="token operator">=</span> p2<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> output
Out<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">b&#39;/dev/sda1       259M  119M  122M  50% /boot\\n&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u542F\u52A8 <code>p2</code> \u4E4B\u540E\u518D\u6267\u884C <code>p1.stdout.close()</code> \u8C03\u7528\u5F88\u91CD\u8981\uFF0C\u8FD9\u662F\u4E3A\u4E86\u8BA9 <code>p1</code> \u80FD\u5728 <code>p2</code> \u5148\u4E8E <code>p1</code> \u9000\u51FA\u65F6\u63A5\u6536\u5230 <code>SIGPIPE</code></p></div>`,4),an={class:"custom-container warning"},tn=n("p",{class:"custom-container-title"},"shlex",-1),on=n("p",null,[s("\u82E5\u771F\u7684\u5FC5\u987B\u7528 "),n("strong",null,"shell=True"),s(" \u8C03\u7528\u5B50\u8FDB\u7A0B\uFF0C\u5E76\u4F7F\u7528 "),n("strong",null,"Python"),s(" \u8C03\u7528\u7528\u6237\u8F93\u5165\uFF0C\u8FD8\u6709\u4E00\u79CD\u65B9\u6CD5\u53EF\u4EE5\u5B89\u5168\u5730\u505A\u5230\u8FD9\u4E00\u70B9")],-1),en={href:"https://docs.python.org/zh-cn/3/library/shlex.html",target:"_blank",rel:"noopener noreferrer"},pn=o(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> shlex
<span class="token keyword">import</span> subprocess

subprocess<span class="token punctuation">.</span>call<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;echo </span><span class="token interpolation"><span class="token punctuation">{</span>shlex<span class="token punctuation">.</span>quote<span class="token punctuation">(</span>user_string<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> &gt;&gt; user_string.txt&#39;</span></span><span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),cn=o("<li><p><strong>bufsize\uFF1A</strong> \u7ED9 <strong>open()</strong> \u51FD\u6570\u63D0\u4F9B\u53C2\u6570\u7684\uFF0C\u6B64\u65F6\u4F1A\u521B\u5EFA <strong>stdin/stdout/stderr</strong> \u7BA1\u9053\u6587\u4EF6\u5BF9\u8C61</p><ul><li><strong>0</strong> \u8868\u793A\u4E0D\u4F7F\u7528\u7F13\u51B2\u533A\uFF08<em>\u8BFB\u5199\u662F\u4E00\u4E2A\u7CFB\u7EDF\u8C03\u7528</em> \uFF09\u53EF\u8FD4\u56DE\u77ED\u5185\u5BB9</li><li><strong>1</strong> \u8868\u793A\u4E00\u884C \u7F13\u51B2\uFF08<em>\u4EC5\u5728 <code>text=True</code> \u6216 <code>universal_newlines=True</code> \u4E2D\u80FD\u7528</em>\uFF09</li><li>\u4EFB\u4F55 <strong>\u5176\u4ED6\u6B63\u503C</strong>\uFF0C\u8868\u793A\u4F7F\u7528\u7EA6\u4E3A\u5BF9\u5E94\u5927\u5C0F\u7684\u7F13\u51B2\u533A</li><li>\u8D1F\u503C\uFF08<em>\u9ED8\u8BA4</em>\uFF09\u8868\u793A\u4F7F\u7528\u7CFB\u7EDF\u9ED8\u8BA4\u7684 <code>io.DEFAULT_BUFFER_SIZE</code> \uFF0C\u5373\u9ED8\u8BA4\u542F\u7528\u7CFB\u7EDF\u7F13\u51B2</li></ul></li><li><p><strong>executable\uFF1A</strong> \u6307\u5B9A\u4E00\u4E2A\u8981\u6267\u884C\u7684\u66FF\u6362\u7A0B\u5E8F\uFF0C\u901A\u5E38\u66FF\u6362\u9ED8\u8BA4\u7684 <strong>shell</strong> \u5373 <code>/bin/sh</code></p></li>",2),ln=n("strong",null,"stdin/stdout/stderr\uFF1A",-1),rn=n("strong",null,"\u6807\u51C6\u8F93\u5165\u3001\u6807\u51C6\u8F93\u51FA\u3001\u548C\u6807\u51C6\u9519\u8BEF \u6587\u4EF6\u53E5\u67C4",-1),un={href:"https://docs.python.org/zh-cn/3/library/subprocess.html#subprocess.PIPE",target:"_blank",rel:"noopener noreferrer"},dn=n("code",null,"PIPE",-1),kn={href:"https://docs.python.org/zh-cn/3/library/subprocess.html#subprocess.DEVNULL",target:"_blank",rel:"noopener noreferrer"},mn=n("code",null,"DEVNULL",-1),gn=n("strong",null,"\u6587\u4EF6\u63CF\u8FF0\u7B26",-1),vn=n("em",null,"\u6B63\u6574\u6570",-1),hn={href:"https://docs.python.org/zh-cn/3/glossary.html#term-file-object",target:"_blank",rel:"noopener noreferrer"},_n=n("code",null,"None",-1),bn=n("li",null,[n("strong",null,"PIPE\uFF1A"),s(" \u65B0\u5EFA\u4E00\u4E2A\u8FDE\u63A5\u5B50\u8FDB\u7A0B\u7684\u7BA1\u9053")],-1),yn=n("strong",null,"DEVNULL\uFF1A",-1),fn={href:"https://docs.python.org/zh-cn/3/library/os.html#os.devnull",target:"_blank",rel:"noopener noreferrer"},Pn=n("code",null,"os.devnull",-1),wn=n("li",null,[n("strong",null,"None\uFF1A"),s(" \u5C06\u4E0D\u4F1A\u8FDB\u884C\u4EFB\u4F55\u91CD\u5B9A\u5411\uFF0C\u5B50\u8FDB\u7A0B\u7684\u6587\u4EF6\u6D41\u5C06 "),n("strong",null,"\u7EE7\u627F\u81EA\u7236\u8FDB\u7A0B")],-1),En=n("strong",null,"stderr",-1),xn={href:"https://docs.python.org/zh-cn/3/library/subprocess.html#subprocess.STDOUT",target:"_blank",rel:"noopener noreferrer"},qn=n("code",null,"STDOUT",-1),Bn=n("strong",null,"stderr",-1),Nn=n("strong",null,"stdout",-1),An=n("p",null,[s("\u82E5\u8981\u5728\u7ED3\u679C\u4E2D\u540C\u65F6\u6355\u83B7\u6807\u51C6\u9519\u8BEF\uFF0C\u8BF7\u4F7F\u7528 "),n("code",null,"stderr=subprocess.STDOUT")],-1),In={class:"custom-container tip"},Tn=n("p",{class:"custom-container-title"},"\u63D0\u793A",-1),zn=n("strong",null,"Popen",-1),Fn={href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#with",target:"_blank",rel:"noopener noreferrer"},Un=n("code",null,"with",-1),Sn=o(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">with</span> Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;ifconfig&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span>PIPE<span class="token punctuation">)</span> <span class="token keyword">as</span> proc<span class="token punctuation">:</span>
    log<span class="token punctuation">.</span>write<span class="token punctuation">(</span>proc<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BF7\u6CE8\u610F\uFF0C\u5982\u679C\u60A8\u8981\u505A\u7684\u4E8B\u60C5\u6BD4\u8F83\u590D\u6742\u800C\u53C8\u4E0D\u80FD\u5BB9\u7EB3\u5728\u4E00\u884C\u4E2D\uFF0C\u90A3\u4E48\u5C31\u9700\u8981 <code>devnull</code> \u5728 <code>Popen</code> \u5BF9\u8C61\u7684\u6574\u4E2A\u751F\u547D\u4E2D\u4FDD\u6301\u5F00\u653E\uFF0C\u800C\u4E0D\u4EC5\u4EC5\u662F\u5176\u6784\u9020\u3002\uFF08<em>\u5373\u5C06\u6574\u4E2A\u5185\u5BB9\u653E\u5165 <code>with</code> \u8BED\u53E5</em>\uFF09</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>devnull<span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> devnull<span class="token punctuation">:</span>
    subprocess<span class="token punctuation">.</span>check_call<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;java&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-jar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;foo.jar&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span>devnull<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>POSIX</strong> \u4E2D\u91CD\u5B9A\u5411\u5230 <code>/dev/null</code> \u6216 <strong>Windows</strong> \u4E2D\u7684 <code>NUL</code></p><ul><li><p>\u4F18\u70B9\u662F\u4E0D\u4F1A\u521B\u5EFA\u4E0D\u5FC5\u8981\u7684\u7BA1\u9053\uFF0C\u66F4\u91CD\u8981\u7684\u662F\uFF0C<strong>\u4E0D\u4F1A\u5728\u5B50\u8FDB\u7A0B\u5199\u5165\u65F6\u963B\u585E\u8BE5\u7BA1\u9053</strong></p></li><li><p>\u7F3A\u70B9\u662F <code>os.devnull</code> \u53EF\u80FD\u65E0\u6CD5\u5728\u67D0\u4E9B\u5E73\u53F0\u4E0A\u8FD0\u884C\uFF0C\u82E5\u53EA\u5173\u5FC3 <strong>POSIX</strong> \u548C <strong>Windows</strong> \u4E0A\u7684<strong>CPython</strong>\uFF0C<strong>PyPy</strong> \u548C <strong>Jython</strong>\uFF0C\u5C31\u6CA1\u6709\u95EE\u9898</p></li></ul>`,5),Dn=o(`<ul><li><p><strong>cwd\uFF1A</strong> \u5B57\u7B26\u4E32\u3001\u5B57\u8282\u4E32\u3001\u8DEF\u5F84\u7C7B\u5BF9\u8C61\uFF0C\u82E5 <strong>cwd</strong> \u4E0D\u4E3A <code>None</code>\uFF0C\u6B64\u51FD\u6570\u5728\u6267\u884C\u5B50\u8FDB\u7A0B\u524D\u4F1A\u5C06\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55\u6539\u4E3A <strong>cwd</strong></p></li><li><p><strong>env\uFF1A</strong> \u53EF\u6307\u5B9A\u73AF\u5883\u53D8\u91CF\uFF0C\u6620\u5C04\u683C\u5F0F\u5982\u4E0B\uFF08<em>\u5B57\u7B26\u4E32\u3001\u5B57\u8282\u4E32</em>\uFF09</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>fake_env <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>environ<span class="token punctuation">)</span>
fake_env<span class="token punctuation">[</span><span class="token string">&quot;LANG&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;en_US.UTF-8&quot;</span>
<span class="token comment"># subprocess.Popen(..., env=fake_env)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>pipesize\uFF1A</strong> \u5F53 <code>subprocess.PIPE</code> \u4F5C\u4E3A\u8F93\u5165\u8F93\u51FA\u65F6\uFF0C\u53EF\u6307\u5B9A\u7BA1\u9053\u5927\u5C0F\uFF08<em><strong>3.10</strong> \u4EC5 <strong>Linux</strong></em>\uFF09</p></li></ul><table><thead><tr><th>\u65B9\u6CD5</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td><code>Popen.poll()</code></td><td>\u68C0\u67E5\u5B50\u8FDB\u7A0B\u662F\u5426\u5DF2\u7EC8\u6B62</td></tr><tr><td><code>Popen.wait()</code></td><td>\u7B49\u5F85\u5B50\u8FDB\u7A0B\u7EC8\u6B62\uFF08<em>\u5C0F\u5FC3\u6B7B\u9501</em> \uFF09</td></tr><tr><td><code>Popen.communicate()</code></td><td>\u5141\u8BB8\u4E0E\u8FDB\u7A0B\u4EA4\u4E92\uFF08<em>\u89C4\u907F\u6B7B\u9501</em> \uFF09</td></tr><tr><td><code>Popen.send_signal()</code></td><td>\u5411\u5B50\u8FDB\u7A0B\u53D1\u9001\u4FE1\u53F7</td></tr><tr><td><code>Popen.terminate()</code></td><td>\u505C\u6B62\u5B50\u8FDB\u7A0B</td></tr><tr><td><code>Popen.kill()</code></td><td>\u7EC8\u6B62\uFF08<em>\u6740\u6B7B</em> \uFF09\u5B50\u8FDB\u7A0B</td></tr></tbody></table>`,2),Cn={class:"custom-container info"},Ln=n("p",{class:"custom-container-title"},"\u8BF4\u660E",-1),On={href:"https://docs.python.org/zh-cn/3/library/subprocess.html#subprocess.Popen.communicate",target:"_blank",rel:"noopener noreferrer"},jn=n("code",null,"communicate()",-1),Mn={href:"https://docs.python.org/zh-cn/3/library/subprocess.html#subprocess.Popen.stdin",target:"_blank",rel:"noopener noreferrer"},Vn=n("code",null,".stdin.write",-1),Wn={href:"https://docs.python.org/zh-cn/3/library/subprocess.html#subprocess.Popen.stdout",target:"_blank",rel:"noopener noreferrer"},Gn=n("code",null,".stdout.read",-1),Qn={href:"https://docs.python.org/zh-cn/3/library/subprocess.html#subprocess.Popen.stderr",target:"_blank",rel:"noopener noreferrer"},Rn=n("code",null,".stderr.read",-1),Xn=n("strong",null,"OS",-1),Hn=n("strong",null,"\u7F13\u51B2\u533A\u88AB\u5B50\u8FDB\u7A0B\u586B\u6EE1\u963B\u585E",-1),Jn=n("strong",null,"\u6B7B\u9501",-1),Zn=n("p",null,[s("\u5B83\u53EF\u4EE5\u5411 "),n("strong",null,"stdin"),s(" \u53D1\u9001\u6570\u636E\uFF0C\u6216\u4ECE "),n("strong",null,"stdout"),s(" \u548C "),n("strong",null,"stderr"),s(" \u4E2D\u8BFB\u53D6\u6570\u636E")],-1),$n=n("p",null,[n("strong",null,"Popen.communicate(input=None, timeout=None)")],-1),Kn=n("li",null,[n("strong",null,"input\uFF1A"),s(" \u53EF\u4EE5\u53D1\u9001\u6570\u636E\u5230 "),n("strong",null,"\u5B50\u8FDB\u7A0B"),s("\uFF0C\u82E5\u6D41\u662F\u4EE5\u6587\u672C\u6A21\u5F0F\u6253\u5F00\u7684\uFF0C\u5219\u4E3A\u5B57\u7B26\u4E32\uFF0C\u5426\u5219\u4E3A\u5B57\u8282\u4E32")],-1),Yn=n("strong",null,"timeout\uFF1A",-1),ns=n("strong",null,"raise",-1),ss={href:"https://docs.python.org/zh-cn/3/library/subprocess.html#subprocess.TimeoutExpired",target:"_blank",rel:"noopener noreferrer"},as=n("code",null,"TimeoutExpired",-1),ts=o(`<p>\u5982\u679C\u8D85\u65F6\u5230\u671F\uFF0C\u5B50\u8FDB\u7A0B\u4E0D\u4F1A\u88AB\u6740\u6B7B\uFF0C\u6240\u4EE5\u4E3A\u4E86\u6B63\u786E\u6E05\u7406\u4E00\u4E2A\u884C\u4E3A\u826F\u597D\u7684\u5E94\u7528\u7A0B\u5E8F\u5E94\u8BE5\u6740\u6B7B\u5B50\u8FDB\u7A0B\u5E76\u5B8C\u6210\u901A\u8BAF</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>proc <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    outs<span class="token punctuation">,</span> errs <span class="token operator">=</span> proc<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> TimeoutExpired<span class="token punctuation">:</span>
    proc<span class="token punctuation">.</span>kill<span class="token punctuation">(</span><span class="token punctuation">)</span>
    outs<span class="token punctuation">,</span> errs <span class="token operator">=</span> proc<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6CE8\u610F\uFF1A</strong> \u5185\u5B58\u91CC\u6570\u636E\u8BFB\u53D6\u662F\u7F13\u51B2\u7684\uFF0C<strong>\u82E5\u6570\u636E\u5C3A\u5BF8\u8FC7\u5927\u6216\u65E0\u9650\uFF0C\u4E0D\u8981\u4F7F\u7528\u6B64\u65B9\u6CD5</strong></p>`,3),os=o(`<h4 id="\u7B80\u5355\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5355\u5C01\u88C5" aria-hidden="true">#</a> \u7B80\u5355\u5C01\u88C5</h4><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">run_command_sync</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> stdin<span class="token operator">=</span>asyncio<span class="token punctuation">.</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> stdout<span class="token operator">=</span>asyncio<span class="token punctuation">.</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>
                     stderr<span class="token operator">=</span>asyncio<span class="token punctuation">.</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> log<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> throw<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;Usage:
        shell:
            run_command_sync(&quot;ls -l&quot;, shell=True)
            run_command_sync(&quot;/usr/bin/ls -l&quot;, shell=True)
        program:
            run_command_sync(&quot;/usr/local/bin/your_program&quot;, shell=False)
            run_command_sync([&quot;/usr/local/bin/your_program&quot;], shell=False)
            run_command_sync([&quot;/usr/bin/ls&quot;, &quot;-l&quot;, &quot;-a&quot;], shell=False)
    &quot;&quot;&quot;</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token comment"># We force run_command to always use en_US</span>
        <span class="token comment"># to avoid issues on date and number formats</span>
        <span class="token comment"># on not Anglo-Saxon systems (ex. it, es, fr, de, etc)</span>
        fake_env <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>environ<span class="token punctuation">)</span>
        fake_env<span class="token punctuation">[</span><span class="token string">&quot;LANG&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;en_US.UTF-8&quot;</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> shell<span class="token punctuation">:</span>
            cmd <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">,</span> cmd<span class="token punctuation">)</span>
        proc <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span>
            cmd<span class="token punctuation">,</span>
            shell<span class="token operator">=</span>shell<span class="token punctuation">,</span>
            stdout<span class="token operator">=</span>stdout<span class="token punctuation">,</span>
            stderr<span class="token operator">=</span>stderr<span class="token punctuation">,</span>
            stdin<span class="token operator">=</span>stdin<span class="token punctuation">,</span>
            env<span class="token operator">=</span>fake_env<span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
        out<span class="token punctuation">,</span> err <span class="token operator">=</span> proc<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">)</span>
        rc <span class="token operator">=</span> proc<span class="token punctuation">.</span>returncode
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> why<span class="token punctuation">:</span>
        err<span class="token punctuation">,</span> rc <span class="token operator">=</span> <span class="token string">&quot;Exception while running command({}): {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>why<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span>
        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        <span class="token keyword">if</span> throw<span class="token punctuation">:</span>
            <span class="token keyword">raise</span> why
        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> err<span class="token punctuation">,</span> rc
    <span class="token keyword">if</span> log<span class="token punctuation">:</span>
        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;Run command: {} =&gt; out, err, rc = {}, {}, {} =======&quot;</span>
                    <span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> out<span class="token punctuation">,</span> err<span class="token punctuation">,</span> rc<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> out<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>encoding<span class="token operator">=</span>encoding<span class="token punctuation">)</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>encoding<span class="token operator">=</span>encoding<span class="token punctuation">)</span><span class="token punctuation">,</span> rc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="bandit" tabindex="-1"><a class="header-anchor" href="#bandit" aria-hidden="true">#</a> Bandit</h4><p><strong>Bandit</strong> \u8FD9\u6B3E\u5DE5\u5177\u53EF\u4EE5\u7528\u6765\u641C\u7D22 <strong>Python</strong> \u4EE3\u7801\u4E2D\u5E38\u89C1\u7684\u5B89\u5168\u95EE\u9898\uFF0C\u5728\u68C0\u6D4B\u8FC7\u7A0B\u4E2D\uFF0C<strong>Bandit</strong> \u4F1A\u5BF9\u6BCF\u4E00\u4EFD <strong>Python</strong> \u4EE3\u7801\u6587\u4EF6\u8FDB\u884C\u5904\u7406\uFF0C\u5E76\u6784\u5EFA <strong>AST</strong>\uFF0C\u7136\u540E\u9488\u5BF9\u6BCF\u4E00\u4E2A <strong>AST</strong> \u8282\u70B9\u8FD0\u884C\u76F8\u5E94\u7684\u68C0\u6D4B\u63D2\u4EF6\u3002\u5B8C\u6210\u5B89\u5168\u626B\u63CF\u4E4B\u540E\uFF0C**Bandit **\u4F1A\u76F4\u63A5\u7ED9\u7528\u6237\u751F\u6210\u68C0\u6D4B\u62A5\u544A\uFF08\u5EFA\u8BAE <strong>CI/CD</strong> \u65F6\u4F7F\u7528\uFF09</p>`,4);function es(ps,cs){const t=c("ExternalLinkIcon"),l=c("Font"),p=c("Badge");return r(),u("div",null,[g,d("more"),v,n("h2",h,[_,s(" 1. \u591A\u8FDB\u7A0B "),n("a",b,[s("multiprocessing"),a(t)])]),y,n("div",f,[P,n("p",null,[s("\u4F7F\u7528 "),w,s(" \u65F6\uFF0C\u5E94\u9075\u5FAA\u4E00\u4E9B\u6307\u5BFC\u539F\u5219\u548C\u4E60\u60EF "),n("a",E,[s("\u7528\u6CD5"),a(t)])])]),x,n("p",null,[n("strong",null,[a(l,{type:"dark"},{default:e(()=>[q,s("(group=None, target=None, name=None, args=(), kwargs={}, *, daemon=None)")]),_:1})])]),B,n("ul",null,[n("li",null,[N,s("\uFF1A"),a(p,{type:"success"},{default:e(()=>[s("Windows \u9ED8\u8BA4")]),_:1}),a(p,{type:"queen"},{default:e(()=>[s("Unix")]),_:1}),a(p,{type:"warning"},{default:e(()=>[s("macOS \u9ED8\u8BA4")]),_:1}),A]),n("li",null,[I,s("\uFF1A"),a(p,{type:"queen"},{default:e(()=>[s("Unix \u9ED8\u8BA4")]),_:1}),T]),n("li",null,[z,s(": "),a(p,{type:"queen"},{default:e(()=>[s("Unix")]),_:1}),F])]),n("blockquote",null,[U,n("ul",null,[S,n("li",null,[D,s("\u4E0A \u4F7F\u7528 "),C,s(" \u6216 "),L,s(" \u65F6\uFF0C\u4F1A\u591A\u4E00\u4E2A "),O,s(" \u8FDB\u7A0B\uFF0C\u5B83\u8FFD\u8E2A "),j,s(" \u7684\u7CFB\u7EDF\u8D44\u6E90 (\u5982\uFF1A\u547D\u540D\u4FE1\u53F7\u91CF\u4EE5\u53CA "),n("a",M,[V,a(t)]),s(" \u5BF9\u8C61)\u3002\u6240\u6709\u8FDB\u7A0B\u9000\u51FA\u540E\uFF0C\u8D44\u6E90\u8FFD\u8E2A\u91CA\u653E\u8FFD\u8E2A\u5BF9\u8C61\u3002\u901A\u5E38\u4E0D\u4F1A\u6709\u8FD9\u79CD\u5BF9\u8C61\uFF0C\u4F46\u4E00\u4E2A\u5B50\u8FDB\u7A0B\u88AB\u67D0\u4E2A\u4FE1\u53F7\u6740\u6B7B\uFF0C\u5C31\u4F1A "),W,s(" \u5230\u4E0B\u6B21\u91CD\u542F")]),G])]),Q,n("p",null,[n("a",R,[X,a(t)]),s(" \u6A21\u5757\u5141\u8BB8\u4F60\u751F\u6210\u65B0\u7684\u8FDB\u7A0B\uFF0C\u8FDE\u63A5\u5B83\u4EEC\u7684\u8F93\u5165\u3001\u8F93\u51FA\u3001\u9519\u8BEF\u7BA1\u9053\uFF0C\u5E76\u4E14\u83B7\u53D6\u5B83\u4EEC\u7684\u8FD4\u56DE\u7801\uFF0C\u4F46\u8BE5\u6A21\u5757\u5728 "),H,s(" \u65E0\u6CD5\u4F7F\u7528")]),J,n("p",null,[s("\u901A\u5E38\u53EF\u4F7F\u7528 "),Z,s(" \u63A5\u53E3 \u4F20\u5165 "),$,s(" \u6307\u4EE4\u7B49\u5F85\u5176\u5B8C\u6210\uFF0C\u5E76\u62FF\u5230\u8FD4\u56DE\u7684 "),n("a",K,[Y,a(t)]),s(" \u5B9E\u4F8B\u89E3\u6790")]),n("p",null,[s("\u8FDB\u9636\u7528\u4F8B\u8BF7\u4F7F\u7528\u5E95\u5C42 "),n("a",nn,[s("Popen"),a(t)]),s(" \u63A5\u53E3\uFF0C\u5176\u6784\u9020\u5982\u4E0B")]),sn,n("div",an,[tn,on,n("p",null,[n("a",en,[s("shlex.quote()"),a(t)])]),pn]),n("ul",null,[cn,n("li",null,[n("p",null,[ln,s(" \u6307\u5B9A\u88AB\u6267\u884C\u7A0B\u5E8F\u7684 "),rn,s("\uFF0C\u5408\u6CD5\u7684\u503C\u5305\u62EC "),n("a",un,[dn,a(t)]),s("\u3001"),n("a",kn,[mn,a(t)]),s("\u3001\u73B0\u5B58\u7684 "),gn,s("\uFF08"),vn,s(" \uFF09\u3001\u73B0\u5B58\u7684\u5E26\u6709\u5408\u6CD5\u6587\u4EF6\u63CF\u8FF0\u7B26\u7684 "),n("a",hn,[s("file object"),a(t)]),s(" \u4EE5\u53CA "),_n]),n("ul",null,[bn,n("li",null,[yn,s(" \u4F7F\u7528\u7279\u6B8A\u7684\u6587\u4EF6 "),n("a",fn,[Pn,a(t)])]),wn]),n("blockquote",null,[n("p",null,[En,s(" \u53EF\u4EE5\u4E3A "),n("a",xn,[qn,a(t)]),s("\uFF0C\u8FD9\u8868\u793A\u6765\u81EA\u5B50\u8FDB\u7A0B\u7684 "),Bn,s(" \u6570\u636E\u5E94\u5F53\u88AB\u6355\u83B7\u5230\u4E0E "),Nn,s(" \u76F8\u540C\u7684\u6587\u4EF6\u53E5\u67C4\u4E2D")]),An])])]),n("div",In,[Tn,n("p",null,[zn,s(" \u5BF9\u8C61\u652F\u6301\u901A\u8FC7 "),n("a",Fn,[Un,a(t)]),s(" \u8BED\u53E5\u4F5C\u4E3A\u4E0A\u4E0B\u6587\u7BA1\u7406\u5668\uFF0C\u5728\u9000\u51FA\u65F6\u5173\u95ED\u6587\u4EF6\u63CF\u8FF0\u7B26\u5E76\u7B49\u5F85\u8FDB\u7A0B")]),Sn]),Dn,n("div",Cn,[Ln,n("p",null,[s("\u4F7F\u7528 "),n("a",On,[jn,a(t)]),s(" \u800C\u975E "),n("a",Mn,[Vn,a(t)]),s("\uFF0C "),n("a",Wn,[Gn,a(t)]),s(" \u6216\u8005 "),n("a",Qn,[Rn,a(t)]),s(" \u6765\u907F\u514D\u7531\u4E8E\u4EFB\u610F\u5176\u4ED6 "),Xn,s(" \u7BA1\u9053 "),Hn,s(" \u800C\u5BFC\u81F4\u7684 "),Jn]),Zn,$n,n("ul",null,[Kn,n("li",null,[Yn,s(" \u82E5\u8FDB\u7A0B\u8D85\u65F6\u672A\u7EC8\u6B62\uFF0C\u5219 "),ns,s(" \u4E00\u4E2A "),n("a",ss,[as,a(t)]),s(" \u5F02\u5E38\uFF0C\u6355\u83B7\u6B64\u5F02\u5E38\u5E76\u91CD\u65B0\u7B49\u5F85\u5C06\u4E0D\u4F1A\u4E22\u5931\u4EFB\u4F55\u8F93\u51FA")])]),ts]),os])}const rs=i(m,[["render",es],["__file","\u591A\u8FDB\u7A0B\u7F16\u7A0B.html.vue"]]);export{rs as default};
