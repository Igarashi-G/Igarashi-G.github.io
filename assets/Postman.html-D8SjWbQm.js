import{_ as i}from"./plugin-vueexport-helper-DlAUqK2U.js";import{c as e,d as t,o as a}from"./app-RYoJSJfx.js";const n={};function o(r,s){return a(),e("div",null,s[0]||(s[0]=[t(`<h1 id="postman" tabindex="-1"><a class="header-anchor" href="#postman"><span>Postman</span></a></h1><p><strong>Postman</strong> 是一款功能强大的网页调试与发送网页 <code>HTTP</code> 请求的 <code>Chrome</code> 插件。可以用于测试发送各种 <code>HTTP</code> 请求。</p><h3 id="_1-基本操作" tabindex="-1"><a class="header-anchor" href="#_1-基本操作"><span>1. 基本操作</span></a></h3><p><strong>Authorization - 授权</strong></p><p>身份认证，显示 <code>browser cookies</code>，需要开启 <code>Interceptor</code></p><ul><li><code>Basic Auth</code>：填写用户名和密码，点击 <code>update request</code> 后，<code>headers</code> 中自动添加 <strong>Authorization</strong></li></ul><p><strong>Headers - 请求头</strong></p><p>通常是 <code>json</code> 的数据格式，不同格式根据不同类型切换，比如： <code>excel</code> 就肯定是另一种格式</p><table><thead><tr><th>key</th><th>value</th></tr></thead><tbody><tr><td><code>Content-Type</code></td><td><code>application/json</code></td></tr></tbody></table><p><strong>Body - 请求体</strong></p><ul><li><p><code>form-data</code></p><p>表单数据 <code>key - value</code>形式</p></li><li><p><code>x-www-form-urlencoded</code></p><p>选择 <code>x-www-form-urlencoded</code> 的参数方式后，<code>postman</code> 自动设置了<code>Content-Type</code>，窗体数据被编码为<code>key - value</code></p></li><li><p><code>raw</code></p><p>通常选项，里面写入原生的 <code>josn</code> 数据，配合 <code>JSON(application/json)</code> 进行验证是否参数正确</p></li><li><p><code>binary</code></p><p>二进制形式，文件流，字节流等</p></li></ul><h3 id="_2-测试" tabindex="-1"><a class="header-anchor" href="#_2-测试"><span>2. 测试</span></a></h3><p><strong>可写脚本</strong></p><ul><li><p>判断返回的状态码</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">tests</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Status code is 200&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> responseCode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">code</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> ===</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>校验包含字符串</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">tests</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Body matches string&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> responseBody</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">has</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;test&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;POST&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>解析 <strong>JSON</strong> 并检查</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> jsonData</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> JSON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">parse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">responseBody</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">tests</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;request test&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> jsonData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">test</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> ===</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;POST&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p><strong>Collection</strong><br> 把测试用例保存，<strong>Runner</strong> 批量执行</p><blockquote><p>在线可尝试商业版软件 <a href="https://yapi.ymfe.org/" target="_blank" rel="noopener noreferrer">YAPI</a></p></blockquote>`,16)]))}const d=i(n,[["render",o]]),l=JSON.parse('{"path":"/tool/Other/Postman.html","title":"Postman","lang":"zh-CN","frontmatter":{"title":"Postman","order":3,"description":"Postman Postman 是一款功能强大的网页调试与发送网页 HTTP 请求的 Chrome 插件。可以用于测试发送各种 HTTP 请求。 1. 基本操作 Authorization - 授权 身份认证，显示 browser cookies，需要开启 Interceptor Basic Auth：填写用户名和密码，点击 update reques...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Postman\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-31T14:47:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"悦·宝宝\\",\\"url\\":\\"https://github.com/Igarashi-G\\"}]}"],["meta",{"property":"og:url","content":"https://igarashi-g.github.io/tool/Other/Postman.html"}],["meta",{"property":"og:site_name","content":"悦 ▪ 宝宝"}],["meta",{"property":"og:title","content":"Postman"}],["meta",{"property":"og:description","content":"Postman Postman 是一款功能强大的网页调试与发送网页 HTTP 请求的 Chrome 插件。可以用于测试发送各种 HTTP 请求。 1. 基本操作 Authorization - 授权 身份认证，显示 browser cookies，需要开启 Interceptor Basic Auth：填写用户名和密码，点击 update reques..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-31T14:47:16.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-31T14:47:16.000Z"}]]},"git":{"createdTime":1664462137000,"updatedTime":1680274036000,"contributors":[{"name":"Igarashi","username":"Igarashi","email":"2545369032@qq.com","commits":2,"url":"https://github.com/Igarashi"}]},"readingTime":{"minutes":0.99,"words":298},"filePathRelative":"tool/Other/Postman.md","excerpt":"\\n<p><strong>Postman</strong> 是一款功能强大的网页调试与发送网页 <code>HTTP</code> 请求的 <code>Chrome</code> 插件。可以用于测试发送各种 <code>HTTP</code> 请求。</p>\\n<h3>1. 基本操作</h3>\\n<p><strong>Authorization - 授权</strong></p>\\n<p>身份认证，显示 <code>browser cookies</code>，需要开启 <code>Interceptor</code></p>\\n<ul>\\n<li><code>Basic Auth</code>：填写用户名和密码，点击 <code>update request</code> 后，<code>headers</code> 中自动添加 <strong>Authorization</strong></li>\\n</ul>","autoDesc":true}');export{d as comp,l as data};
