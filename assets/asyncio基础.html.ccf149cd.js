import{_ as u}from"./plugin-vueexport-helper.2444895f.js";import{o as r,c as d,a as n,b as s,d as a,w as e,f as t,r as l}from"./app.25a623ff.js";const k={},v=n("h1",{id:"asyncio-\u2014\u2014-\u5F02\u6B65-i-o-\u57FA\u7840",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#asyncio-\u2014\u2014-\u5F02\u6B65-i-o-\u57FA\u7840","aria-hidden":"true"},"#"),s(" asyncio \u2014\u2014 \u5F02\u6B65 I/O \u57FA\u7840")],-1),m={href:"https://docs.python.org/zh-cn/3/library/asyncio.html",target:"_blank",rel:"noopener noreferrer"},b=t('<h2 id="_1-\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#_1-\u6982\u8FF0" aria-hidden="true">#</a> 1. \u6982\u8FF0</h2><p><strong>asyncio</strong> \u662F\u7528\u6765\u7F16\u5199 <strong>\u5E76\u53D1\u4EE3\u7801</strong> \u7684\u5E93\uFF0C\u4F7F\u7528 <code>async/await</code> \u8BED\u6CD5\u3002</p><p><strong>\u573A\u666F</strong>\uFF1A\u88AB\u7528\u4F5C\u591A\u4E2A\u63D0\u4F9B\u9AD8\u6027\u80FD Python \u5F02\u6B65\u6846\u67B6\u7684\u57FA\u7840\uFF0C\u5305\u62EC\u7F51\u7EDC\u548C\u7F51\u7AD9\u670D\u52A1\uFF0C\u6570\u636E\u5E93\u8FDE\u63A5\u5E93\uFF0C\u5206\u5E03\u5F0F\u4EFB\u52A1\u961F\u5217\u7B49\u7B49\u3002\u5F80\u5F80\u662F\u6784\u5EFA IO \u5BC6\u96C6\u578B\u548C\u9AD8\u5C42\u7EA7 \u7ED3\u6784\u5316 \u7F51\u7EDC\u4EE3\u7801\u7684\u6700\u4F73\u9009\u62E9\u3002</p><p><code>asyncio</code> \u63D0\u4F9B\u4E00\u7EC4 \u9AD8\u5C42\u7EA7 API \u7528\u4E8E\uFF1A</p><ul><li><strong>\u5E76\u53D1\u5730 \u8FD0\u884C Python \u534F\u7A0B</strong> \u5E76\u5BF9\u5176\u6267\u884C\u8FC7\u7A0B\u5B9E\u73B0<strong>\u5B8C\u5168\u63A7\u5236</strong></li><li>\u6267\u884C \u7F51\u7EDC IO \u548C IPC</li><li>\u63A7\u5236 \u5B50\u8FDB\u7A0B</li><li>\u901A\u8FC7 <a href="">\u961F\u5217</a> \u5B9E\u73B0 <strong>\u5206\u5E03\u5F0F\u4EFB\u52A1</strong></li><li>\u540C\u6B65 \u5E76\u53D1\u4EE3\u7801</li></ul><p>\u6B64\u5916\uFF0C\u8FD8\u6709\u4E00\u4E9B <strong>\u4F4E\u5C42\u7EA7 API</strong> \u4EE5\u652F\u6301 <strong>\u5E93</strong> \u548C <strong>\u6846\u67B6\u7EA7\u522B</strong> \u7684\u5F00\u53D1\u8005\u5B9E\u73B0\uFF1A</p><ul><li>\u521B\u5EFA\u548C\u7BA1\u7406\u4E8B\u4EF6\u5FAA\u73AF\uFF0C\u4EE5\u63D0\u4F9B\u5F02\u6B65 API \u7528\u4E8E\u7F51\u7EDC\u5316\uFF0C \u8FD0\u884C\u5B50\u8FDB\u7A0B\uFF0C\u5904\u7406 OS \u4FE1\u53F7 \u7B49\u7B49</li><li>\u4F7F\u7528 <code>transports</code> \u5B9E\u73B0\u9AD8\u6548\u7387\u534F\u8BAE</li><li>\u901A\u8FC7 <code>async/await</code> \u8BED\u6CD5 \u6865\u63A5 \u57FA\u4E8E\u56DE\u8C03\u7684\u5E93\u548C\u4EE3\u7801</li></ul><h2 id="_2-\u57FA\u7840\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_2-\u57FA\u7840\u4F7F\u7528" aria-hidden="true">#</a> 2. \u57FA\u7840\u4F7F\u7528</h2>',8),_=n("h3",{id:"_2-1-\u4E8B\u4EF6\u5FAA\u73AF",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-1-\u4E8B\u4EF6\u5FAA\u73AF","aria-hidden":"true"},"#"),s(" 2.1 \u4E8B\u4EF6\u5FAA\u73AF")],-1),h=t(`<div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u4EE5\u4E0B\u662F\u4F2A\u4EE3\u7801\uFF1A</span>

task_list = [task1, task2, task3, ...]

while True:
pending_tasks, success_tasks = task_list
for pending_task in pending_tasks:
exec pending_task...
for success_task in success_tasks:
task_list.remove(success_task)
if len(task_list) == 0:
break
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u83B7\u53D6\u4E8B\u4EF6\u5FAA\u73AF\u5E76\u6267\u884C\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio

<span class="token comment"># \u751F\u6210 | \u83B7\u53D6 \u4E00\u4E2A\u4E8B\u4EF6\u5FAA\u73AF</span>
loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># \u8BA9\u4E8B\u4EF6\u5FAA\u73AF\u68C0\u6D4B\u4EFB\u52A1\u5E76\u6267\u884C\uFF0C\u76F4\u5230\u88AB\u6267\u884C\u5B8C</span>
loop<span class="token punctuation">.</span>run_until_complete<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>asyncio.get_event_loop():</code> \u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u4E8B\u4EF6\u5FAA\u73AF\uFF08\u5373\u521B\u5EFA\u4E00\u4E2A<code>event_loop</code>\uFF09\u6BCF\u4E2A\u7EBF\u7A0B\u6709\u4E00\u4E2A\u4E8B\u4EF6\u5FAA\u73AF\uFF0C\u4E3B\u7EBF\u7A0B\u8C03\u7528<code>get_event_loop</code>\u65F6\u4F1A\u521B\u5EFA\u4E8B\u4EF6\u5FAA\u73AF</p></li><li><p><code>run_until_complete(future/coroutine)</code> \u7684\u7279\u70B9\u5C31\u50CF\u8BE5\u51FD\u6570\u7684\u540D\u5B57\uFF0C\u76F4\u5230\u5FAA\u73AF\u4E8B\u4EF6\u7684 <strong>\u6240\u6709\u4E8B\u4EF6\u90FD\u5904\u7406\u5B8C</strong> \u624D\u80FD\u5B8C\u6574\u7ED3\u675F\uFF0C\u53EF\u4EE5\u5C06\u534F\u7A0B\u6CE8\u518C\u5230\u4E8B\u4EF6\u5FAA\u73AF\uFF0C\u5E76\u542F\u52A8\u4E8B\u4EF6\u5FAA\u73AF \u5185\u90E8\u4F1A\u5C06\u534F\u7A0B\u5305\u88C5\u6210\u4E3A\u4E86\u4E00\u4E2A\u4EFB\u52A1\uFF08task\uFF09\u5BF9\u8C61\u3002\uFF08\u89C1\u4E0B\uFF09</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>new_task <span class="token operator">=</span> <span class="token keyword">not</span> futures<span class="token punctuation">.</span>isfuture<span class="token punctuation">(</span>future<span class="token punctuation">)</span>     <span class="token comment"># \u5224\u65AD\u4F20\u5165\u7684\u662Ffuture\u8FD8\u662Fcoroutine</span>

future <span class="token operator">=</span> tasks<span class="token punctuation">.</span>ensure_future<span class="token punctuation">(</span>future<span class="token punctuation">,</span> loop<span class="token operator">=</span>self<span class="token punctuation">)</span> <span class="token comment"># \u5C06\u4F20\u5165\u503C future \u7528 ensure_future \u8FDB\u884C\u8F6C\u6362\u4E3Atask\u5BF9\u8C61</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>\u200B</p><h3 id="_2-2-\u5FEB\u901F\u4E0A\u624B" tabindex="-1"><a class="header-anchor" href="#_2-2-\u5FEB\u901F\u4E0A\u624B" aria-hidden="true">#</a> 2.2 \u5FEB\u901F\u4E0A\u624B</h3><h5 id="\u4EC0\u4E48\u662F\u534F\u7A0B\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u534F\u7A0B\u51FD\u6570" aria-hidden="true">#</a> <strong>\u4EC0\u4E48\u662F\u534F\u7A0B\u51FD\u6570\uFF1F</strong></h5><p><code>async</code> + <code>def</code> + \u51FD\u6570\u540D</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="\u4EC0\u4E48\u662F\u534F\u7A0B\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u534F\u7A0B\u5BF9\u8C61" aria-hidden="true">#</a> <strong>\u4EC0\u4E48\u662F\u534F\u7A0B\u5BF9\u8C61\uFF1F</strong></h5>`,10),y=n("li",null,[s("\u6267\u884C "),n("code",null,"\u534F\u6210\u51FD\u6570()"),s(" \u5F97\u5230\u7684\u5373\u662F "),n("code",null,"\u534F\u6210\u5BF9\u8C61"),s(", \u4E00\u4E2A\u534F\u7A0B\u5BF9\u8C61\u5C31\u662F\u4E00\u4E2A\u539F\u751F\u53EF\u88AB\u6302\u8D77\u7684\u51FD\u6570")],-1),g=n("a",{href:"/back_end/python/base/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/asyncio%E5%9F%BA%E7%A1%80#23-await"},[n("em",null,"awaitable")],-1),f=n("strong",null,"\u534F\u7A0B\u7684\u6267\u884C",-1),w=n("code",null,"__await__()",-1),E={href:"https://docs.python.org/zh-cn/3/library/exceptions.html#StopIteration",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"StopIteration",-1),A=n("code",null,"value",-1),B=t('<li>\u534F\u7A0B\u4E5F\u5177\u6709\u751F\u6210\u5668\u7684 <code>send</code>\u3001<code>throw</code>\u3001<code>close</code> \u65B9\u6CD5\uFF0C\u53EF\u53C2\u8003 <a href="/back_end/python/base/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/%E7%94%9F%E6%88%90%E5%99%A8">\u751F\u6210\u5668</a>\uFF0C\u4F46\u533A\u522B\u662F <strong>\u534F\u7A0B\u4E0D\u76F4\u63A5\u652F\u6301\u8FED\u4EE3</strong>\uFF08<code>for</code> \u5FAA\u73AF\u9700\u4F7F\u7528 <a href="/back_end/python/base/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/asyncio%E5%9F%BA%E7%A1%80#51-%E5%BC%82%E6%AD%A5%E8%BF%AD%E4%BB%A3%E5%99%A8">\u5F02\u6B65\u8FED\u4EE3\u5668</a>\uFF09</li>',1),q=t(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>ret <span class="token operator">=</span> foo<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C:</span>
<span class="token comment"># &lt;coroutine object foo at 0x0000024D1B444848&gt;</span>
<span class="token comment"># sys:1: RuntimeWarning: coroutine &#39;foo&#39; was never awaited</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>\u6CE8\uFF1A</strong> \u6267\u884C<code>\u534F\u6210\u51FD\u6570</code>\u521B\u5EFA\u7684<code>\u534F\u6210\u5BF9\u8C61</code>\uFF0C\u51FD\u6570\u5185\u90E8\u4EE3\u7801<strong>\u4E0D\u4F1A\u6267\u884C</strong></p></blockquote><p>\u628A<code>\u534F\u6210\u5BF9\u8C61</code>\u5F53\u6210\u4E00\u4E2A<code>\u4EFB\u52A1</code>\uFF0C\u5373\u6DFB\u52A0 <strong>Task</strong> \u5230<code>\u4E8B\u4EF6\u5FAA\u73AF</code>\u4E2D\uFF0C\u5373\u53EF\u6267\u884C</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Fuck me on github&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">pass</span>


ret <span class="token operator">=</span> foo<span class="token punctuation">(</span><span class="token punctuation">)</span>

loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>
loop<span class="token punctuation">.</span>run_until_complete<span class="token punctuation">(</span>ret<span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C:</span>
<span class="token comment"># Fuck me on github</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),F=t(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>ret<span class="token punctuation">)</span> <span class="token comment"># \u5373\u53EF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>\u7BA1\u7406 <code>asyncio</code> \u4E8B\u4EF6\u5FAA\u73AF\uFF0C<strong>\u7EC8\u7ED3\u5F02\u6B65\u751F\u6210\u5668\uFF0C\u5E76\u5173\u95ED\u7EBF\u7A0B\u6C60</strong></li><li>\u603B\u4F1A\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u4E8B\u4EF6\u5FAA\u73AF\uFF0C\u5E76\u5728\u7ED3\u675F\u65F6\u5173\u95ED\uFF0C\u7528\u4E8E <code>asyncio</code> \u7A0B\u5E8F\u7684<strong>\u5165\u53E3</strong></li><li>\u672C\u8D28\u8FD8\u662F\u8C03\u7528\u4E86 <code>loop.run_until_complete(main)</code>\uFF0C\u76F4\u5230 <a href="/back_end/python/base/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/asyncio%E5%9F%BA%E7%A1%80#4-future%E5%AF%B9%E8%B1%A1">Future</a> \u5BF9\u8C61\u6267\u884C\u5B8C\u6210</li></ul><blockquote><p>\u6CE8\uFF1A<code>asyncio.run()</code> \u672C\u8D28\u4E0A\u548C\u58F0\u660E <strong>loop</strong> \u518D\u6267\u884C\u76F8\u540C\uFF0C\u53EA\u662F<code>\u7B80\u5316\u5199\u6CD5</code>\u800C\u5DF2\uFF0C\u7406\u60F3\u60C5\u51B5\u5E94\u8BE5\u53EA\u88AB\u8C03\u7528\u4E00\u6B21</p></blockquote><h3 id="_2-3-await" tabindex="-1"><a class="header-anchor" href="#_2-3-await" aria-hidden="true">#</a> 2.3 await</h3><h4 id="\u53EF\u7B49\u5F85\u5BF9\u8C61-awaitable" tabindex="-1"><a class="header-anchor" href="#\u53EF\u7B49\u5F85\u5BF9\u8C61-awaitable" aria-hidden="true">#</a> <strong>\u53EF\u7B49\u5F85\u5BF9\u8C61(<code>awaitable</code>)</strong></h4>`,5),T=n("li",null,[n("p",null,[s("\u80FD\u5728 "),n("a",{href:"/back_end/python/base/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/asyncio%E5%9F%BA%E7%A1%80#23-await"},"await"),s(" \u8868\u8FBE\u5F0F\u4E2D\u4F7F\u7528\u7684\u5BF9\u8C61")])],-1),I=n("p",null,[s("\u53EF\u7B49\u5F85\u5BF9\u8C61 \u4E3B\u8981\u5B9E\u73B0\u4E86 "),n("code",null,"__await__()"),s("\u65B9\u6CD5")],-1),C=n("strong",null,"\u6CE8\uFF1A",-1),D={href:"https://docs.python.org/zh-cn/3/library/types.html#types.coroutine",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"types.coroutine()",-1),O={href:"https://docs.python.org/zh-cn/3/library/asyncio-task.html#asyncio.coroutine",target:"_blank",rel:"noopener noreferrer"},P=n("code",null,"asyncio.coroutine()",-1),W={href:"https://docs.python.org/zh-cn/3/glossary.html#term-generator-iterator",target:"_blank",rel:"noopener noreferrer"},j={href:"https://docs.python.org/zh-cn/3/reference/datamodel.html#object.__await__",target:"_blank",rel:"noopener noreferrer"},M=n("code",null,"__await__()",-1),z=n("li",null,[n("p",null,[s("\u4ECE "),n("code",null,"async def "),s(" \u51FD\u6570\u8FD4\u56DE\u7684 "),n("a",{href:""},"\u534F\u7A0B\u5BF9\u8C61"),s(" \u5373\u5C5E\u4E8E\u53EF\u7B49\u5F85\u5BF9\u8C61\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5728\u5176\u4ED6\u534F\u7A0B\u4E2D\u88AB\u7B49\u5F85")])],-1),L=t(`<p><strong><code>object.__await__(self)</code></strong></p><blockquote><p>\u7528\u6765\u5B9E\u73B0\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u5982\uFF1A<a href="/back_end/python/base/%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/%E5%8D%8F%E7%A8%8B#35-future%E5%AF%B9%E8%B1%A1">asyncio.Future</a> \u5BF9\u8C61\u5B9E\u73B0\u4E86\u6B64\u65B9\u6CD5\uFF0C\u4ECE\u800C\u53EF\u4EE5\u548C <code>await</code> \u8868\u8FBE\u5F0F\u517C\u5BB9</p></blockquote><ul><li><p>\u8FD4\u56DE\u503C\uFF1A</p><ul><li><code>\u8FED\u4EE3\u5668: iterator</code>:</li></ul></li><li><p>\u793A\u4F8B\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">__await__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>_asyncio_future_blocking <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">yield</span> self  <span class="token comment"># This tells Task to wait for completion.</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError<span class="token punctuation">(</span><span class="token string">&quot;await wasn&#39;t used with future&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> self<span class="token punctuation">.</span>result<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># May raise too.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>\u4F7F\u7528 <strong>await</strong> \u7B49\u5F85\u534F\u7A0B\u8FD4\u56DE\u503C\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">io_func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;start io block&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;end io block&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Fuck me on github&quot;</span><span class="token punctuation">)</span>

    ret1 <span class="token operator">=</span> <span class="token keyword">await</span> io_func<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>ret1<span class="token punctuation">)</span>

    ret2 <span class="token operator">=</span> <span class="token keyword">await</span> io_func<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>ret2<span class="token punctuation">)</span>

ret <span class="token operator">=</span> foo<span class="token punctuation">(</span><span class="token punctuation">)</span>
asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>ret<span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C:</span>
<span class="token comment"># Fuck me on github</span>
<span class="token comment"># start io block</span>
<span class="token comment"># end io block</span>
<span class="token comment"># None</span>
<span class="token comment"># start io block</span>
<span class="token comment"># end io block</span>
<span class="token comment"># None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u7B49\u5230\u534F\u7A0B\u8FD4\u56DE\u7ED3\u679C\u4E4B\u540E\uFF0C\u518D\u7EE7\u7EED\u6267\u884C\uFF0C\u53D8\u4E3A <code>\u540C\u6B65\u963B\u585E</code> \u5F0F\uFF0C\u4F46\u4F1A <code>\u6302\u8D77</code> \u5F53\u524D\u963B\u585E\u534F\u7A0B</li></ul><blockquote><p>\u5F53\u9047\u5230 <code>IO\u64CD\u4F5C</code> \u65F6\u6302\u8D77\u5F53\u524D\u534F\u7A0B\uFF0C\u7B49 IO \u64CD\u4F5C\u5B8C\u4E4B\u540E <code>\u518D\u7EE7\u7EED</code> \u5F80\u4E0B\u6267\u884C\uFF0C\u6B64\u65F6 <code>\u4E8B\u4EF6\u5FAA\u73AF</code> \u53EF\u4EE5\u53BB\u6267\u884C <code>\u5176\u4ED6\u534F\u7A0B\u4EFB\u52A1</code></p></blockquote><h2 id="_3-task-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_3-task-\u5BF9\u8C61" aria-hidden="true">#</a> 3. Task \u5BF9\u8C61</h2>`,8),R={id:"class-asyncio-task-coro-loop-none-name-none-py3-9",tabindex:"-1"},S=n("a",{class:"header-anchor",href:"#class-asyncio-task-coro-loop-none-name-none-py3-9","aria-hidden":"true"},"#",-1),V=n("em",null,"coro",-1),K=t('<p><code>Task</code> \u4EFB\u52A1\uFF0C\u662F <code>Future</code> \u7C7B\u7684\u5B50\u7C7B\uFF0C\u5BF9 <code>coroutine</code> \u7684\u8FDB\u4E00\u6B65\u5C01\u88C5\uFF0C\u76F8\u6BD4 <a href="/back_end/python/base/%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/%E5%8D%8F%E7%A8%8B">\u534F\u7A0B</a>\uFF0C\u4FDD\u5B58\u4E86\u534F\u7A0B\u8FD0\u884C\u540E\u7684\u72B6\u6001\uFF0C\u7528\u4E8E\u6765\u83B7\u53D6\u534F\u7A0B\u7684\u7ED3\u679C</p><ul><li><code>Pending</code>: \u521B\u5EFA\u65F6</li><li><code>Running</code>: \u8C03\u7528\u6267\u884C\u65F6</li><li><code>Done</code>: \u8C03\u7528\u5B8C\u6BD5</li><li><code>Cancelled</code>: \u8C03\u7528\u505C\u6B62\uFF0Ctask \u53D6\u6D88</li></ul><blockquote><p>\u901A\u5E38\u88AB\u7528\u4E8E\u8FD0\u884C\u534F\u7A0B\uFF0C<strong>\u975E\u7EBF\u7A0B\u5B89\u5168</strong>\u7684\u5BF9\u8C61\u3002<strong>\u5F3A\u70C8\u4E0D\u63A8\u8350</strong> \u624B\u52A8\u5B9E\u4F8B\u5316 <code>Task</code> \u5BF9\u8C61\u6765\u521B\u5EFA <code>task</code>\uFF0C\u5373\u4F7F\u53EF\u4EE5\u5DE5\u4F5C\uFF0C\u4F46\u6CA1\u5FC5\u8981</p></blockquote><h1 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h1><p><em>3.10 \u7248\u540E\u5DF2\u79FB\u9664:</em> \u5982\u679C\u672A\u6307\u5B9A <em>loop</em> \u5E76\u4E14\u6CA1\u6709\u6B63\u5728\u8FD0\u884C\u7684\u4E8B\u4EF6\u5FAA\u73AF\u5219\u4F1A\u53D1\u51FA\u5F03\u7528\u8B66\u544A\u3002</p><h3 id="_3-1-\u521B\u5EFA\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#_3-1-\u521B\u5EFA\u4EFB\u52A1" aria-hidden="true">#</a> 3.1 \u521B\u5EFA\u4EFB\u52A1</h3>',6),X={id:"asyncio-ensure-future-obj-loop-none",tabindex:"-1"},G=n("a",{class:"header-anchor",href:"#asyncio-ensure-future-obj-loop-none","aria-hidden":"true"},"#",-1),H=n("code",null,"coroutine ",-1),J=n("code",null,"task\u4EFB\u52A1",-1),Q=n("a",{href:"/back_end/python/base/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/asyncio%E5%9F%BA%E7%A1%80#-1"},"asyncio.create_task",-1),U=t(`<ul><li><p>\u53C2\u6570\uFF1A</p><ul><li><code>obj: &lt;coroutine object&gt;</code>\uFF1A \u82E5\u662F <code> isfuture()</code> \u5BF9\u8C61\uFF0C\u5219\u4FDD\u6301\u539F\u6837\uFF0C\u82E5\u662F <code>iscoroutine()</code> \u5219\u4F1A\u52A0\u5165<code>loop</code> \u6267\u884C\uFF0C\u82E5\u662F\u53EF\u7B49\u5F85\u5BF9\u8C61\uFF0C\u5219\u7B49\u5F85\u7ED3\u679C\uFF0C\u5176\u4ED6\u5BF9\u8C61\u5219\u5F15\u53D1 <code>TypeError</code> \u5F02\u5E38</li><li><code>loop: = None</code>\uFF1A\u4E8B\u4EF6\u5FAA\u73AF</li></ul></li><li><p>\u8FD4\u56DE\u503C\uFF1A</p><ul><li><code>task\u5BF9\u8C61: &lt;class &#39;_asyncio.Task&#39;&gt;</code>\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u4F5C\u4E3A <code>asyncio\u4EFB\u52A1</code> \u53EF\u5E76\u53D1\u6267\u884C\u7684 <code>task\u5BF9\u8C61</code></li></ul></li><li><p>\u793A\u4F8B\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> time


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">do_some_work</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Waiting: &#39;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token string">&#39;Done after {}s&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    coroutine1 <span class="token operator">=</span> do_some_work<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    coroutine2 <span class="token operator">=</span> do_some_work<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    coroutine3 <span class="token operator">=</span> do_some_work<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>

    tasks <span class="token operator">=</span> <span class="token punctuation">[</span>
        asyncio<span class="token punctuation">.</span>ensure_future<span class="token punctuation">(</span>coroutine1<span class="token punctuation">)</span><span class="token punctuation">,</span>
        asyncio<span class="token punctuation">.</span>ensure_future<span class="token punctuation">(</span>coroutine2<span class="token punctuation">)</span><span class="token punctuation">,</span>
        asyncio<span class="token punctuation">.</span>ensure_future<span class="token punctuation">(</span>coroutine3<span class="token punctuation">)</span>
    <span class="token punctuation">]</span>

    start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>wait<span class="token punctuation">(</span>tasks<span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;TIME: &#39;</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">)</span>


asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C</span>
<span class="token comment"># Waiting:  1</span>
<span class="token comment"># Waiting:  2</span>
<span class="token comment"># Waiting:  2</span>
<span class="token comment"># TIME:  2.0020179748535156</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,1),Y={id:"asyncio-create-task-coro-name-none-py3-7",tabindex:"-1"},Z=n("a",{class:"header-anchor",href:"#asyncio-create-task-coro-name-none-py3-7","aria-hidden":"true"},"#",-1),$=t(`<blockquote><p>\u5C06\u534F\u7A0B\u5C01\u88C5\u6210\u4E00\u4E2A <code>task\u4EFB\u52A1</code> \u5BF9\u8C61\uFF0C\u5728 <code>\u4E8B\u4EF6\u5FAA\u73AF</code> \u4E2D<strong>\u6DFB\u52A0\u591A\u4E2A\u4EFB\u52A1</strong>\uFF0C\u5E76\u80FD\u591F <strong>\u5E76\u53D1\u8C03\u5EA6\u5730\u6267\u884C</strong>\uFF0C\u8BE5\u4EFB\u52A1\u4F1A\u5728 <code>get_running_loop</code>\u8FD4\u56DE\u7684 loop \u4E2D\u6267\u884C\uFF0C\u82E5\u5F53\u524D\u7EBF\u7A0B\u6CA1\u6709 loop\uFF0C\u5219\u4F1A\u5F15\u53D1 <code>RuntimeError</code></p></blockquote><ul><li><p>\u53C2\u6570\uFF1A</p><ul><li><code>coro: &lt;coroutine object&gt;</code>\uFF1A \u4F20\u5165\u534F\u7A0B\u5BF9\u8C61</li><li><code>name: str = None</code>\uFF1A3.8 \u4E2D\u6DFB\u52A0 <em>name \u5F62\u53C2</em>\uFF0C\u8C03\u7528 <code>Task.set_name()</code> \u521B\u5EFA\u4EFB\u52A1\u540D</li></ul></li><li><p>\u8FD4\u56DE\u503C\uFF1A</p><ul><li><code>task\u5BF9\u8C61: &lt;class &#39;_asyncio.Task&#39;&gt;</code>\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u4F5C\u4E3A <code>asyncio\u4EFB\u52A1</code> \u53EF\u5E76\u53D1\u6267\u884C\u7684 <code>task\u5BF9\u8C61</code></li></ul></li><li><p>\u793A\u4F8B\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">foo</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># \u4F1A\u5C06\u5F53\u524D\u6267\u884C\u7684 foo(...)\u51FD\u6570\u4EFB\u52A1 \u7ACB\u5373\u6DFB\u52A0\u5230\u4E8B\u4EF6\u5FAA\u73AF\u5F53\u4E2D</span>
    task <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>foo<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;task1&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">)</span>
    ret <span class="token operator">=</span> <span class="token keyword">await</span> task
    <span class="token keyword">print</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span>


asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C:</span>
<span class="token comment"># &lt;Task pending name=&#39;task1&#39; coro=&lt;foo() running at task_file_path&gt; &lt;class &#39;_asyncio.Task&#39;&gt;</span>
<span class="token comment"># 6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u5F53\u8C03\u7528<code>asyncio.run()</code>\u540E\uFF0C\u6267\u884C\u5230<code>create_task</code>\u65F6\uFF0C\u5F53\u524D\u4E3B\u7EBF\u7A0B\u91CC\u9762\u6709\u4E00\u4E2A<code>main</code>\u4EFB\u52A1\uFF0C\u4E00\u4E2A<code>foo</code>\u4EFB\u52A1</li><li>\u6B64\u65F6\u5E76\u4E0D\u4F1A\u6267\u884C<code>foo</code>\u4EFB\u52A1\uFF0C\u56E0\u4E3A\u6B64\u65F6\u5F02\u6B65\u4EFB\u52A1<code>main</code>\u5E76\u6CA1\u6709\u9047\u5230\u963B\u585E</li><li>\u76F4\u5230\u6267\u884C\u5230 <code>await task</code> \u65F6\uFF0C\u4E3B\u7EBF\u7A0B <code>main</code> \u9047\u5230\u963B\u585E\uFF0C\u624D\u56DE\u5207\u6362\u5230 <code>foo</code> \u53BB\u6267\u884C</li></ol></li><li><p>\u5176\u4ED6\u65B9\u5F0F\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>loop<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>coro<span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>	<span class="token comment"># asyncio.create_task \u5C31\u662F\u8C03\u7528\u8BE5\u65B9\u6CD5\u521B\u5EFA\u7684(\u5FEB\u6377\u65B9\u5F0F)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>asyncio<span class="token punctuation">.</span>ensure_future<span class="token punctuation">(</span>coro<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>	<span class="token comment"># \u4F4E\u7248\u672C\u7684\u521B\u5EFA\u65B9\u5F0F\uFF0C\u5728\u6240\u6709\u7248\u672C\u6709\u6548\uFF0C\u4F46\u53EF\u8BFB\u6027\u5DEE</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="_3-2-\u6267\u884C\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#_3-2-\u6267\u884C\u4EFB\u52A1" aria-hidden="true">#</a> 3.2 \u6267\u884C\u4EFB\u52A1</h3>`,3),nn={id:"asyncio-wait-aws-loop-none-timeout-none-return-when-all-completed",tabindex:"-1"},sn=n("a",{class:"header-anchor",href:"#asyncio-wait-aws-loop-none-timeout-none-return-when-all-completed","aria-hidden":"true"},"#",-1),an=t(`<blockquote><p>\u5E76\u53D1\u5730\u8FD0\u884C <em>fs</em> \u53EF\u8FED\u4EE3\u5BF9\u8C61\u4E2D\u7684 <a href="/back_end/python/base/%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/%E5%8D%8F%E7%A8%8B#33-await">\u53EF\u7B49\u5F85\u5BF9\u8C61</a> \u5E76\u8FDB\u5165\u963B\u585E\u72B6\u6001\u76F4\u5230\u6EE1\u8DB3 <em>return_when</em> \u6240\u6307\u5B9A\u7684\u6761\u4EF6\u3002</p></blockquote><ul><li><p>\u53C2\u6570\uFF1A</p><ul><li><code>aws: List[&lt;coroutine object&gt;]</code>\uFF1A \u5FC5\u987B\u662F\u53EF\u8FED\u4EE3\u7684 <code>\u534F\u7A0B\u5BF9\u8C61 | Tasks | Futures</code>\uFF0C\u4E0D\u80FD\u4E3A\u7A7A</li><li><code>loop: str = None</code>\uFF1A\u4E8B\u4EF6\u5FAA\u73AF</li><li><code>timeout: int = None</code>: \u8D85\u65F6\u65F6\u95F4</li><li><code>return_when: str = ALL_COMPLETED</code>: \u8FD4\u56DE\u6761\u4EF6\uFF0C\u9ED8\u8BA4\u503C\u4E3A <strong>ALL_COMPLETED</strong> \u5168\u90E8\u5B8C\u6210\uFF0C\u8FD8\u6709\u7B2C\u4E00\u4E2A\u5B8C\u6210 <strong>FIRST_COMPLETED</strong> \u548C\u7B2C\u4E00\u4E2A\u5F02\u5E38 <strong>FIRST_EXCEPTION</strong></li></ul></li><li><p>\u8FD4\u56DE\u503C\uFF1A</p><ul><li><code>\u4E24\u4E2ATask/Future\u96C6\u5408\uFF1A(done, pending) </code>: <ul><li><code>done: Set</code>: \u5305\u542B\u6240\u6709\u4EFB\u52A1\u7684\u8FD4\u56DE\u503C\u7684\u96C6\u5408</li><li><code>pending</code>\uFF1A\u53EA\u6709\u4F20\u5165 <em>timeout</em> \u8D85\u65F6\u53C2\u6570\u65F6\uFF0C\u624D\u6709\u53EF\u80FD\u4EA7\u751F <code>pending</code> \u5217\u8868</li></ul></li></ul></li><li><p>\u793A\u4F8B\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    task_list <span class="token operator">=</span> <span class="token punctuation">[</span>
        asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>foo<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;task1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>foo<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;task2&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span>
    done<span class="token punctuation">,</span> pending <span class="token operator">=</span> <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>wait<span class="token punctuation">(</span>task_list<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment"># \u4FEE\u6539\u8D85\u65F6\uFF0C\u5F97\u5230\u4E0D\u540C\u7ED3\u679C</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>done<span class="token punctuation">,</span> pending<span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C</span>
<span class="token comment"># \u672A\u8D85\u65F6\u6B63\u5E38\u8F93\u51FA\u7ED3\u679C\uFF1A</span>
<span class="token comment"># {&lt;Task finished name=&#39;task1&#39; coro=&lt;foo() done, defined at file_path&gt; result=6&gt;,</span>
<span class="token comment"># &lt;Task finished name=&#39;task2&#39; coro=&lt;foo() done, defined at file_path&gt; result=15&gt;}</span>

<span class="token comment"># \u8D85\u65F6\u72B6\u6001\uFF0Cpending\u7ED3\u679C\uFF1A</span>
<span class="token comment"># {&lt;Task pending name=&#39;task1&#39; coro=&lt;foo() running at file_path&gt; wait_for=&lt;Future pending cb=[&lt;TaskWakeupMethWrapper object at 0x0000019F8D6F52E0&gt;()]&gt;&gt;,</span>
<span class="token comment"># &lt;Task pending name=&#39;task2&#39; coro=&lt;foo() running at file_path&gt; wait_for=&lt;Future pending cb=[&lt;TaskWakeupMethWrapper object at 0x0000019F8D6F52B0&gt;()]&gt;&gt;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,2),en={id:"asyncio-gather-aws-loop-none-return-exceptions-false",tabindex:"-1"},tn=n("a",{class:"header-anchor",href:"#asyncio-gather-aws-loop-none-return-exceptions-false","aria-hidden":"true"},"#",-1),on=n("em",null,"\u5E76\u53D1",-1),pn=n("a",{href:"/back_end/python/base/%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/%E5%8D%8F%E7%A8%8B#33-await"},"\u53EF\u7B49\u5F85\u5BF9\u8C61",-1),cn=n("strong",null,"\u9002\u5408\u6709\u5E8F\u7ED3\u679C\u96C6",-1),ln=t(`<ul><li><p>\u53C2\u6570\uFF1A</p><ul><li><code>*aws:*list</code>\uFF1A\u82E5\u5E8F\u5217\u4E2D\u67D0\u4E2A\u53EF\u7B49\u5F85\u5BF9\u8C61\u4E3A\u534F\u7A0B\uFF0C\u5B83\u5C06\u81EA\u52A8\u88AB\u4F5C\u4E3A\u4E00\u4E2A\u4EFB\u52A1\u8C03\u5EA6\uFF08\u4F20\u534F\u7A0B\u4E5F\u53D8\u4EFB\u52A1\uFF09</li><li><code>loop</code>: \u53EF\u4F20\u5165\u4E8B\u4EF6\u5FAA\u73AF</li><li><code>return_exceptions = False</code>: \u4E3A <strong>True</strong> \u65F6\uFF0C\u5F02\u5E38\u4F1A\u548C\u6210\u529F\u7684\u7ED3\u679C\u4E00\u6837\u5904\u7406\uFF0C\u5E76\u805A\u5408\u81F3\u7ED3\u679C\u5217\u8868\u3002\u82E5\u5E8F\u5217\u4E2D\u7684\u4EFB\u4E00\u5BF9\u8C61\u88AB\u53D6\u6D88\uFF0C\u7B49\u540C\u4E8E\u89E6\u53D1 <code>CancelledError</code>\uFF0C\u4F46 <code>gather()</code> <strong>\u4E0D\u4F1A\u88AB\u53D6\u6D88</strong></li></ul></li><li><p>\u8FD4\u56DE\u503C\uFF1A</p><ul><li><code>result:List</code>: \u8FD4\u56DE\u4E00\u4E2A <strong>\u805A\u5408\u6240\u6709\u53EF\u7B49\u5F85\u5BF9\u8C61\u7684\u8FD4\u56DE\u503C</strong> \u7684\u5217\u8868</li></ul></li><li><p>\u793A\u4F8B\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> time
<span class="token keyword">import</span> asyncio


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">taskIO_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F00\u59CB\u8FD0\u884CIO\u4EFB\u52A11...&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;IO\u4EFB\u52A11\u5DF2\u5B8C\u6210\uFF0C\u8017\u65F63s&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> taskIO_1<span class="token punctuation">.</span>__name__


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">taskIO_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F00\u59CB\u8FD0\u884CIO\u4EFB\u52A12...&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;IO\u4EFB\u52A12\u5DF2\u5B8C\u6210\uFF0C\u8017\u65F62s&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> taskIO_2<span class="token punctuation">.</span>__name__


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    resualts <span class="token operator">=</span> <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>gather<span class="token punctuation">(</span>taskIO_1<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> taskIO_2<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># \u5B50\u751F\u6210\u5668</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>resualts<span class="token punctuation">)</span>


start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\u6240\u6709IO\u4EFB\u52A1\u603B\u8017\u65F6%.5f\u79D2&#39;</span> <span class="token operator">%</span> <span class="token builtin">float</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C\uFF1A</span>
<span class="token comment"># \u5F00\u59CB\u8FD0\u884CIO\u4EFB\u52A11...</span>
<span class="token comment"># \u5F00\u59CB\u8FD0\u884CIO\u4EFB\u52A12...</span>
<span class="token comment"># IO\u4EFB\u52A12\u5DF2\u5B8C\u6210\uFF0C\u8017\u65F62s</span>
<span class="token comment"># IO\u4EFB\u52A11\u5DF2\u5B8C\u6210\uFF0C\u8017\u65F63s</span>
<span class="token comment"># [&#39;taskIO_1&#39;, &#39;taskIO_2&#39;]</span>
<span class="token comment"># \u6240\u6709IO\u4EFB\u52A1\u603B\u8017\u65F63.00378\u79D2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,1),un={id:"asyncio-ascompleted-aws-loop-none-timeout-none",tabindex:"-1"},rn=n("a",{class:"header-anchor",href:"#asyncio-ascompleted-aws-loop-none-timeout-none","aria-hidden":"true"},"#",-1),dn={href:"http://asyncio.as",target:"_blank",rel:"noopener noreferrer"},kn=n("em",null,"completed`(_aws",-1),vn=n("em",null,"loop=None",-1),mn=n("em",null,"\u5E76\u53D1",-1),bn=n("a",{href:"/back_end/python/base/%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/%E5%8D%8F%E7%A8%8B#33-await"},"\u53EF\u7B49\u5F85\u5BF9\u8C61",-1),_n=n("strong",null,"\u8FED\u4EE3\u5668",-1),hn=n("strong",null,"\u5F97\u5230\u6700\u5FEB\u6267\u884C\u5B8C\u7684\u4EFB\u52A1\u7ED3\u679C",-1),yn=n("p",null,"\u53C2\u6570\uFF1A",-1),gn=n("li",null,[n("code",null,"aws: List[<coroutine object>]"),s("\uFF1A \u5FC5\u987B\u662F\u53EF\u8FED\u4EE3\u7684 "),n("code",null,"\u534F\u7A0B\u5BF9\u8C61 | Tasks | Futures"),s("\uFF0C\u4E0D\u80FD\u4E3A\u7A7A")],-1),fn=n("li",null,[n("code",null,"loop: str = None"),s("\uFF1A\u4E8B\u4EF6\u5FAA\u73AF")],-1),wn=n("code",null,"timeout: int = None",-1),En={href:"https://docs.python.org/zh-cn/3/library/asyncio-exceptions.html#asyncio.TimeoutError",target:"_blank",rel:"noopener noreferrer"},xn=n("code",null,"asyncio.TimeoutError",-1),An=t(`<li><p>\u8FD4\u56DE\u503C\uFF1A</p><ul><li><code>result:generator</code>: \u8FD4\u56DE\u4E00\u4E2A\u751F\u6210\u5668\u5BF9\u8C61\uFF0C\u53EF\u8FED\u4EE3\u83B7\u53D6\u7ED3\u679C</li></ul></li><li><p>\u793A\u4F8B\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    task_list <span class="token operator">=</span> <span class="token punctuation">[</span>
        asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>foo<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;task1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>foo<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;task2&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span>
    <span class="token keyword">for</span> task <span class="token keyword">in</span> asyncio<span class="token punctuation">.</span>as_completed<span class="token punctuation">(</span>task_list<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        ret <span class="token operator">=</span> <span class="token keyword">await</span> task
        <span class="token keyword">print</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C\uFF1A</span>
<span class="token comment"># 6</span>
<span class="token comment"># 15</span>

<span class="token comment">### or</span>
<span class="token comment"># asyncio.exceptions.TimeoutError</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,2),Bn=n("h3",{id:"_3-3-\u83B7\u53D6\u7ED3\u679C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-3-\u83B7\u53D6\u7ED3\u679C","aria-hidden":"true"},"#"),s(" 3.3 \u83B7\u53D6\u7ED3\u679C")],-1),qn={id:"task-adddone-callback-callback-context-none",tabindex:"-1"},Fn=n("a",{class:"header-anchor",href:"#task-adddone-callback-callback-context-none","aria-hidden":"true"},"#",-1),Tn=n("em",null,"done_callback(_callback",-1),In=n("blockquote",null,[n("p",null,[s("\u6DFB\u52A0\u4E00\u4E2A\u56DE\u8C03\uFF0C\u5C06\u5728 "),n("code",null,"Task"),s(" \u5BF9\u8C61 "),n("strong",null,"\u5B8C\u6210"),s(" \u65F6\u88AB\u8FD0\u884C\uFF0C\u6B64\u65B9\u6CD5\u5E94\u4EC5\u5728\u4F4E\u5C42\u7EA7\u3001\u57FA\u4E8E\u56DE\u8C03\u7684\u4EE3\u7801\u4E2D\u4F7F\u7528")])],-1),Cn={id:"task-result",tabindex:"-1"},Dn=n("a",{class:"header-anchor",href:"#task-result","aria-hidden":"true"},"#",-1),Nn=n("blockquote",null,[n("p",null,[s("\u8FD4\u56DE "),n("code",null,"Task"),s(" \u7684\u7ED3\u679C")])],-1),On=n("p",null,"\u8FD4\u56DE\u503C\uFF1A",-1),Pn=n("li",null,[s("\u5982\u679C "),n("code",null,"task"),s(" \u72B6\u6001\u4E3A "),n("code",null,"Done"),s("\uFF0C\u5176\u5C01\u5305\u7684\u534F\u7A0B\u7684\u7ED3\u679C\u4F1A\u88AB\u8FD4\u56DE (\u6216\u8005\u5F53\u534F\u7A0B\u5F15\u53D1\u5F02\u5E38\u65F6\uFF0C\u8BE5\u5F02\u5E38\u4F1A\u88AB\u91CD\u65B0\u5F15\u53D1)")],-1),Wn=n("code",null,"task",-1),jn=n("code",null,"Cancelled",-1),Mn={href:"https://docs.python.org/zh-cn/3/library/asyncio-exceptions.html#asyncio.CancelledError",target:"_blank",rel:"noopener noreferrer"},zn=n("code",null,"CancelledError",-1),Ln=n("code",null,"task",-1),Rn=n("code",null,"Pending",-1),Sn=n("code",null,"Running",-1),Vn={href:"https://docs.python.org/zh-cn/3/library/asyncio-exceptions.html#asyncio.InvalidStateError",target:"_blank",rel:"noopener noreferrer"},Kn=n("code",null,"InvalidStateError",-1),Xn=t(`<li><p>\u793A\u4F8B\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">foo</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Run foo() num is </span><span class="token interpolation"><span class="token punctuation">{</span>num<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;return num is </span><span class="token interpolation"><span class="token punctuation">{</span>num<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>


<span class="token keyword">def</span> <span class="token function">callback</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;callback: </span><span class="token interpolation"><span class="token punctuation">{</span>task<span class="token punctuation">.</span>result<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>

    coroutine <span class="token operator">=</span> foo<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>

    task <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>ensure_future<span class="token punctuation">(</span>coroutine<span class="token punctuation">)</span>
    task<span class="token punctuation">.</span>add_done_callback<span class="token punctuation">(</span>callback<span class="token punctuation">)</span>  <span class="token comment"># \u6DFB\u52A0\u6267\u884C\u5B8C\u4E4B\u540E\u7684\u56DE\u8C03</span>

    loop<span class="token punctuation">.</span>run_until_complete<span class="token punctuation">(</span>task<span class="token punctuation">)</span>
    loop<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

    end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span>

<span class="token comment"># or</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>

    coroutine <span class="token operator">=</span> foo<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

    task <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>coroutine<span class="token punctuation">)</span>
    <span class="token keyword">await</span> task
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;callback: </span><span class="token interpolation"><span class="token punctuation">{</span>task<span class="token punctuation">.</span>result<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

    end <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span>


asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C\uFF1A</span>
<span class="token comment"># Run foo() num is 1</span>
<span class="token comment"># callback: return num is 1</span>
<span class="token comment"># 0.0009970664978027344</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>task.add_done_callback(callback):</code> \u7ED1\u5B9A\u56DE\u8C03\uFF0C\u5F53 <code>coroutine</code> \u6267\u884C\u7ED3\u675F\u65F6\u8C03\u7528\u56DE\u8C03\u51FD\u6570\u7684 <code>task.result()</code> \u6253\u5370\u4EFB\u52A1\u7ED3\u679C</p></li>`,2),Gn=t(`<h3 id="_3-4-\u53D6\u6D88\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#_3-4-\u53D6\u6D88\u4EFB\u52A1" aria-hidden="true">#</a> 3.4 \u53D6\u6D88\u4EFB\u52A1</h3><p>\u5982\u679C\u9700\u8981\u505C\u6B62\u4E8B\u4EF6\u5FAA\u73AF\uFF0C\u5C31\u9700\u8981\u5148\u628A task \u53D6\u6D88\u3002\u53EF\u4EE5\u4F7F\u7528 asyncio.Task \u83B7\u53D6\u4E8B\u4EF6\u5FAA\u73AF\u7684 task</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> time


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">do_some_work</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Waiting: &#39;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token string">&#39;Done after {}s&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    coroutine1 <span class="token operator">=</span> do_some_work<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    coroutine2 <span class="token operator">=</span> do_some_work<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    coroutine3 <span class="token operator">=</span> do_some_work<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>

    tasks <span class="token operator">=</span> <span class="token punctuation">[</span>
        asyncio<span class="token punctuation">.</span>ensure_future<span class="token punctuation">(</span>coroutine1<span class="token punctuation">)</span><span class="token punctuation">,</span>
        asyncio<span class="token punctuation">.</span>ensure_future<span class="token punctuation">(</span>coroutine2<span class="token punctuation">)</span><span class="token punctuation">,</span>
        asyncio<span class="token punctuation">.</span>ensure_future<span class="token punctuation">(</span>coroutine3<span class="token punctuation">)</span>
    <span class="token punctuation">]</span>

    now <span class="token operator">=</span> <span class="token keyword">lambda</span><span class="token punctuation">:</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
    start <span class="token operator">=</span> now<span class="token punctuation">(</span><span class="token punctuation">)</span>

    loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        loop<span class="token punctuation">.</span>run_until_complete<span class="token punctuation">(</span>asyncio<span class="token punctuation">.</span>wait<span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> KeyboardInterrupt <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;all_tasks&quot;</span><span class="token punctuation">,</span> asyncio<span class="token punctuation">.</span>all_tasks<span class="token punctuation">(</span>loop<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> task <span class="token keyword">in</span> asyncio<span class="token punctuation">.</span>all_tasks<span class="token punctuation">(</span>loop<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>cancel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment"># print(&quot;gather&quot;, asyncio.gather(*asyncio.all_tasks(loop)).cancel())  # \u6216\u4F7F\u7528\u8FD9\u79CD\u65B9\u5F0Fcancel\u4E5F\u4E00\u6837</span>
        loop<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>
        loop<span class="token punctuation">.</span>run_forever<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">finally</span><span class="token punctuation">:</span>
        loop<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;TIME: &#39;</span><span class="token punctuation">,</span> now<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">)</span>


main<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C</span>
<span class="token comment"># Waiting:  1</span>
<span class="token comment"># Waiting:  2</span>
<span class="token comment"># Waiting:  2</span>
<span class="token comment"># all_tasks {&lt;Task pending name=&#39;Task-4&#39; coro=&lt;wait() running at D:\\Miniconda3\\lib\\asyncio\\tasks.py:413&gt; wait_for=&lt;Future pending cb=[&lt;TaskWakeupMethWrapper object at 0x0000016826BFCAC0&gt;()]&gt;&gt;, &lt;Task pending name=&#39;Task-2&#39; coro=&lt;do_some_work() running at path&gt; wait_for=&lt;Future pending cb=[&lt;TaskWakeupMethWrapper object at 0x0000016826BFC970&gt;()]&gt; cb=[_wait.&lt;locals&gt;._on_completion() at D:\\Minicond</span>
<span class="token comment"># a3\\lib\\asyncio\\tasks.py:513]&gt;, &lt;Task pending name=&#39;Task-3&#39; coro=&lt;do_some_work() running at D:\\Python Program\\huan-plan\\backend\\huan\\utils\\tests\\test_zz.py:365&gt; wait_for=&lt;Future pending cb=[&lt;TaskWakeupMethWrapper object at 0x0000</span>
<span class="token comment"># 016826BFC9A0&gt;()]&gt; cb=[_wait.&lt;locals&gt;._on_completion() at path]&gt;, &lt;Task pending name=&#39;Task-1&#39; coro=&lt;do_some_work() running at path&gt;</span>
<span class="token comment"># wait_for=&lt;Future pending cb=[&lt;TaskWakeupMethWrapper object at 0x0000016826BFC940&gt;()]&gt; cb=[_wait.&lt;locals&gt;._on_completion() at poath]&gt;}</span>
<span class="token comment"># True</span>
<span class="token comment"># True</span>
<span class="token comment"># True</span>
<span class="token comment"># True</span>
<span class="token comment"># TIME:  0.6261041164398193</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>asyncio.Task.all_tasks():\u53D6\u5230\u6240\u6709 task</p></li><li><p>task.cancel(): \u5173\u4E8E\u505C\u6B62\u534F\u7A0B\uFF1A</p><ul><li>\u9700\u8981\u5148\u53D6\u6D88 task\uFF0C\u5229\u7528 for task in asyncio.Task.all_tasks(): task.cancel()</li><li>\u505C\u6B62 loop \u4E8B\u4EF6\u5FAA\u73AF\u3002\u5229\u7528 loop.stop()</li></ul></li></ul><p>\u6CE8\uFF1A \u542F\u52A8\u4E8B\u4EF6\u5FAA\u73AF\u4E4B\u540E\uFF0C\u9A6C\u4E0A ctrl+c\uFF0C\u4F1A\u89E6\u53D1 run_until_complete \u7684\u6267\u884C\u5F02\u5E38 KeyBorardInterrupt\u3002\u7136\u540E\u901A\u8FC7\u5FAA\u73AF asyncio.Task \u53D6\u6D88 future\u3002</p><h2 id="_4-future-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_4-future-\u5BF9\u8C61" aria-hidden="true">#</a> 4. Future \u5BF9\u8C61</h2>`,6),Hn={href:"https://docs.python.org/zh-cn/3/library/asyncio-future.html#asyncio-futures",target:"_blank",rel:"noopener noreferrer"},Jn=t(`<ol><li><p><code>Task</code> \u5BF9\u8C61\u7684\u57FA\u7C7B\uFF0C\u7528\u6765\u94FE\u63A5<strong>\u5E95\u5C42\u56DE\u8C03\u5F0F\u4EE3\u7801</strong> \u548C \u9AD8\u5C42<code>\u5F02\u6B65|\u7B49\u5F85\u5F0F</code>\u4EE3\u7801\uFF0C\u662F\u66F4\u5E95\u5C42\u63A5\u53E3\uFF0C\u5E2E\u52A9\u7B49\u5F85\u5F02\u6B65\u7684\u7ED3\u679C</p></li><li><p>\u4E00\u4E2A<code>Future</code>\u4EE3\u8868\u4E00\u4E2A\u5F02\u6B65\u8FD0\u7B97\u7684\u6700\u7EC8\u7ED3\u679C\uFF0C\u7EBF\u7A0B\u4E0D\u5B89\u5168</p></li><li><p>\u4EE3\u8868<strong>\u5C06\u6765\u6267\u884C</strong> \u6216 <strong>\u6CA1\u6709\u6267\u884C</strong> \u7684\u4EFB\u52A1\u7684\u7ED3\u679C\uFF0C\u5B83\u548C <code>task</code> \u6CA1\u6709\u672C\u8D28\u7684\u533A\u522B</p><blockquote><p>\u53EF\u4EE5\u8BF4\uFF1Afuture \u5C31\u662F\u5B58\u653E\u7740\u4F17\u591A task \u6216 future \u7684\u5BB9\u5668\uFF0C\u6216\u662F\u5305\u542B\u4F17\u591A\u534F\u7A0B\u7684\u4E00\u4E2A\u5927\u534F\u7A0B</p></blockquote></li></ol><h3 id="_4-1-\u521B\u5EFA-future" tabindex="-1"><a class="header-anchor" href="#_4-1-\u521B\u5EFA-future" aria-hidden="true">#</a> 4.1 \u521B\u5EFA Future</h3><p><strong>loop.create_future()</strong></p><blockquote><p>\u521B\u5EFA\u4E00\u4E2A <strong>\u9644\u52A0\u5230\u4E8B\u4EF6\u5FAA\u73AF\u4E2D</strong> \u7684 <a href="/back_end/python/base/%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/%E5%8D%8F%E7%A8%8B#35-future%E5%AF%B9%E8%B1%A1">asyncio.Future</a> \u5BF9\u8C61\uFF0C\u521B\u5EFA Futures \u7684<strong>\u9996\u9009\u65B9\u5F0F</strong>\u3002</p></blockquote><p>\u793A\u4F8B\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># \u83B7\u53D6\u5F53\u524D\u7684\u4E8B\u4EF6\u5FAA\u73AF</span>
    loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_running_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># \u521B\u5EFA\u4E86\u4E00\u4E2A future\u5BF9\u8C61\uFF0C\u4E0D\u6267\u884C\u4EFB\u52A1\uFF0C\u4EC0\u4E48\u4E5F\u6CA1\u5E72</span>
    future <span class="token operator">=</span> loop<span class="token punctuation">.</span>create_future<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># \u7B49\u5F85\u6267\u884C\u4EFB\u52A1 (future\u5BF9\u8C61)\u7684\u7ED3\u679C\uFF0C\u6CA1\u6709\u7ED3\u679C\u4F1A\u4E00\u76F4\u963B\u585E</span>
    ret <span class="token operator">=</span> <span class="token keyword">await</span> future
    <span class="token keyword">print</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span>


asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C\uFF1A \u5361\u6B7B\uFF0C\u65E0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),Qn=n("h3",{id:"_4-2-\u8BBE\u7F6E-future-\u7ED3\u679C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4-2-\u8BBE\u7F6E-future-\u7ED3\u679C","aria-hidden":"true"},"#"),s(" 4.2 \u8BBE\u7F6E Future \u7ED3\u679C")],-1),Un=t(`<blockquote><p>\u5C06 Future \u6807\u8BB0\u4E3A <strong>\u5B8C\u6210</strong> \u5E76\u8BBE\u7F6E\u7ED3\u679C\uFF0C\u82E5 <em>\u5728\u6807\u8BB0\u524D\u5C31\u5DF2\u5B8C\u6210</em> \u5219\u629B\u51FA\u4E00\u4E2A <code>InvalidStateError</code> \u5F02\u5E38\u3002</p></blockquote><p>\u793A\u4F8B\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">set_future</span><span class="token punctuation">(</span>future<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u6267\u884C\u4EFB\u52A1\u524D\u7684Future\u5BF9\u8C61:&quot;</span><span class="token punctuation">,</span> future<span class="token punctuation">)</span>
    ret <span class="token operator">=</span> <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
    future<span class="token punctuation">.</span>set_result<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BBE\u7F6E\u8FD4\u56DE\u503C\u540E\u7684Future\u5BF9\u8C61:&quot;</span><span class="token punctuation">,</span> future<span class="token punctuation">)</span>
    <span class="token keyword">return</span> ret


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_running_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>

    fut <span class="token operator">=</span> loop<span class="token punctuation">.</span>create_future<span class="token punctuation">(</span><span class="token punctuation">)</span>

    task_result <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>set_future<span class="token punctuation">(</span>fut<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u83B7\u53D6\u4EFB\u52A1\u5BF9\u8C61\uFF08\u672A\u6267\u884C\uFF09:&quot;</span><span class="token punctuation">,</span> task_result<span class="token punctuation">)</span>

    <span class="token comment"># \u6B64\u65F6\u4E3B\u7EBF\u7A0B\u963B\u585E\uFF0C\u4E8B\u4EF6\u5FAA\u73AF\u81EA\u52A8\u5207\u6362\u5230task\u4EFB\u52A1\u5E76\u6267\u884C\uFF0C\u76F4\u5230\u7B49\u5230\u4E86future\u7684\u8FD4\u56DE\u7ED3\u679C</span>
    future_result <span class="token operator">=</span> <span class="token keyword">await</span> fut
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\u83B7\u53D6Future\u8FD4\u56DE\u503C:&quot;</span><span class="token punctuation">,</span> future_result<span class="token punctuation">)</span>


asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C\uFF1A</span>
<span class="token comment"># \u83B7\u53D6\u4EFB\u52A1\u5BF9\u8C61\uFF08\u672A\u6267\u884C\uFF09: &lt;Task pending name=&#39;Task-2&#39; coro=&lt;set_future() running at path&gt;&gt;</span>
<span class="token comment"># \u6267\u884C\u4EFB\u52A1\u524D\u7684Future\u5BF9\u8C61: &lt;Future pending cb=[&lt;TaskWakeupMethWrapper object at 0x000001F20E5B5430&gt;()]&gt;</span>
<span class="token comment"># \u8BBE\u7F6E\u8FD4\u56DE\u503C\u540E\u7684Future\u5BF9\u8C61: &lt;Future finished result=1&gt;</span>
<span class="token comment"># \u83B7\u53D6Future\u8FD4\u56DE\u503C: 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>future</code>\u5BF9\u8C61\u7528\u4E8E\u7B49\u5F85\u7ED3\u679C\uFF0C\u7136\u540E\u8BA9<code>task</code>\u6765\u5904\u7406\u8FC7\u7A0B\uFF0C<code>task</code>\u5185\u90E8\u4F1A\u81EA\u52A8\u6267\u884C <code>set_result</code> \u6765\u4F7F\u4EFB\u52A1\u5B8C\u6210</li></ul><h3 id="_4-3-\u8FDB\u7EBF\u7A0B\u3001\u534F\u7A0B\u6DF7\u7528" tabindex="-1"><a class="header-anchor" href="#_4-3-\u8FDB\u7EBF\u7A0B\u3001\u534F\u7A0B\u6DF7\u7528" aria-hidden="true">#</a> 4.3 \u8FDB\u7EBF\u7A0B\u3001\u534F\u7A0B\u6DF7\u7528</h3>`,5),Yn=n("h4",{id:"\u540C\u6B65\u53D8-future",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u540C\u6B65\u53D8-future","aria-hidden":"true"},"#"),s(" \u540C\u6B65\u53D8 Future")],-1),Zn=n("blockquote",null,[n("p",null,[s("\u4F7F\u7528"),n("code",null,"concurrent.futures.Executor"),s("\u7684\u6267\u884C\u5668 \u8C03\u5EA6 "),n("em",null,"func"),s("\uFF0C\u5E76\u8FD4\u56DE "),n("strong",null,"\u534F\u7A0B\u7684 Future \u5BF9\u8C61")])],-1),$n=t('<li><p>\u53C2\u6570\uFF1A</p><ul><li><code>executor = None</code>\uFF1A\u5FC5\u987B\u662F <a href=""><code>concurrent.futures.Executor</code></a> \u5B9E\u4F8B, \u5982\u679C\u4E3A None\uFF0C\u5219\u4F7F\u7528\u9ED8\u8BA4\u7684 <code>Executor</code> \u5373 <code>ThreadPoolExecutor</code></li><li><code>func|*args</code>: \u672C\u8D28\u662F\u4F5C\u4E3A \u8C03\u7528 Executor \u4E2D <a href=""><code>submit(fn, /, *args, **kwargs)</code></a> \u6240\u9700\u7684\u53C2\u6570</li></ul></li><li><p>\u8FD4\u56DE\u503C\uFF1A</p><ul><li><code>\u534F\u7A0B\u5BF9\u8C61: &lt;class &#39;_asyncio.Future&#39;&gt;</code>: \u8FD4\u56DE\u4E86 <a href="/back_end/python/base/%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/%E5%8D%8F%E7%A8%8B#%E5%8F%AF%E7%AD%89%E5%BE%85%E5%AF%B9%E8%B1%A1awaitable"><em>awaitable</em></a> \u7684 Future \u5BF9\u8C61</li></ul></li>',2),ns=t(`<p>\u793A\u4F8B:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> time
<span class="token keyword">import</span> asyncio


<span class="token keyword">def</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># \u67D0\u4E2A\u8017\u65F6\u64CD\u4F5C</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token string">&quot;over&quot;</span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_running_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># \u4F7F\u7528.run_in_executor() \u8FD4\u56DE\u4E00\u4E2A asyncio.Future\u5BF9\u8C61\uFF0C\u5C06\u666E\u901Afunction \u53D8\u4E3A Future\u5BF9\u8C61</span>
    future <span class="token operator">=</span> loop<span class="token punctuation">.</span>run_in_executor<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> func1<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;future&quot;</span><span class="token punctuation">,</span> future<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>future<span class="token punctuation">)</span><span class="token punctuation">)</span>

    ret <span class="token operator">=</span> <span class="token keyword">await</span> future
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;result:&quot;</span><span class="token punctuation">,</span> ret<span class="token punctuation">,</span> future<span class="token punctuation">)</span>


asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C</span>
<span class="token comment"># future &lt;Future pending cb=[_chain_future.&lt;locals&gt;._call_check_cancel() at path&gt; &lt;class &#39;_asyncio.Future&#39;&gt;</span>
<span class="token comment"># result: over &lt;Future finished result=&#39;over&#39;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),ss=n("li",null,[s("step1\uFF1A\u5185\u90E8\u4F1A\u5148\u9ED8\u8BA4\u4F7F\u7528"),n("code",null,"ThreadPoolExecutor"),s(" \u7684\u5B9E\u4F8B\uFF0C\u901A\u8FC7"),n("code",null,"submit()"),s("\u53BB\u7EBF\u7A0B\u6C60\u7533\u8BF7\u4E00\u4E2A\u7EBF\u7A0B\u6267\u884C"),n("code",null,"func1"),s(" \uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A "),n("code",null,"concurrent.futures.Future"),s(" \u5BF9\u8C61")],-1),as=n("code",null,"concurrent.futures.Future",-1),es=n("code",null,"asyncio.Future",-1),ts=t(`<li><p>\u542B\u5B9E\u4F8B\u793A\u4F8B\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_running_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># 2. Run in a custom thread pool:</span>
    <span class="token keyword">with</span> concurrent<span class="token punctuation">.</span>futures<span class="token punctuation">.</span>ThreadPoolExecutor<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> pool<span class="token punctuation">:</span>
        future <span class="token operator">=</span> loop<span class="token punctuation">.</span>run_in_executor<span class="token punctuation">(</span>
            pool<span class="token punctuation">,</span> func1<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;custom thread pool&#39;</span><span class="token punctuation">,</span> future<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>future<span class="token punctuation">)</span><span class="token punctuation">)</span>
        ret <span class="token operator">=</span> <span class="token keyword">await</span> future
        <span class="token keyword">print</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span>

    <span class="token comment"># 3. Run in a custom process pool:</span>
    <span class="token keyword">with</span> concurrent<span class="token punctuation">.</span>futures<span class="token punctuation">.</span>ProcessPoolExecutor<span class="token punctuation">(</span>max_workers<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">as</span> pool<span class="token punctuation">:</span>
        future <span class="token operator">=</span> loop<span class="token punctuation">.</span>run_in_executor<span class="token punctuation">(</span>
            pool<span class="token punctuation">,</span> func1<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;custom process pool&#39;</span><span class="token punctuation">,</span> future<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>future<span class="token punctuation">)</span><span class="token punctuation">)</span>
        ret <span class="token operator">=</span> <span class="token keyword">await</span> future
        <span class="token keyword">print</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C</span>
<span class="token comment"># custom thread pool &lt;Future pending cb=[_chain_future.&lt;locals&gt;._call_check_cancel() at path]&gt; &lt;class &#39;_asyncio.Future&#39;&gt;</span>
<span class="token comment"># over</span>
<span class="token comment"># custom process pool &lt;Future pending cb=[_chain_future.&lt;locals&gt;._call_check_cancel() at path]&gt; &lt;class &#39;_asyncio.Future&#39;&gt;</span>
<span class="token comment"># over</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u6CE8\uFF1Awindows \u73AF\u5883\u4E0B\uFF0C\u8FDB\u7A0B\u6C60\u6267\u884C\u4E5F\u8BB8\u4F1A\u51FA\u73B0\u5F02\u5E38\uFF0C\u4F46 linux \u4E0B\u8FD0\u884C\u6B63\u5E38</p></blockquote></li>`,1),os=t(`<h4 id="_3-6-2-\u6DF7\u7528\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#_3-6-2-\u6DF7\u7528\u793A\u4F8B" aria-hidden="true">#</a> 3.6.2 \u6DF7\u7528\u793A\u4F8B</h4><p>\u5199\u4E00\u4E2A\u540C\u6B65 <code>request</code> \u53D8\u5F02\u6B65\u7684\u4F8B\u5B50</p><ul><li><p>\u793A\u4F8B:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> time
<span class="token keyword">import</span> concurrent<span class="token punctuation">.</span>futures
<span class="token keyword">import</span> requests


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">download</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;start download:&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span>
    loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_running_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># requests\u6A21\u5757\u9ED8\u8BA4\u4E0D\u652F\u6301\u5F02\u6B65\u64CD\u4F5C\uFF0C\u6B64\u5904\u4F7F\u7528\u7EBF\u7A0B\u6C60\u6539\u4E3A\u534F\u7A0BFuture</span>
    data <span class="token operator">=</span> <span class="token keyword">await</span> loop<span class="token punctuation">.</span>run_in_executor<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">,</span> url<span class="token punctuation">)</span>

    file_name <span class="token operator">=</span> data<span class="token punctuation">.</span>url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_name<span class="token punctuation">,</span> <span class="token string">&quot;wb&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">.</span>content<span class="token punctuation">)</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;end download: </span><span class="token interpolation"><span class="token punctuation">{</span>file_name<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
    url_list <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;http://www.igarashi.fun:8999/img/Django.png&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;http://www.igarashi.fun:8999/img/antd.png&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;http://www.igarashi.fun:8999/img/etcd.png&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>

    <span class="token comment"># \u521B\u5EFA\u591A\u4E2A\u534F\u7A0B</span>
    tasks <span class="token operator">=</span> <span class="token punctuation">[</span>asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>download<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> url <span class="token keyword">in</span> url_list<span class="token punctuation">]</span>

    <span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">except_foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RuntimeError

    tasks<span class="token punctuation">.</span>append<span class="token punctuation">(</span>asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>except_foo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    ret <span class="token operator">=</span> <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>gather<span class="token punctuation">(</span><span class="token operator">*</span>tasks<span class="token punctuation">,</span> return_exceptions<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;ret&quot;</span><span class="token punctuation">,</span> ret<span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">)</span>


asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">### \u8F93\u51FA\u7ED3\u679C</span>
<span class="token comment"># start download: http://www.igarashi.fun:8999/img/Django.png</span>
<span class="token comment"># start download: http://www.igarashi.fun:8999/img/antd.png</span>
<span class="token comment"># start download: http://www.igarashi.fun:8999/img/etcd.png</span>
<span class="token comment"># ret [&#39;end download: Django.png&#39;, &#39;end download: antd.png&#39;, &#39;end download: etcd.png&#39;, RuntimeError()]</span>
<span class="token comment"># 2.351871967315674</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,3),ps=t(`<h2 id="_5-\u5F02\u6B65\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#_5-\u5F02\u6B65\u8FED\u4EE3\u5668" aria-hidden="true">#</a> 5. \u5F02\u6B65\u8FED\u4EE3\u5668</h2><h3 id="_5-1-\u5F02\u6B65\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#_5-1-\u5F02\u6B65\u8FED\u4EE3\u5668" aria-hidden="true">#</a> 5.1 \u5F02\u6B65\u8FED\u4EE3\u5668</h3><p><strong>\u56DE\u987E</strong>\uFF1A\u4EC0\u4E48\u662F <a href="/back_end/python/base/%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/%E8%BF%AD%E4%BB%A3%E5%99%A8">\u8FED\u4EE3\u5668</a></p><h5 id="\u4EC0\u4E48\u662F\u5F02\u6B65\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u5F02\u6B65\u8FED\u4EE3\u5668" aria-hidden="true">#</a> <strong>\u4EC0\u4E48\u662F\u5F02\u6B65\u8FED\u4EE3\u5668</strong></h5><ul><li>\u5B9E\u73B0\u4E86<code>__aiter__()</code> \u548C <code>__anext__()</code> \u65B9\u6CD5\u7684\u5BF9\u8C61 <ul><li><code>__aiter__()</code> \u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A <em>\u5F02\u6B65\u8FED\u4EE3\u5668</em> \u5BF9\u8C61</li><li><code>__anext__()</code> \u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A <a href="/back_end/python/base/%E8%B5%84%E6%BA%90%E8%B0%83%E5%BA%A6/%E5%8D%8F%E7%A8%8B#%E5%8F%AF%E7%AD%89%E5%BE%85%E5%AF%B9%E8%B1%A1awaitable"><em>awaitable</em></a> \u5BF9\u8C61\u8F93\u51FA\u8FED\u4EE3\u5668\u4E0B\u4E00\u7ED3\u679C\u7684\u503C\uFF0C\u8FED\u4EE3\u7ED3\u675F\u4F1A\u5F15\u53D1 <code>StopAsyncIteration</code> \u5F02\u5E38</li></ul></li><li><code>async_for</code> \u4F1A\u5904\u7406\u5F02\u6B65\u8FED\u4EE3\u5668\u7684 <code>__anext__()</code> \u65B9\u6CD5\u6240\u8FD4\u56DE\u7684\u53EF\u7B49\u5F85\u5BF9\u8C61\uFF0C\u76F4\u5230\u5176\u5F15\u53D1\u4E00\u4E2A <code>StopAsyncIteration</code> \u5F02\u5E38</li></ul><h5 id="\u4EC0\u4E48\u662F\u5F02\u6B65\u53EF\u8FED\u4EE3\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u662F\u5F02\u6B65\u53EF\u8FED\u4EE3\u5BF9\u8C61" aria-hidden="true">#</a> <strong>\u4EC0\u4E48\u662F\u5F02\u6B65\u53EF\u8FED\u4EE3\u5BF9\u8C61</strong></h5><ul><li>\u53EF\u5728 <code>async_for</code> \u8BED\u53E5\u4E2D\u88AB\u4F7F\u7528\u7684\u5BF9\u8C61</li><li>\u5FC5\u987B\u901A\u8FC7\u5B83\u7684 <code>__aiter__()</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A <code>asynchronous iterator</code></li></ul><h2 id="_6-\u5F02\u6B65\u4E0A\u4E0B\u6587\u7BA1\u7406\u5668" tabindex="-1"><a class="header-anchor" href="#_6-\u5F02\u6B65\u4E0A\u4E0B\u6587\u7BA1\u7406\u5668" aria-hidden="true">#</a> 6. \u5F02\u6B65\u4E0A\u4E0B\u6587\u7BA1\u7406\u5668</h2><h3 id="_6-1-async-with" tabindex="-1"><a class="header-anchor" href="#_6-1-async-with" aria-hidden="true">#</a> 6.1 async with</h3><p>\u5F02\u6B65\u4E0A\u4E0B\u6587\u7BA1\u7406\u5668\u6307\u7684\u662F\u5728 enter \u548C exit \u65B9\u6CD5\u5904\u80FD\u591F\u6682\u505C\u6267\u884C\u7684\u4E0A\u4E0B\u6587\u7BA1\u7406\u5668\u3002 \u4E3A\u4E86\u5B9E\u73B0\u8FD9\u6837\u7684\u529F\u80FD\uFF0C\u9700\u8981\u52A0\u5165\u4E24\u4E2A\u65B0\u7684\u65B9\u6CD5\uFF1A<strong>aenter</strong> \u548C<strong>aexit</strong>\u3002\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u90FD\u8981\u8FD4\u56DE\u4E00\u4E2A awaitable \u7C7B\u578B\u7684\u503C\u3002</p><p>\u5F02\u6B65\u4E0A\u4E0B\u6587\u7BA1\u7406\u5668\u7684\u4E00\u79CD\u4F7F\u7528\u65B9\u6CD5\u662F:</p><pre><code>class AsyncContextManager:
    async def __aenter__(self):
        await log(&#39;entering context&#39;)

    async def __aexit__(self, exc_type, exc, tb):
        await log(&#39;exiting context&#39;)
</code></pre><p>\u3010\u65B0\u8BED\u6CD5\u3011\uFF1A \u5F02\u6B65\u4E0A\u4E0B\u6587\u7BA1\u7406\u5668\u4F7F\u7528\u4E00\u79CD\u65B0\u7684\u8BED\u6CD5:</p><pre><code>async with EXPR as VAR:
    BLOCK
</code></pre><p>\u8FD9\u6BB5\u4EE3\u7801\u5728\u8BED\u4E49\u4E0A\u7B49\u540C\u4E8E\uFF1A</p><pre><code>mgr = (EXPR)
aexit = type(mgr).__aexit__
aenter = type(mgr).__aenter__(mgr)
exc = True

VAR = await aenter
try:
    BLOCK
except:
    if not await aexit(mgr, *sys.exc_info()):
        raise
else:
    await aexit(mgr, None, None, None)
</code></pre><ul><li>\u548C\u5E38\u89C4\u7684 with \u8868\u8FBE\u5F0F\u4E00\u6837\uFF0C\u53EF\u4EE5\u5728\u4E00\u4E2A async with \u8868\u8FBE\u5F0F\u4E2D\u6307\u5B9A\u591A\u4E2A\u4E0A\u4E0B\u6587\u7BA1\u7406\u5668\u3002</li><li>\u5982\u679C\u5411 async with \u8868\u8FBE\u5F0F\u4F20\u5165\u7684\u4E0A\u4E0B\u6587\u7BA1\u7406\u5668\u4E2D\u6CA1\u6709<strong>aenter</strong> \u548C<strong>aexit</strong>\u65B9\u6CD5\uFF0C\u8FD9\u5C06\u5F15\u8D77\u4E00\u4E2A\u9519\u8BEF \u3002</li><li>\u5982\u679C\u5728 async def \u51FD\u6570\u5916\u9762\u4F7F\u7528 async with\uFF0C\u5C06\u5F15\u8D77\u4E00\u4E2A SyntaxError\uFF08\u8BED\u6CD5\u9519\u8BEF\uFF09\u3002</li></ul><p>\u4F8B\u5B50\uFF1A \u4F7F\u7528 async with \u80FD\u591F\u5F88\u5BB9\u6613\u5730\u5B9E\u73B0\u4E00\u4E2A\u6570\u636E\u5E93\u4E8B\u52A1\u7BA1\u7406\u5668\u3002</p><pre><code>async def commit(session, data):
    ...

    async with session.transaction():
        ...
        await session.update(data)
        ...
</code></pre><p>\u9700\u8981\u4F7F\u7528\u9501\u7684\u4EE3\u7801\u4E5F\u5F88\u7B80\u5355\uFF1A</p><pre><code>async with lock:
    ...
</code></pre><p>\u800C\u4E0D\u662F\uFF1A</p><pre><code>with (yield from lock):
    ...
</code></pre><h4 id="\u534F\u7A0B\u5D4C\u5957-2" tabindex="-1"><a class="header-anchor" href="#\u534F\u7A0B\u5D4C\u5957-2" aria-hidden="true">#</a> \u534F\u7A0B\u5D4C\u5957 2</h4><p>\u5C06\u591A\u4E2A\u534F\u7A0B\u5C01\u88C5\u5230\u4E00\u4E2A\u4E3B\u534F\u7A0B\u4E2D\uFF08\u66F4\u8BE6\u7EC6\u89C1 aiohttp\uFF09</p><pre><code>import asyncio,aiohttp

async def fetch_async(url):
    print(url)
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as resp:
            print(resp.status)
            print(await resp.text())

tasks = [fetch_async(&#39;http://www.baidu.com/&#39;), fetch_async(&#39;http://www.cnblogs.com/ssyfj/&#39;)]

event_loop = asyncio.get_event_loop()
results = event_loop.run_until_complete(asyncio.gather(*tasks))
event_loop.close()
</code></pre><p>\u5173\u4E8E aiohttp \u6A21\u5757\u7684\u534F\u7A0B\u5D4C\u5957\uFF0C\u5D4C\u5957\u66F4\u52A0\u660E\u663E</p><h3 id="_6-\u5F02\u5E38\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_6-\u5F02\u5E38\u5904\u7406" aria-hidden="true">#</a> 6. \u5F02\u5E38\u5904\u7406</h3><p><strong>\u56DE\u987E</strong>\uFF1A<a href="">\u5F02\u5E38\u4E0E\u6355\u83B7</a></p>`,29),cs=t("<blockquote><p><strong>\u80CC\u666F\u63CF\u8FF0\uFF1A</strong></p><ul><li>\u534F\u7A0B\u53EF\u901A\u8FC7 <code>asyncio.Task</code> \u4F5C\u4E3A\u72EC\u7ACB\u5355\u5143\u542F\u52A8\uFF0C\u5176\u4E2D\u7684 <code>cancel()</code> \u53EF\u4EE5\u4F7F\u4EFB\u52A1\u4E2D\u9014\u5F3A\u5236\u505C\u6B62\u3002</li><li>\u7C7B\u4F3C\u7684\u5F02\u6B65\u751F\u6210\u5668\u4E5F\u53EF\u4EE5\u901A\u8FC7 <code>aclose()</code> \u5F3A\u5236\u7ED3\u675F\u3002</li><li>\u5F53\u4E00\u4E2A <code>\u4EFB\u52A1</code> \u6216 <code>\u5F02\u6B65\u751F\u6210\u5668</code> \u88AB\u5916\u90E8\u5F3A\u5236\u7EC8\u6B62\u7684\u65F6\u5019\uFF0C\u4F1A\u4ECE\u5F53\u524D\u7684 <code>await</code> \u6216 <code>yield</code> \u8BED\u53E5\u629B\u51FA <code>asyncio.CancelledError</code>\uFF0C\u63A5\u4E0B\u6765\u4ECE\u8FD9\u4E2A\u9519\u8BEF\u8BF4\u8D77...</li></ul></blockquote><p><strong>asyncio.CancelledError</strong></p>",2),is=n("blockquote",null,[n("p",null,[s("\u53D6\u6D88 "),n("code",null,"asyncio"),s(" \u4EFB\u52A1\u65F6\uFF0C\u53EF\u4EE5\u6355\u83B7\u6B64\u5F02\u5E38\u4EE5\u6267\u884C\u81EA\u5B9A\u4E49\u64CD\u4F5C\u3002")])],-1),ls=n("code",null,"concurrent.futures.CancelledError",-1),us=n("code",null,"Exception",-1);function rs(ds,ks){const p=l("ExternalLinkIcon"),c=l("Alert"),o=l("Font"),i=l("Badge");return r(),d("div",null,[v,n("p",null,[n("a",m,[s("asyncio API \u6587\u6863"),a(p)])]),b,a(c,{type:"error"},{default:e(()=>[s("\u867D\u7136\u534F\u7A0B**\u5E95\u5C42\u5C31\u662F\u7528\u751F\u6210\u5668\u5B9E\u73B0**\u7684\uFF0C\u4F46\u4E0D\u8981\u5C06 \u534F\u7A0B \u548C \u751F\u6210\u5668 **\u6DF7\u6DC6**")]),_:1}),_,a(c,{type:"warning"},{default:e(()=>[s(" \u5148\u7406\u89E3\u6210\u4E00\u4E2A\u7528\u6765`\u68C0\u6D4B`\u5E76`\u6267\u884C`\u67D0\u4E9B\u4EE3\u7801\u7684 **\u6B7B\u5FAA\u73AF**")]),_:1}),h,n("ul",null,[y,n("li",null,[s("\u5C5E\u4E8E "),g,s(" \u5BF9\u8C61\uFF0C"),f,s(" \u53EF\u901A\u8FC7\u8C03\u7528 "),w,s(" \u5E76\u8FED\u4EE3\u5176\u7ED3\u679C\u6765\u63A7\u5236 "),n("ul",null,[n("li",null,[s("\u8FED\u4EE3\u7ED3\u675F\u4F1A\u5F15\u53D1 "),n("a",E,[x,a(p)]),s("\uFF0C\u8BE5\u5F02\u5E38\u7684 "),A,s(" \u5C5E\u6027\u5C06\u5B58\u653E\u8FD4\u56DE\u503C")])])]),B]),q,a(o,{type:"info",fsize:"m"},{default:e(()=>[s("py3.7 \u4E4B\u540E\uFF0C\u6709\u4E86\u66F4\u7B80\u4FBF\u7684\u5199\u6CD5")]),_:1}),F,a(c,{type:"info"},{default:e(()=>[s("_\u53EF\u7B49\u5F85_ \u5BF9\u8C61\u6709**\u4E09\u79CD:** "),a(i,null,{default:e(()=>[s("**\u534F\u7A0B**")]),_:1}),a(i,null,{default:e(()=>[s("**\u4EFB\u52A1** ")]),_:1}),a(i,null,{default:e(()=>[s("**Future**")]),_:1})]),_:1}),n("ul",null,[T,n("li",null,[I,n("blockquote",null,[n("p",null,[C,s(" \u5E26\u6709 "),n("a",D,[N,a(p)]),s(" \u6216 "),n("a",O,[P,a(p)]),s(" \u88C5\u9970\u5668\u7684\u751F\u6210\u5668\u8FD4\u56DE\u7684 "),n("a",W,[s("generator iterator"),a(p)]),s(" \u5BF9\u8C61\u4E5F\u5C5E\u4E8E\u53EF\u7B49\u5F85\u5BF9\u8C61\uFF0C\u4F46\u5B83\u4EEC\u5E76\u672A\u5B9E\u73B0 "),n("a",j,[M,a(p)]),s("\u3002")])])]),z]),L,n("h5",R,[S,s(),a(o,{type:"dark"},{default:e(()=>[s("class asyncio.Task("),V,s(", *, loop=None, name=None)")]),_:1}),a(i,null,{default:e(()=>[s("py3.9")]),_:1})]),K,n("h5",X,[G,s(),a(o,{type:"dark"},{default:e(()=>[s("asyncio.ensure_future(obj, *, loop=None)")]),_:1})]),n("blockquote",null,[n("p",null,[s("\u5C06 "),H,s("\u5C01\u88C5\u6210\u4E00\u4E2A "),J,s(" \u5BF9\u8C61\uFF0C"),a(o,{type:"info",size:"ss"},{default:e(()=>[s("\u4F4E\u7248\u672C\u7684\u521B\u5EFA\u65B9\u5F0F\uFF0C\u5728\u6240\u6709\u7248\u672C\u6709\u6548\uFF0C\u4F46\u53EF\u8BFB\u6027\u5DEE")]),_:1}),s("\uFF0C\u63A8\u8350\u4F7F\u7528\u4E0B\u6587 "),Q])]),U,n("h5",Y,[Z,s(),a(o,{type:"dark"},{default:e(()=>[s("asyncio.create_task(coro, *, name=None)")]),_:1}),a(i,null,{default:e(()=>[s("py3.7")]),_:1})]),$,n("h5",nn,[sn,s(),a(o,{type:"dark"},{default:e(()=>[s("asyncio.wait(aws, *, loop=None, timeout=None, return_when=ALL_COMPLETED)")]),_:1})]),an,a(c,{type:"info"},{default:e(()=>[s("\u8FD4\u56DE\u7684 **\u7ED3\u679C\u96C6** \u662F\u6309\u7167\u4E8B\u4EF6\u5FAA\u73AF\u4E2D\u7684 **\u4EFB\u52A1\u5B8C\u6210\u987A\u5E8F** \u6392\u5217\u7684\uFF0C\u6240\u4EE5\u548C\u539F\u59CB\u4EFB\u52A1\u987A\u5E8F\u53EF\u80FD\u4E0D\u540C ")]),_:1}),n("h5",en,[tn,s(),a(o,{type:"dark"},{default:e(()=>[s("asyncio.gather(*aws, loop=None, return_exceptions=False)")]),_:1})]),n("blockquote",null,[n("p",null,[on,s(" \u8FD0\u884C "),a(o,{fsize:"ss"},{default:e(()=>[s("*aws")]),_:1}),s(" \u5E8F\u5217\u4E2D\u7684 "),pn,s("\uFF0C\u534F\u7A0B\u5E76\u53D1\u8FD0\u884C\u540E\u4F1A\u987A\u5E8F\u8FD4\u56DE\uFF0C"),cn])]),ln,a(c,{type:"info"},{default:e(()=>[s("\u4E0D\u4EC5\u901A\u8FC7 `await` \u8FD4\u56DE\u4EC5\u4E00\u4E2A **\u7ED3\u679C\u96C6**\uFF0C\u4E14\u987A\u5E8F\u662F **\u4F20\u5165\u4EFB\u52A1\u7684\u539F\u59CB\u987A\u5E8F** ")]),_:1}),n("h5",un,[rn,s(),a(o,{type:"dark"},{default:e(()=>[n("a",dn,[s("asyncio.as"),a(p)]),kn,s(", *, "),vn,s(", *timeout=None*)")]),_:1})]),n("blockquote",null,[n("p",null,[mn,s(" \u8FD0\u884C "),a(o,{fsize:"ss"},{default:e(()=>[s("aws")]),_:1}),s(" \u53EF\u8FED\u4EE3\u5BF9\u8C61\u4E2D\u7684 "),bn,s("\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u534F\u7A0B\u7684 "),_n,s("\uFF0C\u4F1A\u4F18\u5148 "),hn])]),n("ul",null,[n("li",null,[yn,n("ul",null,[gn,fn,n("li",null,[wn,s(": \u8D85\u65F6\u65F6\u95F4\uFF0C\u53D1\u751F\u8D85\u65F6\u5219\u5F15\u53D1 "),n("a",En,[xn,a(p)]),s("\u3002")])])]),An]),a(c,{type:"info"},{default:e(()=>[s("\u548C `wait()` \u4E00\u6837\uFF0C\u662F\u6309\u7167 **\u4EFB\u52A1\u5B8C\u6210\u987A\u5E8F** \u6392\u5217\u7684\uFF0C\u4E0D\u540C\u4E4B\u5904\u662F `as_completed(tasks)` \u53EF\u5B9E\u65F6\u8FD4\u56DE\u5F53\u524D\u5B8C\u6210\u7684\u7ED3\u679C\uFF0C\u800C `wait(tasks)` \u8981\u7B49\u5F85\u6240\u6709\u534F\u7A0B\u7ED3\u675F\u540E\uFF0C\u53BB\u8FD4\u56DE\u7684 `done` \u4E2D\u83B7\u5F97\u7ED3\u679C")]),_:1}),Bn,n("h5",qn,[Fn,s(),a(o,{type:"dark"},{default:e(()=>[s("task.add"),Tn,s(", *, *context=None*)")]),_:1})]),In,n("h5",Cn,[Dn,s(),a(o,{type:"dark"},{default:e(()=>[s("task.result()")]),_:1})]),Nn,n("ul",null,[n("li",null,[On,n("ul",null,[Pn,n("li",null,[s("\u5982\u679C "),Wn,s(" \u72B6\u6001\u4E3A "),jn,s("\uFF0C\u4F1A\u5F15\u53D1\u4E00\u4E2A "),n("a",Mn,[zn,a(p)]),s(" \u5F02\u5E38\u3002")]),n("li",null,[s("\u5982\u679C "),Ln,s(" \u72B6\u6001\u4E3A "),Rn,s(" or "),Sn,s(" \uFF0C\u4F1A\u5F15\u53D1\u4E00\u4E2A "),n("a",Vn,[Kn,a(p)]),s(" \u5F02\u5E38\u3002")])])]),Xn]),Gn,n("p",null,[n("a",Hn,[s("Futures"),a(p)])]),Jn,n("ul",null,[n("li",null,[s("\u534F\u7A0B\u4F1A\u7B49\u5F85 Future \u5BF9\u8C61"),a(o,null,{default:e(()=>[s("\u76F4\u5230\u5B83\u6709\u7ED3\u679C\u3001\u6216\u6709\u5F02\u5E38\u3001\u6216\u88AB\u53D6\u6D88")]),_:1}),s("\uFF0C\u56E0\u6B64\u793A\u4F8B\u7A0B\u5E8F\u4F1A\u963B\u585E")])]),a(c,{type:"warning"},{default:e(()=>[s("\u7ECF\u9A8C\uFF1A\u9762\u5411\u7528\u6237\u7684\u63A5\u53E3\uFF08\u9020\u51FA\u7684\u8F6E\u5B50\uFF09\u4E0D\u8981\u66B4\u9732 Future \u5BF9\u8C61\uFF0C\u4F7F\u7528[loop.create_future()](/back_end/python/base/\u8D44\u6E90\u8C03\u5EA6/\u534F\u7A0B#351-\u521B\u5EFAfuture)\u521B\u5EFA Future\uFF0C\u53EF\u4EE5\u8BA9 Future \u5BF9\u8C61\u4F7F\u7528\u5176\u4ED6\u4E8B\u4EF6\u5FAA\u73AF\u5B9E\u73B0\uFF0C\u53EF\u4EE5\u6CE8\u5165\u81EA\u5DF1\u7684\u4F18\u5316\u5B9E\u73B0")]),_:1}),Qn,a(o,{type:"dark"},{default:e(()=>[s("set_result(self, \\*args, \\*\\*kwargs)")]),_:1}),Un,a(c,{type:"info"},{default:e(()=>[s(" \u5B9E\u9645\u5F00\u53D1\u8FC7\u7A0B\u4E2D\uFF0C\u7ECF\u5E38\u4F1A\u9047\u5230\u7B2C\u4E09\u65B9\u5E93\u65E0 asyncio\uFF0C\u5DF2\u540C\u6B65\u7684\u5F62\u5F0F\u5B58\u5728\uFF0C\u56E0\u6B64\u9700\u8981\u6539\u5199\u4E3A\u5F02\u6B65\u534F\u7A0B\u6765\u63D0\u9AD8\u5E76\u53D1")]),_:1}),Yn,a(o,{type:"dark"},{default:e(()=>[s("loop.run_in_executor(executor, func, \\*args)")]),_:1}),Zn,n("ul",null,[$n,n("li",null,[ns,n("ul",null,[ss,n("li",null,[s("setp2\uFF1A\u8C03\u7528 "),a(o,{fsize:"ss"},{default:e(()=>[s("asyncio.wrap_future")]),_:1}),s(" \u5C06 "),as,s(" \u5BF9\u8C61\u5305\u88C5\u4E3A"),es,s(" \u5BF9\u8C61\u5E76\u8FD4\u56DE")])])]),ts]),os,a(c,{type:"info"},{default:e(()=>[s("\u5982\u679C `gather()` _\u88AB\u53D6\u6D88_\uFF0C\u6240\u6709\u88AB\u63D0\u4EA4 (\u5C1A\u672A\u5B8C\u6210) \u7684\u53EF\u7B49\u5F85\u5BF9\u8C61\u4E5F\u4F1A _\u88AB\u53D6\u6D88_")]),_:1}),ps,a(c,{type:"error"},{default:e(()=>[s(" \u5F02\u6B65\u7684\u5F02\u5E38\u82E5\u6355\u83B7\u4E0D\u5F53\uFF0C\u4F1A\u9020\u6210\u96BE\u4EE5\u53D1\u73B0\u7684 **bug\uFF01\uFF01**")]),_:1}),cs,a(c,{type:"queen"},{default:e(()=>[s("\u8BE5\u9519\u8BEF\u57FA\u7C7B\u5DF2\u5728"),a(i,null,{default:e(()=>[s("py3.8")]),_:1}),s(" \u4E2D\u66F4\u6539\u4E3A `BaseException`")]),_:1}),is,n("p",null,[s("\u5728"),a(i,null,{default:e(()=>[s("py3.8")]),_:1}),s(" \u4EE5\u4E0B\u7684\u7248\u672C\uFF0C\u548C "),ls,s(" \u4E00\u81F4\uFF0C\u57FA\u7C7B\u4E3A "),us])])}const bs=u(k,[["render",rs],["__file","asyncio\u57FA\u7840.html.vue"]]);export{bs as default};
