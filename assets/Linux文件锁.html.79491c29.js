import{_ as o}from"./plugin-vueexport-helper.2444895f.js";import{o as e,c,e as l,a as n,b as s,d as p,f as a,r as i}from"./app.c84c9b2a.js";const u="/assets/\u591A\u7EBF\u7A0B\u6587\u4EF6\u6B7B\u9501.ff2e959d.jpg",r={},k=n("p",null,[n("strong",null,"Linux"),s(" \u4E0B "),n("strong",null,"Python"),s(" \u6587\u4EF6\u9501\u7684\u4F7F\u7528")],-1),d=a('<p>\u5728\u5E76\u53D1\u60C5\u51B5\u4E0B\uFF0C\u591A\u4E2A\u7EBF\u7A0B/\u8FDB\u7A0B\u6C60 \u5BF9\u540C\u4E00\u6587\u4EF6\u8FDB\u884C\u8BFB\u5199\uFF0C\u5982 <strong>grpc</strong> \u7EBF\u7A0B\u6C60\u6536\u5230\u591A\u4E2A\u8BF7\u6C42\u540C\u65F6\u6539\u5199\u4E00\u4EFD\u6587\u4EF6\u7684\u60C5\u51B5\uFF0C</p><p>\u6B64\u65F6\u9700\u8981\u7528\u5230 <strong>fcntl</strong> \u6765\u5BF9\u6587\u4EF6\u7684\u8BFB\u5199\u52A0\u9501</p><h2 id="linux-\u4E2D\u7684\u6587\u4EF6\u9501" tabindex="-1"><a class="header-anchor" href="#linux-\u4E2D\u7684\u6587\u4EF6\u9501" aria-hidden="true">#</a> Linux \u4E2D\u7684\u6587\u4EF6\u9501</h2><p>\u5728 <strong>Linux</strong> \u4E2D\uFF0C<strong>flock</strong> \u548C <strong>fcntl</strong> \u90FD\u662F\u7CFB\u7EDF\u8C03\u7528\uFF0C\u800C <strong>lockf</strong> \u5219\u662F\u5E93\u51FD\u6570\uFF0C <strong>lockf</strong> \u5219\u662F <strong>fcntl</strong> \u7684\u5C01\u88C5\uFF0C\u56E0\u6B64 <strong>lockf</strong> \u548C <strong>fcntl</strong> \u5728\u5E95\u5C42\u5B9E\u73B0\u662F\u4E00\u6837\u7684\uFF0C\u5BF9\u6587\u4EF6\u52A0\u9501\u7684\u6548\u679C\u4E5F\u662F\u4E00\u6837\u7684</p><p>\u9996\u5148\u8BF4\u4E00\u4E9B\u6982\u5FF5\uFF1A</p><ul><li><strong>\u6587\u4EF6\u9501\uFF1A</strong> \u9488\u5BF9\u6574\u4E2A\u6587\u4EF6\u7684\u9501\uFF0C\u5982 <strong>flock</strong></li><li><strong>\u8BB0\u5F55\u9501\uFF1A</strong> \u9488\u5BF9\u6574\u4E2A\u6587\u4EF6\u548C\u6587\u4EF6\u90E8\u5206\u5B57\u8282\u7684\u9501\uFF0C\u5982 <strong>fcntl</strong>\u3001<strong>lockf</strong></li><li><strong>\u6392\u4ED6\u9501\uFF1A</strong> \u4E5F\u53EF\u4EE5\u79F0\u4E3A\u5199\u9501\u3001\u72EC\u5360\u9501\uFF0C\u540C\u4E00\u65F6\u95F4\u53EA\u6709\u4E00\u4E2A\u8FDB\u7A0B\u53EF\u4EE5\u52A0\u9501</li><li><strong>\u5171\u4EAB\u9501\uFF1A</strong> \u4E5F\u53EF\u4EE5\u79F0\u4E3A\u8BFB\u9501\uFF0C\u652F\u6301\u591A\u4E2A\u8FDB\u7A0B\u5E76\u53D1\u8BFB\u6587\u4EF6\u5185\u5BB9\uFF0C\u4F46\u4E0D\u53EF\u4EE5\u5199</li><li><strong>\u7761\u7720\u9501\uFF1A</strong> \u4E00\u822C\u548C\u7B49\u5F85\u961F\u5217\u540C\u65F6\u5B58\u5728\uFF0C\u5F53\u65E0\u6CD5\u83B7\u53D6\u9501\u7684\u65F6\u5019\u4F1A\u5728\u7B49\u5F85\u961F\u5217\u4E2D\u7761\u7720\uFF0C\u76F4\u5230\u6EE1\u8DB3\u6761\u4EF6\u88AB\u5524\u9192\uFF0C\u5982 <strong>semaphore</strong>\u3001<strong>mutex</strong></li><li><strong>\u81EA\u65CB\u9501\uFF1A</strong> \u81EA\u65CB\u9501\u5728\u88AB\u6301\u6709\u65F6\uFF0C\u5176\u5B83\u8FDB\u7A0B\u518D\u7533\u8BF7\u65F6\u5C06 <strong>\u4E0D\u65AD\u201D \u81EA\u65CB \u201D\uFF08\u6B7B\u5FAA\u73AF\uFF09</strong> \uFF0C\u4E0D\u4F1A\u9677\u5165\u7761\u7720\uFF0C\u76F4\u5230\u6301\u6709\u8005\u91CA\u653E\uFF0C\u4E3A\u4FDD\u8BC1\u6027\u80FD\uFF0C\u81EA\u65CB\u9501\u4E0D\u5E94\u88AB\u6301\u6709\u65F6\u95F4\u8FC7\u957F</li><li><strong>\u529D\u544A\u9501\uFF08\u5EFA\u8BAE\u9501\uFF09\uFF1A</strong> \u4E0D\u8981\u6C42\u8FDB\u7A0B\u4E00\u5B9A\u8981\u9075\u5B88\uFF0C\u662F\u4E00\u79CD\u7EA6\u5B9A\u4FD7\u6210\u7684\u89C4\u5219\uFF0C\u67D0\u8FDB\u7A0B\u6301\u6709\u5EFA\u8BAE\u9501\u7684\u65F6\u5019\uFF0C\u5176\u5B83\u8FDB\u7A0B\u4F9D\u7136\u53EF\u4EE5\u5F3A\u5236\u64CD\u4F5C\uFF0C\u5982 <strong>flock</strong>\u3001<strong>fcntl</strong></li><li><strong>\u5F3A\u5236\u9501\uFF1A</strong> \u662F <strong>\u5185\u6838\u884C\u4E3A</strong>\uFF0C\u5728\u7CFB\u7EDF\u8C03\u7528\u8FDD\u53CD\u7EA6\u675F\u6761\u4EF6\u65F6\uFF0C\u5185\u6838\u5C06\u76F4\u63A5\u963B\u62E6\uFF0C\u5982 <strong>fcntl</strong>\uFF08<em><strong>fcntl</strong>\u4E5F\u53EF\u5B9E\u73B0\u5F3A\u5236\u9501\uFF0C\u4F46\u4E0D\u5EFA\u8BAE\u4F7F\u7528</em> \uFF09</li></ul><h2 id="\u7CFB\u7EDF\u8C03\u7528-fcntl-\u548C-ioctl" tabindex="-1"><a class="header-anchor" href="#\u7CFB\u7EDF\u8C03\u7528-fcntl-\u548C-ioctl" aria-hidden="true">#</a> \u7CFB\u7EDF\u8C03\u7528 fcntl \u548C ioctl</h2>',7),v={href:"https://docs.python.org/zh-cn/3/library/fcntl.html?highlight=fcntl",target:"_blank",rel:"noopener noreferrer"},m=a(`<h3 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h3><p><strong>Linux</strong> \u7684 <code>flock()</code> \u7684\u51FD\u6570\u539F\u578B\u5982\u4E0B</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">flock</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">int</span> operation<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0C\u53C2\u6570 <code>fd</code> \u8868\u793A\u6587\u4EF6\u63CF\u8FF0\u7B26\uFF1B\u53C2\u6570 <code>operation</code> \u6307\u5B9A\u8981\u8FDB\u884C\u7684\u9501\u64CD\u4F5C\uFF0C\u8BE5\u53C2\u6570\u7684\u53D6\u503C\u6709\u5982\u4E0B\u51E0\u79CD</p><ul><li><strong>LOCK_SH\uFF1A</strong> \u521B\u5EFA\u4E00\u4E2A <strong>\u5171\u4EAB\u9501</strong>\uFF0C\u5728\u4EFB\u610F\u65F6\u95F4\u5185\uFF0C\u4E00\u4E2A\u6587\u4EF6\u7684\u5171\u4EAB\u9501 <strong>\u53EF\u4EE5\u88AB\u591A\u4E2A\u8FDB\u7A0B\u62E5\u6709</strong></li><li><strong>LOCK_EX\uFF1A</strong> \u521B\u5EFA\u4E00\u4E2A <strong>\u6392\u4ED6\u9501</strong>\uFF0C\u5728\u4EFB\u610F\u65F6\u95F4\u5185\uFF0C\u4E00\u4E2A\u6587\u4EF6\u7684\u6392\u4ED6\u9501 <strong>\u53EA\u80FD\u88AB\u4E00\u4E2A\u8FDB\u7A0B\u62E5\u6709</strong></li><li><strong>LOCK_UN\uFF1A</strong> <strong>\u89E3\u9501</strong>\uFF0C\u5220\u9664\u8BE5\u8FDB\u7A0B\u521B\u5EFA\u7684\u9501</li><li><strong>LOCK_MAND\uFF1A</strong> \u7528\u4E8E <strong>\u5171\u4EAB\u6A21\u5F0F\u7684\u5F3A\u5236\u9501</strong>\uFF0C\u5B83\u53EF\u4EE5\u4E0E <strong>LOCK_READ</strong> \u6216\u8005 <strong>LOCK_WRITE</strong> \u8054\u5408\u4F7F\u7528\uFF0C\u8868\u793A <strong>\u662F\u5426\u5141\u8BB8 \u5E76\u53D1\u8BFB \u6216 \u5E76\u53D1\u5199</strong> \u64CD\u4F5C</li></ul><p>\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u5982\u679C\u52A0\u9501\u8BF7\u6C42 <strong>\u4E0D\u80FD\u88AB\u7ACB\u5373\u6EE1\u8DB3</strong>\uFF0C\u90A3\u4E48\u7CFB\u7EDF\u8C03\u7528 <code>flock()</code> <strong>\u963B\u585E\u5F53\u524D\u8FDB\u7A0B</strong></p><blockquote><p>\u82E5\u8FDB\u7A0B\u8981\u8BF7\u6C42\u4E00\u4E2A\u6392\u4ED6\u9501\uFF0C\u4F46\u6B64\u65F6\u5DF2\u7ECF\u88AB\u5176\u4ED6\u8FDB\u7A0B\u83B7\u53D6\u4E86\u8FD9\u4E2A\u9501\uFF0C\u90A3\u4E48\u8BE5\u8FDB\u7A0B\u5C06\u4F1A\u88AB\u963B\u585E</p></blockquote><h4 id="lockf-\u548C-fcntl" tabindex="-1"><a class="header-anchor" href="#lockf-\u548C-fcntl" aria-hidden="true">#</a> lockf \u548C fcntl</h4><p>\u51FD\u6570\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">fcntl</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">int</span> \u2318<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token comment">/* arg */</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">struct</span> <span class="token class-name">flock</span> <span class="token punctuation">{</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  
<span class="token keyword">short</span> l_type<span class="token punctuation">;</span> 		<span class="token comment">/* Type of lock: F_RDLCK, F_WRLCK, F_UNLCK */</span>
<span class="token keyword">short</span> l_whence<span class="token punctuation">;</span> 	<span class="token comment">/* How to interpret l_start: SEEK_SET, SEEK_CUR, SEEK_END */</span>
<span class="token class-name">off_t</span> l_start<span class="token punctuation">;</span>   	<span class="token comment">/* Starting offset for lock */</span> 
<span class="token class-name">off_t</span> l_len<span class="token punctuation">;</span>     	<span class="token comment">/* Number of bytes to lock */</span> 
<span class="token class-name">pid_t</span> l_pid<span class="token punctuation">;</span> 		<span class="token comment">/* PID of process blocking our lock (F_GETLK only) */</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>         
<span class="token punctuation">}</span><span class="token punctuation">;</span> \`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u76F8\u5173\u7684 <strong>cmd</strong> \u6709\u4E09\u79CD</p><ul><li><strong>F_SETLK\uFF1A</strong> \u8BBE\u7F6E\u6587\u4EF6\u9501\uFF08<em><strong>\u975E\u963B\u585E</strong></em> \uFF09</li><li><strong>F_SETLKW\uFF1A</strong> \u8BBE\u7F6E\u6587\u4EF6\u9501\uFF08<em><strong>\u963B\u585E</strong></em> \uFF09</li><li><strong>F_GETLK\uFF1A</strong> \u83B7\u53D6\u9501\u4FE1\u606F\uFF0C\u4F1A\u4FEE\u6539\u6211\u4EEC\u4F20\u5165\u7684 <strong>struct flock</strong></li></ul><p><strong>fcntl/lockf</strong> \u7684\u7279\u6027\u6709</p><ul><li>\u4E0A\u9501\u53EF\u4EE5\u9012\u5F52</li><li>\u52A0\u8BFB\u9501\uFF08<em>\u5171\u4EAB\u9501</em>\uFF09<strong>\u5FC5\u987B\u662F\u8BFB</strong>\u6253\u5F00\u7684\uFF0C\u52A0\u5199\u9501\uFF08<em>\u6392\u4ED6\u9501</em>\uFF09\u6587\u4EF6 <strong>\u5FC5\u987B\u662F\u5199</strong> \u6253\u5F00\u7684</li><li>\u7531 <strong>fork</strong> \u4EA7\u751F\u7684\u5B50\u8FDB\u7A0B <strong>\u4E0D\u7EE7\u627F</strong> \u7236\u8FDB\u7A0B\u6240\u8BBE\u7F6E\u7684\u9501</li><li><strong>\u652F\u6301\u5F3A\u5236\u6027\u9501\uFF1A</strong> \u5BF9\u4E00\u4E2A\u7279\u5B9A\u6587\u4EF6\u6253\u5F00\u5176\u8BBE\u7F6E <strong>\u7EC4ID\u4F4D\uFF08<em>S_ISGID</em>\uFF09</strong> \uFF0C\u5E76\u5173\u95ED\u5176 <strong>\u7EC4\u6267\u884C\u4F4D\uFF08<em>S_IXGRP</em>\uFF09</strong> \uFF0C\u5219\u5BF9\u8BE5\u6587\u4EF6\u5F00\u542F\u4E86\u5F3A\u5236\u6027\u9501\u673A\u5236\uFF0C\u5728 <strong>Linux</strong> \u4E2D\u82E5\u4F7F\u7528\u5F3A\u5236\u6027\u9501\uFF0C\u5219\u8981\u5728\u6587\u4EF6\u7CFB\u7EDF <strong>mount</strong> \u65F6\uFF0C\u4F7F\u7528 <code>-o mand</code> \u6253\u5F00\u8BE5\u673A\u5236\uFF08<em>\u7528\u5F97\u5C11</em>\uFF09</li></ul><h3 id="python-\u7684-fcntl-\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#python-\u7684-fcntl-\u6A21\u5757" aria-hidden="true">#</a> Python \u7684 fcntl \u6A21\u5757</h3><p>\u51FD\u6570\uFF1A<code>fcntl.flock(fd, operation)</code></p><p><code>fd</code> \u662F\u7CFB\u7EDF\u8C03\u7528 <strong>open</strong> \u8FD4\u56DE\u7684\u6587\u4EF6\u63CF\u8FF0\u7B26\uFF0C<code>operation</code> \u7684\u53EF\u9009\u9879\u6709\uFF1A</p><ul><li><strong>LOCK_SH\uFF1A</strong> \u5171\u4EAB\u9501</li><li><strong>LOCK_EX\uFF1A</strong> \u6392\u4ED6\u9501</li><li><strong>LOCK_UN\uFF1A</strong> \u89E3\u9501</li><li><strong>LOCK_NB\uFF1A</strong> \u975E\u963B\u585E\uFF08<em>\u4E0E\u4E0A\u8FF0\u4E09\u79CD\u64CD\u4F5C\u4E00\u8D77\u4F7F\u7528</em>\uFF09</li></ul><p>\u60F3\u5728 <strong>\u672A\u83B7\u5F97\u6392\u4ED6\u9501\u60C5\u51B5\u4E0B\u4E0D\u963B\u585E\u8BE5\u8FDB\u7A0B</strong>\uFF0C\u53EF\u4EE5\u5C06 <strong>LOCK_NB</strong> \u548C <strong>LOCK_SH</strong> \u6216 <strong>LOCK_EX</strong> \u8054\u5408\u4F7F\u7528\uFF0C\u90A3\u4E48\u7CFB\u7EDF\u5C31\u4E0D\u4F1A\u963B\u585E\u8BE5\u8FDB\u7A0B</p><h5 id="\u7B80\u5355\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5355\u793A\u4F8B" aria-hidden="true">#</a> \u7B80\u5355\u793A\u4F8B</h5><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># flock \u751F\u6210\u7684\u662F\u529D\u544A\u9501\uFF0C\u56E0\u6B64\u8FDB\u7A0B\u53EF\u4EE5\u6B63\u5E38\u6253\u5F00\u6587\u4EF6\uFF0C\u6B64\u65F6\u8BED\u53E5\u5747\u53EF\u88AB\u6267\u884C</span>
fd <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span>  					

<span class="token comment"># \u68C0\u6D4B\u6587\u4EF6\u662F\u5426\u88AB\u52A0\u9501\uFF0C\u5982\u679C\u5DF2\u7ECF\u4E0A\u4E86\u9501\uFF0C\u90A3\u4E48\u8FD9\u91CC\u5C31\u4F1A\u88AB\u963B\u585E\uFF0C\u82E5\u591A\u7EBF\u7A0B\uFF0C\u6B64\u65F6\u4F1A\u963B\u585E\u7EBF\u7A0B\u540E\u7EED\u6267\u884C\uFF08lll_futex_wait\uFF09</span>
fcntl<span class="token punctuation">.</span>flock<span class="token punctuation">(</span>fd<span class="token punctuation">,</span> fcntl<span class="token punctuation">.</span>LOCK_EX<span class="token punctuation">)</span>  

<span class="token comment"># \u7528 LOCK_NB \u5C31\u4E0D\u4F1A\u88AB\u963B\u585E\uFF08\u7EBF\u7A0B\u4F1A\u7EE7\u7EED\u6267\u884C\uFF0C\u5982\u62A2\u9501\u64CD\u4F5C\u7B49\uFF09</span>
fcntl<span class="token punctuation">.</span>flock<span class="token punctuation">(</span>fd<span class="token punctuation">,</span> fcntl<span class="token punctuation">.</span>LOCK_EX <span class="token operator">|</span> fcntl<span class="token punctuation">.</span>LOCK_NB<span class="token punctuation">)</span>  

<span class="token comment"># \u5BF9\u6587\u4EF6\u8FDB\u884C\u89E3\u9501</span>
fcntl<span class="token punctuation">.</span>flock<span class="token punctuation">(</span>fd<span class="token punctuation">.</span>fcntl<span class="token punctuation">.</span>LOCK_UN<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5BF9\u6587\u4EF6 <code>close()</code> \u540E\u6587\u4EF6\u9501\u4F1A\u5931\u6548</li><li>\u8FDB\u7A0B\u7ED3\u675F\u540E\u6587\u4EF6\u9501\u4F1A\u5931\u6548</li></ul><h4 id="flock-\u548C-lockf-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#flock-\u548C-lockf-\u7684\u533A\u522B" aria-hidden="true">#</a> <strong>flock \u548C lockf \u7684\u533A\u522B</strong></h4><ol><li><p><strong>flock</strong> \u53EA\u80FD\u5BF9 <strong>\u6574\u4E2A\u6587\u4EF6</strong> \u8D77\u4F5C\u7528\uFF0C\u800C\u4E0D\u80FD\u5BF9\u6587\u4EF6\u7684\u67D0\u4E00\u90E8\u5206\u4E0A\u9501\uFF0C<strong>lockf</strong> \u53EF\u4EE5\u5BF9\u6587\u4EF6\u7684\u67D0\u4E2A\u533A\u57DF\u8FDB\u884C\u4E0A\u9501</p></li><li><p><strong>flock</strong> \u53EA\u80FD\u4EA7\u751F\u529D\u544A\u6027\u9501\uFF0C<strong>flock</strong> \u53EF\u4EE5\u6709\u5171\u4EAB\u9501\u548C\u6392\u4ED6\u9501\uFF0C\u800C <strong>lockf</strong> \u53EA\u652F\u6301\u6392\u4ED6\u9501</p></li><li><p>\u5728 <strong>fork/dup</strong> \u7684\u60C5\u51B5\u4E0D\u540C\uFF0C<strong>flock</strong> \u9501\u53EF\u4EE5\u9012\u5F52\uFF0C\u5373\u901A\u8FC7 <strong>fork</strong> \u6216\u8005 <strong>dup</strong> \u4EA7\u751F\u7684\u4E24\u4E2A <strong>fd</strong>\uFF0C\u90FD\u53EF\u4EE5\u8FDB\u884C\u52A0\u9501\u800C\u4E0D\u4F1A\u6B7B\u9501</p></li><li><p><strong>flock</strong> \u4E0D\u80FD\u5728 <strong>NFS</strong> \u6587\u4EF6\u7CFB\u7EDF\u4E0A\u4F7F\u7528\uFF0C\u8981\u5728 <strong>NFS</strong> \u4E0A\u4F7F\u7528\u9700\u8981\u7528 <strong>fcntl</strong></p></li></ol>`,24),f=n("code",null,"flock()",-1),g={href:"https://docs.python.org/zh-cn/3/library/exceptions.html#OSError",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"OSError",-1),_=a(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> fcntl
<span class="token keyword">import</span> os<span class="token punctuation">,</span> time
<span class="token keyword">import</span> uuid

FILE <span class="token operator">=</span> <span class="token string">&quot;counter.txt&quot;</span>

<span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>FILE<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># create the counter file if it doesn&#39;t exist</span>
    <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>FILE<span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span>
    vnc_line <span class="token operator">=</span> <span class="token string">&#39;123cajfg: 127.0.0.1:15900&#39;</span>
    <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>vnc_line <span class="token operator">+</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
    <span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># \u7531\u4E8Eflock\u751F\u6210\u7684\u662F\u529D\u544A\u9501\uFF0C\u4E0D\u80FD\u963B\u6B62\u8FDB\u7A0B\u5BF9\u6587\u4EF6\u7684\u64CD\u4F5C\uFF0C\u6240\u4EE5\u8FD9\u91CC\u53EF\u4EE5\u6B63\u5E38\u6253\u5F00\u6587\u4EF6</span>
    <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>FILE<span class="token punctuation">,</span> <span class="token string">&quot;a+&quot;</span><span class="token punctuation">)</span> 
    
    <span class="token comment"># \u4E3A\u4E86\u907F\u514D\u540C\u65F6\u64CD\u4F5C\u6587\u4EF6\uFF0C\u9700\u8981\u7A0B\u5E8F\u81EA\u5DF1\u6765\u68C0\u67E5\u8BE5\u6587\u4EF6\u662F\u5426\u5DF2\u7ECF\u88AB\u52A0\u9501,\u82E5\u68C0\u67E5\u5230\u52A0\u9501\uFF0C\u8FDB\u7A0B\u4F1A\u88AB\u963B\u585E</span>
    fcntl<span class="token punctuation">.</span>flock<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>fileno<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fcntl<span class="token punctuation">.</span>LOCK_EX<span class="token punctuation">)</span>   
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;acquire lock&#39;</span><span class="token punctuation">)</span>
    now_port <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    new_port <span class="token operator">=</span> now_port <span class="token operator">+</span> <span class="token number">1</span>
    token <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>uuid<span class="token punctuation">.</span>uuid4<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># file.seek(0)</span>
    vnc_line <span class="token operator">=</span> <span class="token string">&#39;:&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>token<span class="token punctuation">,</span> <span class="token string">&#39; 127.0.0.1&#39;</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>new_port<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>vnc_line <span class="token operator">+</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span> os<span class="token punctuation">.</span>getpid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;=&gt;&quot;</span><span class="token punctuation">,</span> new_port
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># unlocks the file</span>
    <span class="token keyword">print</span> <span class="token string">&#39;release lock&#39;</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="\u591A\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u591A\u7EBF\u7A0B" aria-hidden="true">#</a> \u591A\u7EBF\u7A0B</h5><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> fcntl
<span class="token keyword">import</span> threading
<span class="token keyword">import</span> time

<span class="token keyword">def</span> <span class="token function">writetoTxt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">id</span> <span class="token operator">=</span> threading<span class="token punctuation">.</span>currentThread<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getName<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;aaa.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        <span class="token comment"># fcntl.flock(f.fileno(), fcntl.LOCK_EX)  # \u52A0\u9501</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{} acquire lock&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;&quot;write from&quot; + str(i) + {} \\n&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
	<span class="token comment"># \u5728 with \u5757\u5916\uFF0C\u6587\u4EF6\u5173\u95ED\uFF0C\u81EA\u52A8\u89E3\u9501</span>
	<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{} exit&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        t <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>writetoTxt<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        t<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u591A\u4E2A\u7EC8\u7AEF\u4E2D\u542F\u52A8\u4E0A\u9762\u7684\u7A0B\u5E8F\uFF0C\u4F1A\u53D1\u73B0\u5B83\u4EEC\u76F8\u4E92\u963B\u585E</p><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><ul><li>\u5BF9\u4E8E\u6587\u4EF6\u7684 <code>close()</code> \u64CD\u4F5C\u4F1A\u4F7F\u6587\u4EF6\u9501\u5931\u6548</li><li>\u540C\u7406\uFF0C\u8FDB\u7A0B\u7ED3\u675F\u540E\u6587\u4EF6\u9501\u5931\u6548</li><li><code>flock()</code> \u7684 <strong>LOCK_EX</strong> \u662F <strong>\u201C\u529D\u544A\u9501\u201D</strong>\uFF0C\u7CFB\u7EDF\u5185\u6838\u4E0D\u4F1A\u5F3A\u5236\u68C0\u67E5\u9501\u7684\u72B6\u6001\uFF0C\u9700\u8981\u5728\u4EE3\u7801\u4E2D\u8FDB\u884C\u6587\u4EF6\u64CD\u4F5C\u7684\u5730\u65B9\u663E\u5F0F\u68C0\u67E5\u624D\u80FD\u751F\u6548</li></ul></div><p>\u82E5\u8DE8\u5E73\u53F0\uFF0C\u53EF\u81EA\u5DF1\u5B9E\u73B0\u6216\u4F7F\u7528 <strong>portalocker</strong> \u9B54\u6539</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> time
<span class="token comment"># import fcntl</span>

<span class="token keyword">import</span> portalocker


<span class="token keyword">def</span> <span class="token function">acquire</span><span class="token punctuation">(</span>lock_file<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> open_mode<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> timeout<span class="token punctuation">:</span> <span class="token builtin">float</span> <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    fd <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>lock_file<span class="token punctuation">,</span> open_mode<span class="token punctuation">)</span>

    lock_file_fd <span class="token operator">=</span> <span class="token boolean">None</span>
    start_time <span class="token operator">=</span> current_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> current_time <span class="token operator">&lt;</span> start_time <span class="token operator">+</span> timeout<span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token comment"># \u4EC5\u540C\u6B65\u4F7F\u7528: \u4F7F\u7528\u4E92\u65A5\u9501\u662F\u963B\u585E\u5F0F\u7684\uFF0C\u82E5\u591A\u7EBF\u7A0B\u4E2D\u542B\u5F02\u6B65\u64CD\u4F5C\u5207\u6362\u4E0A\u4E0B\u6587\u4F1A\u6B7B\u9501</span>
            portalocker<span class="token punctuation">.</span>lock<span class="token punctuation">(</span>fd<span class="token punctuation">,</span> portalocker<span class="token punctuation">.</span>LockFlags<span class="token punctuation">.</span>EXCLUSIVE<span class="token punctuation">)</span>
            <span class="token comment"># fcntl.flock(fd, fcntl.LOCK_EX | fcntl.LOCK_NB)</span>
        <span class="token comment"># except (IOError, OSError):</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">pass</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            lock_file_fd <span class="token operator">=</span> fd
            <span class="token keyword">break</span>
        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>
        current_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> lock_file_fd <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        fd<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> lock_file_fd


<span class="token keyword">def</span> <span class="token function">release</span><span class="token punctuation">(</span>lock_file_fd<span class="token punctuation">)</span><span class="token punctuation">:</span>
    portalocker<span class="token punctuation">.</span>unlock<span class="token punctuation">(</span>lock_file_fd<span class="token punctuation">)</span>
    <span class="token comment"># fcntl.flock(lock_file_fd, fcntl.LOCK_UN)</span>
    lock_file_fd<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">None</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    fp <span class="token operator">=</span> acquire<span class="token punctuation">(</span><span class="token string">&#39;/opt/ufs/xxx.json&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;r+&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> fp <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> OSError<span class="token punctuation">(</span>
            <span class="token string">&quot;Resource temporarily unavailable&quot;</span>
        <span class="token punctuation">)</span>
    fp<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    release<span class="token punctuation">(</span>fp<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container danger"><p class="custom-container-title">\u9700\u8981\u6CE8\u610F</p><p>\u82E5\u5F02\u6B65\u6846\u67B6\uFF0C\u5176\u4E2D\u6DF7\u7528\u4E86\u591A\u7EBF\u7A0B\u540C\u6B65\u64CD\u4F5C\uFF0C\u4F7F\u7528\u6587\u4EF6\u9501\u65F6\uFF0C\u6B64\u65F6\u4E00\u65E6 <strong>\u9047\u89C1\u5F02\u6B65\u963B\u585E\uFF0C\u81EA\u52A8\u5207\u6362\u4E0A\u4E0B\u6587\uFF0C\u5219\u4F1A\u51FA\u6B7B\u9501</strong> \uFF08\u591A\u7EBF\u7A0B\uFF09\u82E5\u4F7F\u7528 <strong>fcntl.LOCK_NB</strong> \u975E\u963B\u585E\uFF0C\u5219\u4F1A\u8D85\u65F6\u81F3\u62A2\u9501\u5931\u8D25\uFF0C\u6545\u9700\u8981\u907F\u514D</p><img src="`+u+`"></div><h5 id="\u4F7F\u7528\u793A\u4F8B-json-\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u793A\u4F8B-json-\u89E3\u6790" aria-hidden="true">#</a> <strong>\u4F7F\u7528\u793A\u4F8B json \u89E3\u6790</strong></h5><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">JsonConfigWithRWLock</span><span class="token punctuation">(</span>ConfigInterface<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">:</span> Path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>_config_file <span class="token operator">=</span> path
        self<span class="token punctuation">.</span>kv <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        self<span class="token punctuation">.</span>fp_lock <span class="token operator">=</span> self<span class="token punctuation">.</span>_acquire<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>_parse_data<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">_acquire</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>_config_file<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>_config_file <span class="token operator">=</span> Path<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_config_file<span class="token punctuation">)</span>
        parent_path <span class="token operator">=</span> Path<span class="token punctuation">.</span>absolute<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_config_file<span class="token punctuation">.</span>parent<span class="token punctuation">)</span>
        file_name <span class="token operator">=</span> <span class="token string">&quot;.{}.lock&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>_config_file<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>
        abs_path <span class="token operator">=</span> Path<span class="token punctuation">.</span>joinpath<span class="token punctuation">(</span>parent_path<span class="token punctuation">,</span> file_name<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> abs_path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>abs_path<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">pass</span>

        fp_lock <span class="token operator">=</span> acquire<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>abs_path<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;r+&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> fp_lock <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">raise</span> OSError<span class="token punctuation">(</span>
                <span class="token string">&quot;File Acquire Failed, Resource temporarily unavailable&quot;</span>
            <span class="token punctuation">)</span>
        <span class="token keyword">return</span> fp_lock

    <span class="token keyword">def</span> <span class="token function">release</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>fp_lock<span class="token punctuation">:</span>
            release<span class="token punctuation">(</span>self<span class="token punctuation">.</span>fp_lock<span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>fp_lock <span class="token operator">=</span> <span class="token boolean">None</span>

    <span class="token keyword">def</span> <span class="token function">__exit__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> exc_type<span class="token punctuation">,</span> exc_val<span class="token punctuation">,</span> exc_tb<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__enter__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self

    <span class="token keyword">def</span> <span class="token function">_parse_data</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>_config_file<span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>
                data <span class="token operator">=</span> fp<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> FileNotFoundError<span class="token punctuation">:</span>
            data <span class="token operator">=</span> <span class="token string">&quot;{}&quot;</span>
        <span class="token keyword">if</span> data<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>kv <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>data<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">reload</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>kv <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        self<span class="token punctuation">.</span>_parse_data<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_key</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>kv<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">set_key</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>kv<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span>key<span class="token punctuation">:</span> value<span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_all</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">dict</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>kv

    <span class="token keyword">def</span> <span class="token function">save</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>self<span class="token punctuation">.</span>kv<span class="token punctuation">,</span> indent<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>_config_file<span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>
            fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function h(y,w){const t=i("ExternalLinkIcon");return e(),c("div",null,[k,l("more"),d,n("p",null,[n("a",v,[s("\u6587\u6863\u53C2\u8003"),p(t)])]),m,n("p",null,[s("\u5982\u679C "),f,s(" \u8C03\u7528\u5931\u8D25\uFF0C\u5C31\u4F1A\u89E6\u53D1 "),n("a",g,[b,p(t)]),s(" \u5F02\u5E38")]),_])}const q=o(r,[["render",h],["__file","Linux\u6587\u4EF6\u9501.html.vue"]]);export{q as default};
